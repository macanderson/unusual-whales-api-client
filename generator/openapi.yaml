---
components:
  responses: {}
  schemas:
    Alert Rule Name:
      description: The name of the alert rule.
      example: RepeatedHits
      title: Alert Rule Name
      type: string
    Analyst Action:
      description: The action of the recommendation.
      enum:
        - initiated
        - reiterated
        - downgraded
        - upgraded
        - maintained
      example: maintained
      title: Analyst Action
      type: string
    Analyst Field Action:
      description: The action of the recommendation.
      enum:
        - initiated
        - reiterated
        - downgraded
        - upgraded
        - maintained
      example: upgraded
      title: Analyst Field Action
      type: string
    Analyst Field Firm:
      description: The firm the analyst is working for.
      example: UBS
      title: Analyst Field Firm
      type: string
    Analyst Field Name:
      description: The name of the analyst.
      example: David Vogt
      title: Analyst Field Name
      type: string
    Analyst Field Rating:
      description: The rating of the analyst.
      example: 2.44
      maximum: 5
      minimum: 0
      title: Analyst Field Rating
      type: number
    Analyst Field Recommendation:
      description: The recommendation the analyst gave out.
      enum:
        - Buy
        - Hold
        - Sell
      example: Buy
      title: Analyst Field Recommendation
      type: string
    Analyst Field Target Price:
      description: The target price of the rating.
      title: Analyst Field Target Price
      type: string
    Analyst Field Time:
      description: The UTC timestamp as a string, when the rating was released.
      title: Analyst Field Time
      example: 2023-09-11T11:21:12Z 
      type: string
    Analyst Field Title:
      description: The news title of the rating that went out.
      example: China news could create demand headwind for Apple in Dec. quarter, says UBS
      title: Analyst Field Title
      type: string
    Analyst Rating:
      description: A rating of an analyst.
      example:
        data:
          - action: maintained
            analyst_name: Tyler Radke
            firm: Citi
            rating: '3.5'
            recommendation: Buy
            sector: Technology
            target: '420.0'
            ticker: MSFT
            timestamp: 2023-09-11T11:21:12Z
            title: Citi opens 'positive catalyst watch' on Microsoft into 'catalyst path'
          - action: maintained
            analyst_name: Mark Rothschild
            firm: Canaccord Genuity
            rating: '4.91'
            recommendation: Hold
            sector: Conglomerates
            target: '11.75'
            ticker: DRETF
            timestamp: 2023-09-11T11:11:32Z
            title: Canaccord Genuity Keeps Their Hold Rating on Dream Office Real Estate Investment (DRETF)
      properties:
        action:
          $ref: '#/components/schemas/Analyst Field Action'
        analyst_name:
          $ref: '#/components/schemas/Analyst Field Name'
        firm:
          $ref: '#/components/schemas/Analyst Field Firm'
        rating:
          $ref: '#/components/schemas/Analyst Field Rating'
        recommendation:
          $ref: '#/components/schemas/Analyst Field Recommendation'
        sector:
          $ref: '#/components/schemas/Market General Sector'
        target:
          $ref: '#/components/schemas/Analyst Field Target Price'
        ticker:
          $ref: '#/components/schemas/Stock Ticker'
        timestamp:
          $ref: '#/components/schemas/Analyst Field Time'
        title:
          $ref: '#/components/schemas/Analyst Field Title'
      title: Analyst Rating
      type: object
    Analyst Recommendation:
      description: The recommendation the analyst gave out.
      enum:
        - Buy
        - Hold
        - Sell
      example: Hold
      title: Analyst Recommendation
      type: string
    Analyst Sector:
      description: A financial sector
      enum:
        - Conglomerates
        - Consumer Goods
        - Financial
        - General
        - Healthcare
        - Industrial Goods
        - Materials
        - Services
        - Technology
        - Utilities
      example: Financial
      title: Analyst Sector
      type: string
    Candle Close:
      description: The closing price of the candle.
      example: '56.79'
      title: Candle Close
      type: string
    Candle End time:
      description: The end time of the candle as UTC timestamp.
      example: 2023-09-07T20:07:00Z
      title: Candle End time
      type: string
    Candle High:
      description: The highest price of the candle.
      example: '58.12'
      title: Candle High
      type: string
    Candle Low:
      description: The lowest price of the candle.
      example: '51.90'
      title: Candle Low
      type: string
    Candle Open:
      description: The opening price of the candle.
      example: '54.29'
      title: Candle Open
      type: string
    Candle Size:
      description: The size of the candles.
      enum:
        - 1m
        - 5m
        - 10m
        - 15m
        - 30m
        - 1h
        - 4h
      example: 5m
      title: Candle Size
      type: string
    Candle Start time:
      description: The start time of the candle as UTC timestamp.
      example: 2023-09-07T20:06:00Z
      title: Candle Start time
      type: string
    Candle Total volume:
      description: The total volume of the ticker for the full trading till now.
      example: 13744676
      title: Candle Total volume
      type: integer
    Candle Volume:
      description: The volume of the candle.
      example: 10699
      title: Candle Volume
      type: integer
    Candle data:
      description: The candle data for the requested timeframe.
      example:
        data:
          - close: '56.79'
            end_time: 2023-09-07T20:11:00Z
            high: '56.79'
            low: '56.79'
            market_time: po
            open: '56.79'
            start_time: 2023-09-07T20:10:00Z
            total_volume: 13774488
            volume: 29812
          - close: '56.79'
            end_time: 2023-09-07T20:07:00Z
            high: '56.79'
            low: '56.79'
            market_time: po
            open: '56.79'
            start_time: 2023-09-07T20:06:00Z
            total_volume: 13744676
            volume: 10699
      properties:
        close:
          $ref: '#/components/schemas/Candle Close'
        end_time:
          $ref: '#/components/schemas/Candle End time'
        high:
          $ref: '#/components/schemas/Candle High'
        low:
          $ref: '#/components/schemas/Candle Low'
        market_time:
          $ref: '#/components/schemas/Market General Market Time'
        open:
          $ref: '#/components/schemas/Candle Open'
        start_time:
          $ref: '#/components/schemas/Candle Start time'
        total_volume:
          $ref: '#/components/schemas/Candle Total volume'
        volume:
          $ref: '#/components/schemas/Candle Volume'
      title: Candle data
      type: object
    Charm:
      description: ''
      example: '9.2'
      title: Charm
      type: string
    Congress Member:
      default: Nancy Pelosi
      description: |
        The full name of a congress member. Cannot contain digits/numbers.
        Spaces need to be replaced with either '+' or '%20', e.g. Adam Kinzinger -> Adam+Kinzinger or Adam%20Kinzinger.
      example: Adam Kinzinger
      title: Congress Member
      type: string
    Country & Sector exposure:
      description: ''
      example:
        country:
          - country: Ireland
            weight: '0.0164'
          - country: Other
            weight: '0.0059'
          - country: Switzerland
            weight: '0.0043'
          - country: Netherlands
            weight: '0.0015'
          - country: Canada
            weight: '0.0014'
          - country: Bermuda
            weight: '0.0011'
          - country: Israel
            weight: '0.0001'
          - country: United States
            weight: '0.9693'
        sector:
          - sector: Basic Materials
            weight: '0.022'
          - sector: Communication Services
            weight: '0.0861'
          - sector: Consumer Cyclical
            weight: '0.1091'
          - sector: Consumer Defensive
            weight: '0.0626'
          - sector: Energy
            weight: '0.041'
          - sector: Financial Services
            weight: '0.125'
          - sector: Healthcare
            weight: '0.1272'
          - sector: Industrials
            weight: '0.0816'
          - sector: Other
            weight: '0.00009999999999990905'
          - sector: Real Estate
            weight: '0.0243'
          - sector: Technology
            weight: '0.2971'
          - sector: Utilities
            weight: '0.0239'
      properties:
        country:
          $ref: '#/components/schemas/Etf Countries'
        sector:
          $ref: '#/components/schemas/Etf Sectors'
      title: Country & Sector exposure
      type: object
    DTE:
      description: The number of days until the option expires.
      example: 5
      title: DTE
      type: integer
    Daily Market Tide:
      description: ''
      example:
        data:
          - date: 2023-09-08
            net_call_premium: '660338.0000'
            net_put_premium: '-547564.0000'
            net_volume: 23558
            timestamp: 2023-09-08T09:30:00-04:00
          - date: 2023-09-08
            net_call_premium: '4907138.0000'
            net_put_premium: '-1709539.0000'
            net_volume: 64312
            timestamp: 2023-09-08T09:31:00-04:00
          - date: 2023-09-08
            net_call_premium: '4839265.0000'
            net_put_premium: '-2731793.0000'
            net_volume: 80029
            timestamp: 2023-09-08T09:32:00-04:00
      properties:
        net_call_premium:
          $ref: '#/components/schemas/Market General Net Call Premium'
        net_put_premium:
          $ref: '#/components/schemas/Market General Net Put Premium'
        net_volume:
          $ref: '#/components/schemas/Market General Net Volume'
        timestamp:
          $ref: '#/components/schemas/General Tick time'
      title: Daily Market Tide
      type: object
    Darkpool Trade:
      description: A darkpool trade.
      example:
        data:
          - canceled: false
            executed_at: 2023-02-16T00:59:44Z
            ext_hour_sold_codes: extended_hours_trade
            market_center: L
            nbbo_ask: '19'
            nbbo_ask_quantity: 6600
            nbbo_bid: '18.99'
            nbbo_bid_quantity: 29100
            premium: '121538.56'
            price: '18.9904'
            sale_cond_codes:
            size: 6400
            ticker: QID
            tracking_id: 71984388012245
            trade_code:
            trade_settlement: regular_settlement
            volume: 9946819
          - canceled: false
            executed_at: 2023-02-16T00:59:44Z
            ext_hour_sold_codes: extended_hours_trade
            market_center: L
            nbbo_ask: '19'
            nbbo_ask_quantity: 6600
            nbbo_bid: '18.99'
            nbbo_bid_quantity: 29100
            premium: '353214'
            price: '18.99'
            sale_cond_codes:
            size: 18600
            ticker: QID
            tracking_id: 71984384768588
            trade_code:
            trade_settlement: regular_settlement
            volume: 9940419
      properties:
        canceled:
          $ref: '#/components/schemas/Single Trade Is Trade Cancelled'
        executed_at:
          $ref: '#/components/schemas/Single Trade Execution Time'
        ext_hour_sold_codes:
          $ref: '#/components/schemas/Single Trade External Hour Sold Code'
        market_center:
          $ref: '#/components/schemas/Single Trade Market Center'
        nbbo_ask:
          $ref: '#/components/schemas/General Tick Price'
        nbbo_ask_quantity:
          $ref: '#/components/schemas/General Tick Price'
        nbbo_bid:
          $ref: '#/components/schemas/General Tick Price'
        nbbo_bid_quantity:
          $ref: '#/components/schemas/General Tick Price'
        premium:
          $ref: '#/components/schemas/Option Contract Premium'
        price:
          $ref: '#/components/schemas/Single Trade Price'
        sale_cond_codes:
          $ref: '#/components/schemas/Single Trade Sale Cond Code'
        size:
          $ref: '#/components/schemas/Single Trade Size'
        ticker:
          $ref: '#/components/schemas/Stock Ticker'
        tracking_id:
          $ref: '#/components/schemas/Single Trade Tracking ID'
        trade_code:
          $ref: '#/components/schemas/Single Trade Trade Code'
        trade_settlement:
          $ref: '#/components/schemas/Single Trade Settlement'
        volume:
          $ref: '#/components/schemas/Stock Day Stock Volume'
      title: Darkpool Trade
      type: object
    Delta:
      description: |
        A delta of either 10 or 25.
      title: Delta
    DynLimitAamjbjwgmep:
      description: 'The minimum stock price. Min: 0.'
      example: 5.23
      minimum: 0
      title: DynLimitAamjbjwgmep
      type: integer
    DynLimitAaxyicjnqfm:
      description: 'The minimum ratio of call options volume vs 30 day avg call options volume. Min: 0.'
      example: 0.25
      minimum: 0
      title: DynLimitAaxyicjnqfm
      type: integer
    DynLimitAazxinorviz:
      description: "The maximum open interest on that alert's contract at the time of the alert. Min: 0."
      example: 125
      minimum: 0
      title: DynLimitAazxinorviz
      type: integer
    DynLimitAbdtyoyeezo:
      description: 'The minimum open interest on that contract. Min: 0.'
      example: 12300
      minimum: 0
      title: DynLimitAbdtyoyeezo
      type: integer
    DynLimitAbmmvsjqabs:
      default: 1
      description: 'How many items to return. Default: 1. Max: 500. Min: 1.'
      example: 10
      maximum: 500
      minimum: 1
      title: DynLimitAbmmvsjqabs
      type: integer
    DynLimitAbvymhstjax:
      description: 'The minimum contract volume to open interest ratio. Min: 0.'
      example: 0.32
      minimum: 0
      title: DynLimitAbvymhstjax
      type: integer
    DynLimitAcgpkrivurz:
      description: 'The minimum open interest vs options volume ratio. Min: 0.'
      example: 0.5
      minimum: 0
      title: DynLimitAcgpkrivurz
      type: integer
    DynLimitAcuuylcrann:
      description: 'The maximum volume on that contract. Min: 0.'
      example: 55600
      minimum: 0
      title: DynLimitAcuuylcrann
      type: integer
    DynLimitAcxjjxntkyk:
      description: |-
        The minimum intraday price change of the contract from open till now.
        
        If the first traded contract filled at a price of 1.2, and the most recent trade was made at 1.5,
        then the intraday price change is: (1.5 - 1.2) / 1.2 = 0.25.
        Min: 0.
      example: 0.2
      minimum: 0
      title: DynLimitAcxjjxntkyk
      type: integer
    DynLimitAdmzqxnciez:
      description: 'The maximum floor volume to contract volume ratio. Min: 0.'
      example: 0.45
      minimum: 0
      title: DynLimitAdmzqxnciez
      type: integer
    DynLimitAdnesjuexzx:
      description: 'The minimum volatility. Min: 0.'
      example: 0.15
      minimum: 0
      title: DynLimitAdnesjuexzx
      type: integer
    DynLimitAdphwldmrqq:
      description: 'The minimum options volume. Min: 0.'
      example: 10000
      minimum: 0
      title: DynLimitAdphwldmrqq
      type: integer
    DynLimitAdpjidncqnm:
      description: 'The minimum multi leg volume to contract volume ratio. Min: 0.'
      example: 0.3
      minimum: 0
      title: DynLimitAdpjidncqnm
      type: integer
    DynLimitAdqplbgftzp:
      description: 'The maximum implied move perc. Max: 1. Min: 0.'
      example: 0.6
      maximum: 1
      minimum: 0
      title: DynLimitAdqplbgftzp
      type: integer
    DynLimitAdzgpnnkhju:
      description: 'The maximum iv rank. Max: 100. Min: 0.'
      example: 22.6
      maximum: 100
      minimum: 0
      title: DynLimitAdzgpnnkhju
      type: integer
    DynLimitAebxkkfifmq:
      description: 'The maximum open interest change of put contracts compared to the previous day. Min: -1.'
      example: 0.2
      minimum: -1
      title: DynLimitAebxkkfifmq
      type: integer
    DynLimitAemggnklpjd:
      description: 'The minimum options premium. Min: 0.'
      example: 10000
      minimum: 0
      title: DynLimitAemggnklpjd
      type: integer
    DynLimitAeqgngvyxpr:
      description: 'The maximum ratio of call options volume vs 3 day avg call options volume. Min: 0.'
      example: 1.72
      minimum: 0
      title: DynLimitAeqgngvyxpr
      type: integer
    DynLimitAfqydyatanm:
      description: 'The maximum open interest change compared to the previous day. Min: -1.'
      example: 0.2
      minimum: -1
      title: DynLimitAfqydyatanm
      type: integer
    DynLimitAfrpjgwiygb:
      description: 'The minimum call options volume. Min: 0.'
      example: 10000
      minimum: 0
      title: DynLimitAfrpjgwiygb
      type: integer
    DynLimitAfzgwiehqcl:
      description: 'The minimum size on that alert. Size is defined as the sum of the sizes of all transactions that make up the alert. Min: 0.'
      example: 125
      minimum: 0
      title: DynLimitAfzgwiehqcl
      type: integer
    DynLimitAgklwwddbbm:
      default: false
      description: Boolean wheter to only include stocks which pay dividends. Setting this to false has no effect.
      example: true
      title: DynLimitAgklwwddbbm
      type: boolean
    DynLimitAgnttnwyjni:
      description: 'The maximum contract volume to open interest ratio. Min: 0.'
      example: 1.58
      minimum: 0
      title: DynLimitAgnttnwyjni
      type: integer
    DynLimitAhijpmfgwtt:
      description: 'The maximum put to call ratio. Min: 0.'
      example: 1.5
      minimum: 0
      title: DynLimitAhijpmfgwtt
      type: integer
    DynLimitAhlqafvlumf:
      description: 'The minimum put options premium. Min: 0.'
      example: 35000
      minimum: 0
      title: DynLimitAhlqafvlumf
      type: integer
    DynLimitAielxewrxwu:
      description: 'The maximum put options volume. Min: 0.'
      example: 35000
      minimum: 0
      title: DynLimitAielxewrxwu
      type: integer
    DynLimitAiqwniqqiua:
      description: 'The maximum open interest change of call contracts compared to the previous day. Min: -1.'
      example: 0.2
      minimum: -1
      title: DynLimitAiqwniqqiua
      type: integer
    DynLimitAiqxukgpniv:
      default: 500
      description: 'How many items to return. Default: 500. Max: 500. Min: 1.'
      example: 10
      maximum: 500
      minimum: 1
      title: DynLimitAiqxukgpniv
      type: integer
    DynLimitAisbhpztyvo:
      description: 'The maximum stock price. Min: 0.'
      example: 10.53
      minimum: 0
      title: DynLimitAisbhpztyvo
      type: integer
    DynLimitAjiokysubro:
      default: false
      description: Boolean whether to only include stocks which are part of the S&P 500. Setting this to false has no effect.
      example: true
      title: DynLimitAjiokysubro
      type: boolean
    DynLimitAjrrcvnhtrz:
      description: 'The minimum iv rank. Max: 100. Min: 0.'
      example: 0.15
      maximum: 100
      minimum: 0
      title: DynLimitAjrrcvnhtrz
      type: integer
    DynLimitAktpmqoeofy:
      default: false
      description: Only include contracts where the volume is greater than the open interest.
      example: true
      title: DynLimitAktpmqoeofy
      type: boolean
    DynLimitAkuvydpeqsb:
      description: 'The minimum volume on that contract. Min: 0.'
      example: 12300
      minimum: 0
      title: DynLimitAkuvydpeqsb
      type: integer
    DynLimitAkznvpznjzo:
      description: 'The minimum strike. Min: 0.'
      example: 120.5
      minimum: 0
      title: DynLimitAkznvpznjzo
      type: integer
    DynLimitAlaetkhyrfg:
      description: 'The minimum % change to the previous Trading Day. Min: -1.'
      example: -0.45
      minimum: -1
      title: DynLimitAlaetkhyrfg
      type: integer
    DynLimitAlwzunqubqu:
      description: 'The maximum open interest. Min: 0.'
      example: 35000
      minimum: 0
      title: DynLimitAlwzunqubqu
      type: integer
    DynLimitAmfrkecwnfj:
      description: "The minimum open interest on that alert's contract at the time of the alert. Min: 0."
      example: 125
      minimum: 0
      title: DynLimitAmfrkecwnfj
      type: integer
    DynLimitAmgtudozlnq:
      description: 'The minimum ratio of put options volume vs 3 day avg put options volume. Min: 0.'
      example: 0.25
      minimum: 0
      title: DynLimitAmgtudozlnq
      type: integer
    DynLimitAmgzkptjjvn:
      description: 'The minimum put options premium. Min: 0.'
      example: 10000
      minimum: 0
      title: DynLimitAmgzkptjjvn
      type: integer
    DynLimitAmltaxtjajj:
      description: 'The minimum floor volume on that contract. Min: 0.'
      example: 12300
      minimum: 0
      title: DynLimitAmltaxtjajj
      type: integer
    DynLimitAmopjlvawgr:
      description: 'The minimum implied move. Min: 0.'
      example: 0.45
      minimum: 0
      title: DynLimitAmopjlvawgr
      type: integer
    DynLimitAmqgqebweqt:
      default: true
      description: Boolean flag whether all transactions are opening transactions based on OI, Size & Volume.
      example: true
      title: DynLimitAmqgqebweqt
      type: boolean
    DynLimitAmueidzsnsc:
      default: 100
      description: 'How many items to return. Default: 100. Max: 200. Min: 1.'
      example: 10
      maximum: 200
      minimum: 1
      title: DynLimitAmueidzsnsc
      type: integer
    DynLimitAmwliqvynaj:
      description: 'The minimum floor volume to contract volume ratio. Min: 0.'
      example: 0.2
      minimum: 0
      title: DynLimitAmwliqvynaj
      type: integer
    DynLimitAnfcxtqjiqm:
      default: true
      description: Boolean flag whether a transaction is a intermarket sweep.
      example: true
      title: DynLimitAnfcxtqjiqm
      type: boolean
    DynLimitAnqyzpkbbzf:
      default: false
      description: Only return tickers, that are in the S&P 500 index or the Nasdaq 100 index.
      example: true
      title: DynLimitAnqyzpkbbzf
      type: boolean
    DynLimitAobhrkzcssd:
      description: 'The maximum ratio of put options volume vs 30 day avg put options volume. Min: 0.'
      example: 1.72
      minimum: 0
      title: DynLimitAobhrkzcssd
      type: integer
    DynLimitAoeodtqcvbv:
      description: 'The maximum ratio of options volume vs 30 day avg options volume. Min: 0.'
      example: 1.72
      minimum: 0
      title: DynLimitAoeodtqcvbv
      type: integer
    DynLimitAofttqrknrw:
      description: 'The maximum premium on that contract. Min: 0.'
      example: 53100.32
      minimum: 0
      title: DynLimitAofttqrknrw
      type: integer
    DynLimitAoomfzhzrit:
      description: 'The minimum marketcap. Min: 0.'
      example: 1000000
      minimum: 0
      title: DynLimitAoomfzhzrit
      type: integer
    DynLimitAoqbrtjqtpy:
      description: 'The minimum call options premium. Min: 0.'
      example: 35000
      minimum: 0
      title: DynLimitAoqbrtjqtpy
      type: integer
    DynLimitAoqhjlkkhpl:
      description: 'The minimum net options premium. Min: 0.'
      example: 35000
      minimum: 0
      title: DynLimitAoqhjlkkhpl
      type: integer
    DynLimitApfwbbzutqr:
      description: 'The maximum call options volume. Min: 0.'
      example: 35000
      minimum: 0
      title: DynLimitApfwbbzutqr
      type: integer
    DynLimitApgorxielxd:
      description: 'The maximum ratio of options volume vs 3 day avg options volume. Min: 0.'
      example: 1.72
      minimum: 0
      title: DynLimitApgorxielxd
      type: integer
    DynLimitApyqibgdoqz:
      description: 'The minimum ratio of call options volume vs 3 day avg call options volume. Min: 0.'
      example: 0.25
      minimum: 0
      title: DynLimitApyqibgdoqz
      type: integer
    DynLimitAqamqyhhbyd:
      description: 'How many items to return. If no limit is given, returns all matching data. Min: 1.'
      example: 10
      minimum: 1
      title: DynLimitAqamqyhhbyd
      type: integer
    DynLimitAqatvtzxufg:
      description: |
        The minimum OTM diff of a contract.
        Given a strike price of 120 and an underlying price of 98
        the diff for a call option would equal to:
        (120 - 98) / 98 = 0.2245
        
        The diff for a put option would equal to:
        -1 * (120 - 98) / 98 = -0.2245.
      example: 0.53
      title: DynLimitAqatvtzxufg
      type: integer
    DynLimitAqcmnijyoys:
      description: 'The minimum ratio of put options volume vs 30 day avg put options volume. Min: 0.'
      example: 0.25
      minimum: 0
      title: DynLimitAqcmnijyoys
      type: integer
    DynLimitAqikvrcdczf:
      description: "The maximum volume on that alert's contract at the time of the alert. Min: 0."
      example: 125
      minimum: 0
      title: DynLimitAqikvrcdczf
      type: integer
    DynLimitAqiohpsziso:
      description: 'The maximum multi leg volume to contract volume ratio. Min: 0.'
      example: 0.5
      minimum: 0
      title: DynLimitAqiohpsziso
      type: integer
    DynLimitAqmsbtkvcgk:
      description: 'The maximum implied move. Min: 0.'
      example: 1.4
      minimum: 0
      title: DynLimitAqmsbtkvcgk
      type: integer
    DynLimitAqqnasuzpct:
      description: 'The maximum marketcap. Min: 0.'
      example: 250000000
      minimum: 0
      title: DynLimitAqqnasuzpct
      type: integer
    DynLimitAqsvqnpmpxq:
      description: 'The minimum days to expiry. Min: 0.'
      example: 1
      minimum: 0
      title: DynLimitAqsvqnpmpxq
      type: integer
    DynLimitAramwklcthf:
      default: true
      description: Boolean flag whether a transaction is a call.
      example: true
      title: DynLimitAramwklcthf
      type: boolean
    DynLimitArayimtbrpc:
      description: 'The minimum premium on that contract. Min: 0.'
      example: 12500.5
      minimum: 0
      title: DynLimitArayimtbrpc
      type: integer
    DynLimitArbitojiixg:
      description: 'The maximum floor volume on that contract. Min: 0.'
      example: 55800
      minimum: 0
      title: DynLimitArbitojiixg
      type: integer
    DynLimitArdokgzdjqm:
      description: 'The maximum premium on that alert. Min: 0.'
      example: 12500.5
      minimum: 0
      title: DynLimitArdokgzdjqm
      type: integer
    DynLimitAretlafeayz:
      description: 'The maximum volatility. Min: 0.'
      example: 0.6
      minimum: 0
      title: DynLimitAretlafeayz
      type: integer
    DynLimitArjmtuxjkjs:
      description: |
        The minimum OTM diff of a contract.
        Given a strike price of 120 and an underlying price of 98
        the diff for a call option would equal to:
        (120 - 98) / 98 = 0.2245
        
        The diff for a put option would equal to:
        -1 * (120 - 98) / 98 = -0.2245.
      example: 1.34
      title: DynLimitArjmtuxjkjs
      type: integer
    DynLimitArpedvptwpq:
      description: 'The maximum % change to the previous Trading Day. Min: -1.'
      example: 0.2
      minimum: -1
      title: DynLimitArpedvptwpq
      type: integer
    DynLimitArxhwzqhnwn:
      default: 50
      description: 'How many items to return. Default: 50. Min: 1.'
      example: 10
      minimum: 1
      title: DynLimitArxhwzqhnwn
      type: integer
    DynLimitAsawcqthixh:
      description: 'How many items to return. Max: 2500. Min: 1.'
      example: 10
      maximum: 2500
      minimum: 1
      title: DynLimitAsawcqthixh
      type: integer
    DynLimitAshrfjgorlv:
      description: "The minimum volume on that alert's contract at the time of the alert. Min: 0."
      example: 125
      minimum: 0
      title: DynLimitAshrfjgorlv
      type: integer
    DynLimitAsrtcrkghex:
      description: |-
        The maximum intraday price change for the contract since market open.
        
        If the first traded contract filled at a price of 1.2, and the most recent trade was made at 1.5,
        then the intraday price change is: (1.5 - 1.2) / 1.2 = 0.25.
        Min: 0.
      example: 0.6
      minimum: 0
      title: DynLimitAsrtcrkghex
      type: integer
    DynLimitAsskdzuckaa:
      description: 'The maximum ratio of call options volume vs 30 day avg call options volume. Min: 0.'
      example: 1.72
      minimum: 0
      title: DynLimitAsskdzuckaa
      type: integer
    DynLimitAssvxrytwgo:
      description: 'The maximum days to expiry. Min: 0.'
      example: 3
      minimum: 0
      title: DynLimitAssvxrytwgo
      type: integer
    DynLimitAsuqidonqwc:
      description: 'The maximum ratio of put options volume vs 3 day avg put options volume. Min: 0.'
      example: 1.72
      minimum: 0
      title: DynLimitAsuqidonqwc
      type: integer
    DynLimitAszkdhbpmbg:
      description: 'The maximum open interest vs options volume ratio. Min: 0.'
      example: 1.5
      minimum: 0
      title: DynLimitAszkdhbpmbg
      type: integer
    DynLimitAubyuvmshpt:
      description: 'The minimum ratio of options volume vs 3 day avg options volume. Min: 0.'
      example: 0.25
      minimum: 0
      title: DynLimitAubyuvmshpt
      type: integer
    DynLimitAuhqgtmbgfy:
      description: 'The minimum put options volume. Min: 0.'
      example: 10000
      minimum: 0
      title: DynLimitAuhqgtmbgfy
      type: integer
    DynLimitAukscmlppho:
      description: 'The minimum implied move perc. Max: 1. Min: 0.'
      example: 0.15
      maximum: 1
      minimum: 0
      title: DynLimitAukscmlppho
      type: integer
    DynLimitAuldaenclsu:
      description: 'The maximum options volume. Min: 0.'
      example: 35000
      minimum: 0
      title: DynLimitAuldaenclsu
      type: integer
    DynLimitAvkwzhqdgcc:
      description: 'The minimum call options premium. Min: 0.'
      example: 10000
      minimum: 0
      title: DynLimitAvkwzhqdgcc
      type: integer
    DynLimitAvoguwyhkhx:
      description: 'The maximum % price change of the contract to the previous day. Min: 0.'
      example: 0.68
      minimum: 0
      title: DynLimitAvoguwyhkhx
      type: integer
    DynLimitAvwrboubisv:
      description: 'The minimum open interest change of call contracts compared to the previous day. Min: -1.'
      example: -0.45
      minimum: -1
      title: DynLimitAvwrboubisv
      type: integer
    DynLimitAvwsoxnytae:
      description: 'The minimum % price change of the contract to the previous day. Min: 0.'
      example: 0.5
      minimum: 0
      title: DynLimitAvwsoxnytae
      type: integer
    DynLimitAwjdaquxrrf:
      description: 'The minimum put to call ratio. Min: 0.'
      example: 0.5
      minimum: 0
      title: DynLimitAwjdaquxrrf
      type: integer
    DynLimitAwkjcbdgbuv:
      description: 'The minimum open interest change compared to the previous day. Min: -1.'
      example: -0.45
      minimum: -1
      title: DynLimitAwkjcbdgbuv
      type: integer
    DynLimitAwlkzpcgxay:
      default: true
      description: Boolean flag whether a transaction is a put.
      example: true
      title: DynLimitAwlkzpcgxay
      type: boolean
    DynLimitAxghjcokilr:
      description: 'The minimum net options premium. Min: 0.'
      example: 10000
      minimum: 0
      title: DynLimitAxghjcokilr
      type: integer
    DynLimitAxkaqvfjvzn:
      description: 'The minimum open interest change of put contracts compared to the previous day. Min: -1.'
      example: -0.45
      minimum: -1
      title: DynLimitAxkaqvfjvzn
      type: integer
    DynLimitAxkkaryvarc:
      description: 'The minimum ratio of options volume vs 30 day avg options volume. Min: 0.'
      example: 0.25
      minimum: 0
      title: DynLimitAxkkaryvarc
      type: integer
    DynLimitAynumvdiypf:
      default: false
      description: Only include contracts which are currently out of the money.
      example: true
      title: DynLimitAynumvdiypf
      type: boolean
    DynLimitAypyzbazxtg:
      description: 'The maximum size on that alert. Min: 0.'
      example: 125
      minimum: 0
      title: DynLimitAypyzbazxtg
      type: integer
    DynLimitAzbxguusvdu:
      description: 'The minimum open interest. Min: 0.'
      example: 10000
      minimum: 0
      title: DynLimitAzbxguusvdu
      type: integer
    DynLimitAzcygndqclk:
      default: 10
      description: 'The minimum amount of years data for the month need to be available for the ticker. Default: 10. Min: 1.'
      example: 3
      minimum: 1
      title: DynLimitAzcygndqclk
      type: integer
    DynLimitAzfbqcnowjg:
      description: 'The maximum open interest on that contract. Min: 0.'
      example: 55600
      minimum: 0
      title: DynLimitAzfbqcnowjg
      type: integer
    DynLimitAzjapiodvay:
      default: true
      description: Boolean flag whether a transaction is from the floor.
      example: true
      title: DynLimitAzjapiodvay
      type: boolean
    DynLimitAzompjhfmeu:
      description: 'The minimum options premium. Min: 0.'
      example: 35000
      minimum: 0
      title: DynLimitAzompjhfmeu
      type: integer
    DynLimitAzypbfzepbq:
      description: 'The minimum premium on that alert. Min: 0.'
      example: 12500.5
      minimum: 0
      title: DynLimitAzypbfzepbq
      type: integer
    Earning:
      description: |
        Earnings information for a ticker and date.
      example:
        data:
          - close: '24.22'
            close_date: 2023-02-14
            continent: North America
            country_code: US
            country_name: UNITED STATES
            ending_fiscal_quarter: 2022-12-31
            eps_mean_est: '0.36'
            full_name: INVENTRUST PROPERTIES
            has_options: true
            implied_move: '0.1003106047550717336683417085'
            is_s_p_500: false
            marketcap: '1649115201'
            prev: '24.27'
            prev_date: 2023-02-13
            report_date: 2023-02-14
            report_time: postmarket
            sector: Real Estate
            source: company
            street_mean_est: '0.36'
            symbol: IVT
          - close: '39.06'
            close_date: 2023-02-14
            continent: Europe
            country_code: LU
            country_name: LUXEMBOURG
            ending_fiscal_quarter: 2022-12-31
            eps_mean_est: '0.18'
            full_name: TERNIUM SA
            has_options: true
            implied_move: '0.06470822359148703557312252964'
            is_s_p_500: false
            marketcap: '7375279462'
            prev: '37.88'
            prev_date: 2023-02-13
            report_date: 2023-02-14
            report_time: postmarket
            sector: Basic Materials
            source: company
            street_mean_est: '0.183'
            symbol: TX
      properties:
        close:
          $ref: '#/components/schemas/General Tick Price'
        close_date:
          $ref: '#/components/schemas/General ISO Date'
        continent:
          $ref: '#/components/schemas/General Tick Price'
        country_code:
          $ref: '#/components/schemas/General Tick Price'
        country_name:
          $ref: '#/components/schemas/General Tick Price'
        ending_fiscal_quarter:
          $ref: '#/components/schemas/General ISO Date'
        eps_mean_est:
          $ref: '#/components/schemas/General Tick Price'
        full_name:
          $ref: '#/components/schemas/General Tick Price'
        has_options:
          $ref: '#/components/schemas/General Tick Price'
        implied_move:
          $ref: '#/components/schemas/General Tick Price'
        is_s_p_500:
          $ref: '#/components/schemas/General Tick Price'
        marketcap:
          $ref: '#/components/schemas/General Tick Price'
        prev:
          $ref: '#/components/schemas/General Tick Price'
        prev_date:
          $ref: '#/components/schemas/General ISO Date'
        report_date:
          $ref: '#/components/schemas/General ISO Date'
        sector:
          $ref: '#/components/schemas/General Tick Price'
        source:
          $ref: '#/components/schemas/General Tick Price'
        street_mean_est:
          $ref: '#/components/schemas/General Tick Price'
        symbol:
          $ref: '#/components/schemas/General Tick Price'
      title: Earning
      type: object
    Economic Event:
      description: The event/reason. Can be a fed speaker or an economic report/indicator
      example: PCE index
      title: Economic Event
      type: string
    Economic Forecast:
      description: The forecast if the event is an economic report/indicator
      example: '69.4'
      title: Economic Forecast
      type: string
    Economic Previous:
      description: The previous value of the preceding period if the event is an economic report/indicator
      example: '69.4'
      title: Economic Previous
      type: string
    Economic Reported Period:
      description: The period for that the economic report/indicator is being reported.
      example: December
      title: Economic Reported Period
      type: string
    Economic Time:
      description: The time at which the event will start as UTC timestamp.
      example: 2023-12-22T13:30:00Z
      title: Economic Time
      type: string
    Economic Type:
      description: The type of the event
      enum:
        - fed-speaker
        - fomc
        - report
      example: fomc
      title: Economic Type
      type: string
    Economic calendar:
      description: The economic calendar for the current & next week
      example:
        data:
          - event: Consumer sentiment (final)
            forecast: '69.4'
            prev: '69.4'
            reported_period: December
            time: 2023-12-22T15:00:00Z
            type: report
          - event: PCE index
            forecast:
            prev: 0.0%
            reported_period: November
            time: 2023-12-22T13:30:00Z
            type: report
      properties:
        event:
          $ref: '#/components/schemas/Economic Event'
        forecast:
          $ref: '#/components/schemas/Economic Forecast'
        prev:
          $ref: '#/components/schemas/Economic Previous'
        reported_period:
          $ref: '#/components/schemas/Economic Reported Period'
        time:
          $ref: '#/components/schemas/Economic Time'
        type:
          $ref: '#/components/schemas/Economic Type'
      title: Economic calendar
      type: object
    Error Message:
      description: A json object containing information on the error cause.
      example:
        msg: 'Invalid path input: MSFT12 (valid example: AAPL) - Invalid query input(s): date=2023-02-140 (valid example: date=2024-01-18)'
        path: /api/darkpool/MSFT12
        query: date=2023-02-140
        url: localhost:4000/api/darkpool/MSFT12?date=2023-02-140
      properties:
        msg:
          description: An error message containing information about the faulty input.
          type: string
        path:
          description: The URL path segment.
          type: string
        query:
          description: The URL query segment.
          type: string
        url:
          description: The full URL causing the error.
          type: string
      title: Error Message
      type: object
    Error Message on an internal server error.:
      description: A plain message informing, that an internal server error occured. In this case please send a mail with the full URL that caused the issue to support@unusualwhales.com.
      example: Something went wrong
      title: Error Message on an internal server error.
      type: string
    Error Message stating that the requested element was not found causing an empty result to be generated.:
      description: A message containing an empty JSON response, indicating that the requested element was not found causing an empty result to be generated.
      example: '{}'
      title: Error Message stating that the requested element was not found causing an empty result to be generated.
      type: object
    Etf AUM:
      description: The total assets under management (AUM) of the ETF.
      example: '428887833900'
      title: Etf AUM
      type: string
    Etf Company:
      description: The company which oversees the ETF.
      example: SPDR
      title: Etf Company
      type: string
    Etf Countries:
      description: A list of countries with their exposure by percentage.
      example: |
        [
          {
            "country": "Netherlands",
            "weight": "0.0015"
          },
          {
            "country": "Canada",
            "weight": "0.0014"
          }
        ]
      items:
        description: A country and it's corresponding exposure in percentage.
        example: |
          {
            "country": "Switzerland",
            "weight": "0.0043"
          }
        properties:
          country:
            description: The country.
            example: Ireland
            type: string
          weight:
            description: The country exposure in percentage.
            example: '0.0164'
            type: string
        type: object
      title: Etf Countries
      type: array
    Etf Description:
      description: Information about the ETF.
      example: The Trust seeks to achieve its investment objective by holding a portfolio of the common stocks that are included in the index (the “Portfolio”), with the weight of each stock in the Portfolio substantially corresponding to the weight of such stock in the index.
      title: Etf Description
      type: string
    Etf Domicile:
      description: The domicile of the ETF.
      example: US
      title: Etf Domicile
      type: string
    Etf Expense Ratio:
      description: The expense ratio of the ETF.
      example: '0.0945'
      title: Etf Expense Ratio
      type: string
    Etf Full Name:
      description: The full name of the ETF.
      example: SPDR S&P 500 ETF Trust
      title: Etf Full Name
      type: string
    Etf Holdings Count:
      description: The amount of holdings the ETF has.
      example: 503
      title: Etf Holdings Count
      type: integer
    Etf Inception Date:
      description: The inception date of the ETF as an ISO date.
      example: 1993-01-22
      title: Etf Inception Date
      type: string
    Etf Info:
      description: ''
      example:
        data:
          aum: '428887833900'
          avg30_volume: '73784934'
          call_vol: 284364
          description: The Trust seeks to achieve its investment objective by holding a portfolio of the common stocks that are included in the index (the “Portfolio”), with the weight of each stock in the Portfolio substantially corresponding to the weight of such stock in the index.
          domicile: US
          etf_company: SPDR
          expense_ratio: '0.0945'
          has_options: true
          holdings_count: 503
          inception_date: 1993-01-22
          name: SPDR S&P 500 ETF Trust
          opt_vol: 533227
          put_vol: 248863
          stock_vol: 4348819
          website: https://www.ssga.com/us/en/institutional/etfs/funds/spdr-sp-500-etf-trust-spy
      properties:
        aum:
          $ref: '#/components/schemas/Etf AUM'
        avg30_volume:
          $ref: '#/components/schemas/Stock Average 30 Day Volume'
        call_vol:
          $ref: '#/components/schemas/Market General Call Volume'
        description:
          $ref: '#/components/schemas/Etf Description'
        domicile:
          $ref: '#/components/schemas/Etf Domicile'
        etf_company:
          $ref: '#/components/schemas/Etf Company'
        expense_ratio:
          $ref: '#/components/schemas/Etf Expense Ratio'
        has_options:
          $ref: '#/components/schemas/Stock Has Options'
        holdings_count:
          $ref: '#/components/schemas/Etf Holdings Count'
        inception_date:
          $ref: '#/components/schemas/Etf Inception Date'
        name:
          $ref: '#/components/schemas/Etf Full Name'
        opt_vol:
          $ref: '#/components/schemas/Etf Total Volume'
        put_vol:
          $ref: '#/components/schemas/Market General Put Volume'
        stock_vol:
          $ref: '#/components/schemas/Stock Day Stock Volume'
        website:
          $ref: '#/components/schemas/Etf Website Url'
      title: Etf Info
      type: object
    Etf Sector Full Name:
      description: The name/sector of the SPDR sector ETF.
      example: S&P 500 Index
      title: Etf Sector Full Name
      type: string
    Etf Sectors:
      description: A list of sectors with their exposure by percentage.
      example: |
        [
          {
            "sector": "Basic Materials",
            "weight": "0.022"
          },
          {
            "sector": "Communication Services",
            "weight": "0.0861"
          }
        ]
      items:
        description: A sector and it's corresponding exposure in percentage.
        example: |
          {
            "sector": "Basic Materials",
            "weight": "0.022"
          }
        properties:
          sector:
            description: The sector.
            example: Healthcare
            type: string
          weight:
            description: The sector exposure in percentage.
            example: '0.1272'
            type: string
        type: object
      title: Etf Sectors
      type: array
    Etf Total Volume:
      description: The total options volume traded for the last Trading Day.
      example: 533227
      title: Etf Total Volume
      type: integer
    Etf Website Url:
      description: A link to the website of the ETF.
      example: https://www.ssga.com/us/en/institutional/etfs/funds/spdr-sp-500-etf-trust-spy
      title: Etf Website Url
      type: string
    Expiry:
      description: The expiry date of an option contract in ISO format.
      example: 2022-05-30
      title: Expiry
      type: string
    Expiry breakdown:
      description: All expirations for a ticker
      example:
        data:
          - chains: 5000
            expiry: 2023-09-07
            open_interest: 554
            volume: 1566232
          - chains: 50
            expiry: 2023-10-20
            open_interest: 0
            volume: 1532
          - chains: 20
            expiry: 2023-11-30
            open_interest: 33112
            volume: 931
      properties:
        chains:
          description: The total amount of chains for that expiry
          example: 12223
          type: integer
        expiry:
          $ref: '#/components/schemas/Option Contract Expiry'
        open_interest:
          description: The total open interest for that expiry
          example: 12223
          type: integer
        volume:
          description: The total volume for that expiry
          example: 12223
          type: integer
      title: Expiry breakdown
      type: object
    Expiry dates:
      description: A single expiry date in ISO date format.
      example: 2024-02-02
      title: Expiry dates
      type: string
    FDA Calendar Catalyst:
      description: The kind of upcoming date causing the event.
      example: PDUFA Date
      title: FDA Calendar Catalyst
      type: string
    FDA Calendar Description:
      description: The description of the event.
      example: The FDA extended the new target action date for a decision under the Prescription Drug User Fee Act (PDUFA) to February 24, 2024, but agreed to work with Iovance to expedite the remaining review for a potentially earlier approval date.
      title: FDA Calendar Description
      type: string
    FDA Calendar Drug:
      description: The name of the drug.
      example: Lifileucel
      title: FDA Calendar Drug
      type: string
    FDA Calendar End Date:
      description: The event end date in ISO date format.
      example: 2024-02-24
      title: FDA Calendar End Date
      type: string
    FDA Calendar Indication:
      description: The sickness or symptom the drug is used to treat.
      example: for the Treatment of Advanced Melanoma
      title: FDA Calendar Indication
      type: string
    FDA Calendar Start Time:
      description: The event start date in ISO date format.
      example: 2024-02-24
      title: FDA Calendar Start Time
      type: string
    FDA Calendar Status:
      description: The status of the drug admission.
      example: NDA
      title: FDA Calendar Status
      type: string
    FDA Calendar Ticker:
      description: The ticker of the company applying for drug admission.
      example: IOVA
      title: FDA Calendar Ticker
      type: string
    Fda calendar:
      description: The fda calendar for the current week
      example:
        data:
          - catalyst: PDUFA Date
            description: The FDA extended the new target action date for a decision under the Prescription Drug User Fee Act (PDUFA) to February 24, 2024, but agreed to work with Iovance to expedite the remaining review for a potentially earlier approval date.
            drug: Lifileucel
            end_date: 2024-02-24
            indication: for the Treatment of Advanced Melanoma
            start_date: 2024-02-24
            status: NDA
            ticker: IOVA
          - catalyst: ''
            description: FDA decision on Roluperidone for the treatment of negative symptoms in schizophrenia
            drug: Roluperidone
            end_date: 2024-02-26
            indication: ''
            start_date: 2024-02-26
            status: NDA
            ticker: NERV
      properties:
        catalyst:
          $ref: '#/components/schemas/FDA Calendar Catalyst'
        description:
          $ref: '#/components/schemas/FDA Calendar Description'
        drug:
          $ref: '#/components/schemas/FDA Calendar Drug'
        end_date:
          $ref: '#/components/schemas/FDA Calendar End Date'
        indication:
          $ref: '#/components/schemas/FDA Calendar Indication'
        start_date:
          $ref: '#/components/schemas/FDA Calendar Start Time'
        status:
          $ref: '#/components/schemas/FDA Calendar Status'
        ticker:
          $ref: '#/components/schemas/FDA Calendar Ticker'
      title: Fda calendar
      type: object
    Flow Alert:
      description: |
        Representation of a flow alert.
      example:
        data:
          - alert_rule: RepeatedHits
            all_opening_trades: false
            created_at: 2023-12-12T16:35:52.168490Z
            expiry: 2023-12-22
            expiry_count: 1
            has_floor: false
            has_multileg: false
            has_singleleg: true
            has_sweep: true
            open_interest: 7913
            option_chain: MSFT231222C00375000
            price: '4.05'
            strike: '375'
            ticker: MSFT
            total_ask_side_prem: '151875'
            total_bid_side_prem: '405'
            total_premium: '186705'
            total_size: 461
            trade_count: 32
            type: call
            underlying_price: '372.99'
            volume: 2442
            volume_oi_ratio: '0.30860609124226'
      properties:
        alert_rule:
          $ref: '#/components/schemas/Alert Rule Name'
        all_opening_trades:
          $ref: '#/components/schemas/Option Contract All Opening Trades'
        created_at:
          $ref: '#/components/schemas/General UTC Timestamp'
        expiry:
          $ref: '#/components/schemas/Option Contract Expiry'
        expiry_count:
          $ref: '#/components/schemas/Option Contract Expiry Count'
        has_floor:
          $ref: '#/components/schemas/Option Contract Has Floor'
        has_multileg:
          $ref: '#/components/schemas/Single Trade Has Multileg'
        has_singleleg:
          $ref: '#/components/schemas/Single Trade Is Single Leg'
        has_sweep:
          $ref: '#/components/schemas/Single Trade Is Sweep'
        open_interest:
          $ref: '#/components/schemas/General Tick Price'
        option_chain:
          $ref: '#/components/schemas/Option Contract Symbol'
        price:
          $ref: '#/components/schemas/General Tick Price'
        strike:
          $ref: '#/components/schemas/Option Contract Strike'
        ticker:
          $ref: '#/components/schemas/General Tick Price'
        total_ask_side_prem:
          $ref: '#/components/schemas/General Tick Price'
        total_bid_side_prem:
          $ref: '#/components/schemas/General Tick Price'
        total_premium:
          $ref: '#/components/schemas/General Tick Price'
        total_size:
          $ref: '#/components/schemas/General Tick Price'
        trade_count:
          $ref: '#/components/schemas/General Tick Price'
        type:
          $ref: '#/components/schemas/Option Contract Type'
        underlying_price:
          $ref: '#/components/schemas/General Tick Price'
        volume:
          $ref: '#/components/schemas/General Tick Price'
        volume_oi_ratio:
          $ref: '#/components/schemas/General Tick Price'
      title: Flow Alert
      type: object
    Flow alert rule:
      description: ''
      enum:
        - FloorTradeSmallCap
        - FloorTradeMidCap
        - RepeatedHits
        - RepeatedHitsAscendingFill
        - RepeatedHitsDescendingFill
        - FloorTradeLargeCap
        - OtmEarningsFloor
        - LowHistoricVolumeFloor
        - VolumeOverOi
        - SweepsFollowedByFloor
      example: RepeatedHits
      title: Flow alert rule
      type: string
    Flow per expiry:
      description: |
        The flow data per expiry for a Trading Day.
      example:
        data:
          - call_otm_premium: '3885339'
            call_otm_trades: 10213
            call_otm_volume: 81598
            call_premium: '5839180'
            call_premium_ask_side: '2615356'
            call_premium_bid_side: '2722619'
            call_trades: 11383
            call_volume: 89177
            call_volume_ask_side: 43669
            call_volume_bid_side: 40164
            date: 2024-01-22
            expiry: 2024-01-26
            put_otm_premium: '632247'
            put_otm_trades: 2077
            put_otm_volume: 12164
            put_premium: '4802145'
            put_premium_ask_side: '3593584'
            put_premium_bid_side: '690572'
            put_trades: 2744
            put_volume: 20101
            put_volume_ask_side: 7396
            put_volume_bid_side: 8113
            ticker: BABA
          - call_otm_premium: '1264038'
            call_otm_trades: 2550
            call_otm_volume: 17525
            call_premium: '1869073'
            call_premium_ask_side: '885103'
            call_premium_bid_side: '832727'
            call_trades: 2936
            call_volume: 19268
            call_volume_ask_side: 7778
            call_volume_bid_side: 9875
            date: 2024-01-22
            expiry: 2024-02-02
            put_otm_premium: '206709'
            put_otm_trades: 588
            put_otm_volume: 3581
            put_premium: '627117'
            put_premium_ask_side: '191982'
            put_premium_bid_side: '354687'
            put_trades: 847
            put_volume: 4709
            put_volume_ask_side: 1238
            put_volume_bid_side: 3004
            ticker: BABA
        date: 2024-01-22
      properties:
        call_otm_premium:
          $ref: '#/components/schemas/Market General Call OTM Premium'
        call_otm_trades:
          $ref: '#/components/schemas/Market General Call OTM Trades'
        call_otm_volume:
          $ref: '#/components/schemas/Market General Call OTM Volume'
        call_premium:
          $ref: '#/components/schemas/Market General Call Premium'
        call_premium_ask_side:
          $ref: '#/components/schemas/Market General Call Premium Ask Side'
        call_premium_bid_side:
          $ref: '#/components/schemas/Market General Call Premium Bid Side'
        call_trades:
          $ref: '#/components/schemas/Market General Call Trades'
        call_volume:
          $ref: '#/components/schemas/Market General Call Volume'
        call_volume_ask_side:
          $ref: '#/components/schemas/Market General Call Volume Ask Side'
        call_volume_bid_side:
          $ref: '#/components/schemas/Market General Call Volume Bid Side'
        date:
          $ref: '#/components/schemas/Market General Trading Day'
        expiry:
          $ref: '#/components/schemas/Option Contract Expiry'
        put_otm_premium:
          $ref: '#/components/schemas/Market General Put OTM Premium'
        put_otm_trades:
          $ref: '#/components/schemas/Market General Put OTM Trades'
        put_otm_volume:
          $ref: '#/components/schemas/Market General Put OTM Volume'
        put_premium:
          $ref: '#/components/schemas/Market General Put Premium'
        put_premium_ask_side:
          $ref: '#/components/schemas/Market General Put Premium Ask Side'
        put_premium_bid_side:
          $ref: '#/components/schemas/Market General Put Premium Bid Side'
        put_trades:
          $ref: '#/components/schemas/Market General Put Trades'
        put_volume:
          $ref: '#/components/schemas/Market General Put Volume'
        put_volume_ask_side:
          $ref: '#/components/schemas/Market General Put Volume Ask Side'
        put_volume_bid_side:
          $ref: '#/components/schemas/Market General Put Volume Bid Side'
        ticker:
          $ref: '#/components/schemas/Stock Ticker'
      title: Flow per expiry
      type: object
    Flow per strike:
      description: |
        The flow data per strike for a Trading Day.
      example:
        - call_otm_premium: '9908777.0'
          call_otm_trades: 6338
          call_otm_volume: 40385
          call_premium: '9908777.0'
          call_premium_ask_side: '5037703.0'
          call_premium_bid_side: '4055973.0'
          call_trades: 6338
          call_volume: 40385
          call_volume_ask_side: 20145
          call_volume_bid_side: 16923
          date: 2024-01-22
          put_otm_premium: '0.0'
          put_otm_trades: 0
          put_otm_volume: 0
          put_premium: '2746872.0'
          put_premium_ask_side: '799873.0'
          put_premium_bid_side: '1614848.0'
          put_trades: 841
          put_volume: 4306
          put_volume_ask_side: 1398
          put_volume_bid_side: 2323
          strike: '70.0'
          ticker: BABA
        - call_otm_premium: '4208428.0'
          call_otm_trades: 2875
          call_otm_volume: 28218
          call_premium: '4208428.0'
          call_premium_ask_side: '1543361.0'
          call_premium_bid_side: '1589925.0'
          call_trades: 2875
          call_volume: 28218
          call_volume_ask_side: 14048
          call_volume_bid_side: 10418
          date: 2024-01-22
          put_otm_premium: '0.0'
          put_otm_trades: 0
          put_otm_volume: 0
          put_premium: '1996364.0'
          put_premium_ask_side: '432005.0'
          put_premium_bid_side: '1317894.0'
          put_trades: 323
          put_volume: 2270
          put_volume_ask_side: 482
          put_volume_bid_side: 1545
          strike: '75.0'
          ticker: BABA
      properties:
        call_otm_premium:
          $ref: '#/components/schemas/Market General Call OTM Premium'
        call_otm_trades:
          $ref: '#/components/schemas/Market General Call OTM Trades'
        call_otm_volume:
          $ref: '#/components/schemas/Market General Call OTM Volume'
        call_premium:
          $ref: '#/components/schemas/Market General Call Premium'
        call_premium_ask_side:
          $ref: '#/components/schemas/Market General Call Premium Ask Side'
        call_premium_bid_side:
          $ref: '#/components/schemas/Market General Call Premium Bid Side'
        call_trades:
          $ref: '#/components/schemas/Market General Call Trades'
        call_volume:
          $ref: '#/components/schemas/Market General Call Volume'
        call_volume_ask_side:
          $ref: '#/components/schemas/Market General Call Volume Ask Side'
        call_volume_bid_side:
          $ref: '#/components/schemas/Market General Call Volume Bid Side'
        date:
          $ref: '#/components/schemas/Market General Trading Day'
        put_otm_premium:
          $ref: '#/components/schemas/Market General Put OTM Premium'
        put_otm_trades:
          $ref: '#/components/schemas/Market General Put OTM Trades'
        put_otm_volume:
          $ref: '#/components/schemas/Market General Put OTM Volume'
        put_premium:
          $ref: '#/components/schemas/Market General Put Premium'
        put_premium_ask_side:
          $ref: '#/components/schemas/Market General Put Premium Ask Side'
        put_premium_bid_side:
          $ref: '#/components/schemas/Market General Put Premium Bid Side'
        put_trades:
          $ref: '#/components/schemas/Market General Put Trades'
        put_volume:
          $ref: '#/components/schemas/Market General Put Volume'
        put_volume_ask_side:
          $ref: '#/components/schemas/Market General Put Volume Ask Side'
        put_volume_bid_side:
          $ref: '#/components/schemas/Market General Put Volume Bid Side'
        strike:
          $ref: '#/components/schemas/Option Contract Strike'
        ticker:
          $ref: '#/components/schemas/Stock Ticker'
      title: Flow per strike
      type: object
    Gamma:
      description: ''
      example: '0.005'
      title: Gamma
      type: string
    General ISO Date:
      description: An ISO date.
      example: 2024-01-09
      title: General ISO Date
      type: string
    General Tick time:
      description: The start time of the tick as a timestamp with timezone.
      example: 2023-09-07T09:30:00-04:00
      title: General Tick time
      type: string
    General UTC Timestamp:
      description: A UTC timestamp.
      example: 2023-12-12T16:35:52.168490Z
      title: General UTC Timestamp
      type: string
    Gex Calculation Time:
      description: The UTC timestamp of the calculation
      example: 2023-12-13T05:00:41.481000Z
      title: Gex Calculation Time
      type: string
    Gex Call Charm:
      description: The sum of the charm values of all call transactions that executed multiplied by the open interest and the number of shares per contract (typically 100 shares per contract).
      example: '102382359.5786'
      title: Gex Call Charm
      type: string
    Gex Call Delta:
      description: The sum of the delta values of all call transactions that executed multiplied by the open interest and the number of shares per contract (typically 100 shares per contract).
      example: '227549667.4651'
      title: Gex Call Delta
      type: string
    Gex Call Gamma:
      description: The sum of the gamma values of all call transactions that executed multiplied by the open interest and the number of shares per contract (typically 100 shares per contract).
      example: '9356683.4241'
      title: Gex Call Gamma
      type: string
    Gex Call Vanna:
      description: The sum of the vanna values of all call transactions that executed multiplied by the open interest and the number of shares per contract (typically 100 shares per contract).
      example: '152099632406.9564'
      title: Gex Call Vanna
      type: string
    Gex Charm Per One Percent Move OI:
      description: |
        The charm 1% move based on OI:
        This is calculated as charm * open interest * 365
      example: '5124108502049.17'
      title: Gex Charm Per One Percent Move OI
      type: string
    Gex Charm Per One Percent Move Volume:
      description: |
        The charm 1% move based on volume:
        This is calculated as charm * volume * 365
      example: '320909908341.10'
      title: Gex Charm Per One Percent Move Volume
      type: string
    Gex Delta Per One Percent Move OI:
      description: |
        The delta 1% move based on OI:
        This is calculated as delta * open interest * price * price
      example: '70827151575067.12'
      title: Gex Delta Per One Percent Move OI
      type: string
    Gex Delta Per One Percent Move Volume:
      description: |
        The delta 1% move based on volume:
        This is calculated as delta * volume * price * price
      example: '2282895170748.09'
      title: Gex Delta Per One Percent Move Volume
      type: string
    Gex Gamma Per One Percent Move OI:
      description: |
        The gamma 1% move based on OI:
        This is calculated as gamma * open interest * price * price
      example: '65476967081.41'
      title: Gex Gamma Per One Percent Move OI
      type: string
    Gex Gamma Per One Percent Move Volume:
      description: |
        The gamma 1% move based on volume:
        This is calculated as gamma * volume * price * price
      example: '12921519098.30'
      title: Gex Gamma Per One Percent Move Volume
      type: string
    Gex Put Charm:
      description: The sum of the charm values of all put transactions that executed multiplied by the open interest and the number of shares per contract (typically 100 shares per contract).
      example: '-943028472.4815'
      title: Gex Put Charm
      type: string
    Gex Put Delta:
      description: The sum of the delta values of all put transactions that executed multiplied by the open interest and the number of shares per contract (typically 100 shares per contract).
      example: '-191893077.7193'
      title: Gex Put Delta
      type: string
    Gex Put Gamma:
      description: The sum of the gamma values of all put transactions that executed multiplied by the open interest and the number of shares per contract (typically 100 shares per contract).
      example: '-12337386.0524'
      title: Gex Put Gamma
      type: string
    Gex Put Vanna:
      description: The sum of the vanna values of all put transactions that executed multiplied by the open interest and the number of shares per contract (typically 100 shares per contract).
      example: '488921784213.1121'
      title: Gex Put Vanna
      type: string
    Gex Underlying Price:
      description: |
        The underlying price used in calculations.
        NOTE: For any index ticker this will be the current ATM strike.
      example: '4650'
      title: Gex Underlying Price
      type: string
    Gex Vanna Per One Percent Move OI:
      description: |
        The vanna 1% move based on OI:
        This is calculated as vanna * open interest
      example: '-54622844772.90'
      title: Gex Vanna Per One Percent Move OI
      type: string
    Gex Vanna Per One Percent Move Volume:
      description: |
        The vanna 1% move based on volume:
        This is calculated as vanna * volume
      example: '-5559678859.12'
      title: Gex Vanna Per One Percent Move Volume
      type: string
    Greek Exposure:
      description: ''
      example:
        data:
          - call_charm: '102382359.5786'
            call_delta: '227549667.4651'
            call_gamma: '9356683.4241'
            call_vanna: '152099632406.9564'
            date: 2023-09-08
            put_charm: '-943028472.4815'
            put_delta: '-191893077.7193'
            put_gamma: '-12337386.0524'
            put_vanna: '488921784213.1121'
          - call_charm: '81465130.0002'
            call_delta: '210202465.3421'
            call_gamma: '8456599.8505'
            call_vanna: '161231587973.6811'
            date: 2023-09-07
            put_charm: '-1054548432.6111'
            put_delta: '-210881557.3003'
            put_gamma: '-12703877.0243'
            put_vanna: '488921784213.1121'
      properties:
        call_charm:
          $ref: '#/components/schemas/Gex Call Charm'
        call_delta:
          $ref: '#/components/schemas/Gex Call Delta'
        call_gamma:
          $ref: '#/components/schemas/Gex Call Gamma'
        call_vanna:
          $ref: '#/components/schemas/Gex Call Vanna'
        date:
          $ref: '#/components/schemas/Market General Trading Day'
        put_charm:
          $ref: '#/components/schemas/Gex Put Charm'
        put_delta:
          $ref: '#/components/schemas/Gex Put Delta'
        put_gamma:
          $ref: '#/components/schemas/Gex Put Gamma'
        put_vanna:
          $ref: '#/components/schemas/Gex Put Vanna'
      title: Greek Exposure
      type: object
    Greek Exposure By Strike:
      description: ''
      example:
        data:
          - call_charm: '102382359.5786'
            call_delta: '227549667.4651'
            call_gamma: '9356683.4241'
            call_vanna: '152099632406.9564'
            put_charm: '-943028472.4815'
            put_delta: '-191893077.7193'
            put_gamma: '-12337386.0524'
            put_vanna: '488921784213.1121'
            strike: '150'
          - call_charm: '81465130.0002'
            call_delta: '210202465.3421'
            call_gamma: '8456599.8505'
            call_vanna: '161231587973.6811'
            put_charm: '-1054548432.6111'
            put_delta: '-210881557.3003'
            put_gamma: '-12703877.0243'
            put_vanna: '488921784213.1121'
            strike: '152.5'
      properties:
        call_charm:
          $ref: '#/components/schemas/Gex Call Charm'
        call_delta:
          $ref: '#/components/schemas/Gex Call Delta'
        call_gamma:
          $ref: '#/components/schemas/Gex Call Gamma'
        call_vanna:
          $ref: '#/components/schemas/Gex Call Vanna'
        put_charm:
          $ref: '#/components/schemas/Gex Put Charm'
        put_delta:
          $ref: '#/components/schemas/Gex Put Delta'
        put_gamma:
          $ref: '#/components/schemas/Gex Put Gamma'
        put_vanna:
          $ref: '#/components/schemas/Gex Put Vanna'
        strike:
          $ref: '#/components/schemas/Strike'
      title: Greek Exposure By Strike
      type: object
    Greek Exposure By Strike And Expiry:
      description: ''
      example:
        data:
          - call_charm: '102382359.5786'
            call_delta: '227549667.4651'
            call_gamma: '9356683.4241'
            call_vanna: '152099632406.9564'
            expiry: 2022-05-25
            put_charm: '-943028472.4815'
            put_delta: '-191893077.7193'
            put_gamma: '-12337386.0524'
            put_vanna: '488921784213.1121'
            strike: '150'
          - call_charm: '81465130.0002'
            call_delta: '210202465.3421'
            call_gamma: '8456599.8505'
            call_vanna: '161231587973.6811'
            expiry: 2022-05-25
            put_charm: '-1054548432.6111'
            put_delta: '-210881557.3003'
            put_gamma: '-12703877.0243'
            put_vanna: '488921784213.1121'
            strike: '152.5'
      properties:
        call_charm:
          $ref: '#/components/schemas/Gex Call Charm'
        call_delta:
          $ref: '#/components/schemas/Gex Call Delta'
        call_gamma:
          $ref: '#/components/schemas/Gex Call Gamma'
        call_vanna:
          $ref: '#/components/schemas/Gex Call Vanna'
        expiry:
          $ref: '#/components/schemas/Expiry'
        put_charm:
          $ref: '#/components/schemas/Gex Put Charm'
        put_delta:
          $ref: '#/components/schemas/Gex Put Delta'
        put_gamma:
          $ref: '#/components/schemas/Gex Put Gamma'
        put_vanna:
          $ref: '#/components/schemas/Gex Put Vanna'
        strike:
          $ref: '#/components/schemas/Strike'
      title: Greek Exposure By Strike And Expiry
      type: object
    Greeks:
      description: |
        The greek values for a set of call and put contracts at the same strike and expiry for a ticker.
      example:
        data:
          - call_charm: '9.32'
            call_delta: '0.5'
            call_gamma: '0.0051'
            call_iv: '0.3'
            call_rho: '0.0321'
            call_theta: '-0.62'
            call_vanna: '-0.91'
            call_vega: '0.15'
            date: 2024-01-01
            expiry: 2024-01-05
            put_charm: '9.32'
            put_delta: '-0.51'
            put_gamma: '0.005'
            put_iv: '0.29'
            put_rho: '-0.022'
            put_theta: '-0.62'
            put_vanna: '-0.91'
            put_vega: '0.15'
            strike: '480.0'
            ticker: SPY
          - call_charm: '9.32'
            call_delta: '0.45'
            call_gamma: '0.003'
            call_iv: '0.33'
            call_rho: '0.0321'
            call_theta: '-0.62'
            call_vanna: '-0.91'
            call_vega: '0.15'
            date: 2024-01-01
            expiry: 2024-01-05
            put_charm: '9.32'
            put_delta: '-0.55'
            put_gamma: '0.007'
            put_iv: '0.32'
            put_rho: '-0.022'
            put_theta: '-0.62'
            put_vanna: '-0.91'
            put_vega: '0.15'
            strike: '490.0'
            ticker: SPY
      properties:
        call_charm:
          $ref: '#/components/schemas/Charm'
        call_delta:
          $ref: '#/components/schemas/delta'
        call_gamma:
          $ref: '#/components/schemas/Gamma'
        call_iv:
          $ref: '#/components/schemas/Implied Volatility'
        call_rho:
          $ref: '#/components/schemas/Rho'
        call_theta:
          $ref: '#/components/schemas/Theta'
        call_vanna:
          $ref: '#/components/schemas/Vanna'
        call_vega:
          $ref: '#/components/schemas/Vega'
        date:
          $ref: '#/components/schemas/General ISO Date'
        expiry:
          $ref: '#/components/schemas/General ISO Date'
        put_charm:
          $ref: '#/components/schemas/Charm'
        put_delta:
          $ref: '#/components/schemas/delta'
        put_gamma:
          $ref: '#/components/schemas/Gamma'
        put_iv:
          $ref: '#/components/schemas/Implied Volatility'
        put_rho:
          $ref: '#/components/schemas/Rho'
        put_theta:
          $ref: '#/components/schemas/Theta'
        put_vanna:
          $ref: '#/components/schemas/Vanna'
        put_vega:
          $ref: '#/components/schemas/Vega'
        strike:
          $ref: '#/components/schemas/Strike'
        ticker:
          $ref: '#/components/schemas/Stock Ticker'
      title: Greeks
      type: object
    Historical Risk Reversal Skew:
      description: ''
      example:
        data:
          - date: 2024-01-01
            risk_reversal: '0.014'
            ticker: SPY
          - date: 2024-01-02
            risk_reversal: '0.009'
            ticker: SPY
      properties:
        date:
          $ref: '#/components/schemas/General ISO Date'
        risk_reversal:
          $ref: '#/components/schemas/Risk Reversal'
        ticker:
          $ref: '#/components/schemas/Stock Ticker'
      title: Historical Risk Reversal Skew
      type: object
    Holdings:
      description: ''
      example:
        data:
          - avg30_volume: '52433648'
            bearish_premium: '32565174'
            bullish_premium: '22987045'
            call_premium: '45254976'
            call_volume: 197685
            close: '194.84'
            has_options: true
            high: '196.579'
            low: '194.41'
            name: APPLE INC
            prev_price: '197.14'
            put_premium: '16338631'
            put_volume: 106773
            sector: Technology
            shares: 169938760
            short_name: APPLE
            ticker: AAPL
            type: stock
            volume: 12314310
            week52_high: '199.62'
            week52_low: '123.15'
            weight: '7.335'
          - avg30_volume: '30239291'
            bearish_premium: '14318236'
            bullish_premium: '14142305'
            call_premium: '22499010'
            call_volume: 48302
            close: '371.0'
            has_options: true
            high: '371.0'
            low: '368.73'
            name: MICROSOFT CORP
            prev_price: '369.36'
            put_premium: '8688334'
            put_volume: 35055
            sector: Technology
            shares: 85913823
            short_name: MICROSOFT
            ticker: MSFT
            type: stock
            volume: 3760724
            week52_high: '384.3'
            week52_low: '216.98'
            weight: '6.959'
          - avg30_volume: '51068229'
            bearish_premium: '27305757'
            bullish_premium: '37477652'
            call_premium: '68914858'
            call_volume: 243442
            close: '152.82'
            has_options: true
            high: '152.9'
            low: '150.09'
            name: AMAZON.COM INC
            prev_price: '149.6'
            put_premium: '15242490'
            put_volume: 86301
            sector: Consumer Cyclical
            shares: 104991822
            short_name: AMAZON 
            ticker: AMZN
            type: stock
            volume: 11285233
            week52_high: '150.57'
            week52_low: '81.43'
            weight: '3.44'
      properties:
        avg30_volume:
          $ref: '#/components/schemas/Stock Average 30 Day Volume'
        bearish_premium:
          $ref: '#/components/schemas/Market General Bearish Premium'
        bullish_premium:
          $ref: '#/components/schemas/Market General Bullish Premium'
        call_premium:
          $ref: '#/components/schemas/Market General Call Premium'
        call_volume:
          $ref: '#/components/schemas/Market General Call Volume'
        close:
          $ref: '#/components/schemas/Candle Close'
        has_options:
          $ref: '#/components/schemas/Stock Has Options'
        high:
          $ref: '#/components/schemas/Candle High'
        low:
          $ref: '#/components/schemas/Candle Low'
        name:
          $ref: '#/components/schemas/Stock Company Name'
        open:
          $ref: '#/components/schemas/Candle Open'
        prev_price:
          $ref: '#/components/schemas/Stock Prev Close Price'
        put_premium:
          $ref: '#/components/schemas/Market General Put Premium'
        put_volume:
          $ref: '#/components/schemas/Market General Put Volume'
        sector:
          $ref: '#/components/schemas/Market General Sector'
        ticker:
          $ref: '#/components/schemas/Stock Ticker'
        volume:
          $ref: '#/components/schemas/Stock Day Stock Volume'
        week_52_high:
          $ref: '#/components/schemas/Stock Week 52 High'
        week_52_low:
          $ref: '#/components/schemas/Stock Week 52 low'
      title: Holdings
      type: object
    Imbalances Volume:
      description: ''
      example:
        - date: 2024-01-22
          event: moc
          side: sell
          type: first
          value: 483000000
        - date: 2024-01-22
          event: moc
          side: sell
          type: second
          value: 483000000
        - date: 2024-01-22
          event: moc
          side: sell
          type: third
          value: 483000000
      properties:
        date:
          $ref: '#/components/schemas/Market General Trading Day'
        event:
          $ref: '#/components/schemas/Market General Imbalance Event'
        side:
          $ref: '#/components/schemas/Market General Imbalance Side'
        type:
          $ref: '#/components/schemas/Market General Imbalance Type'
        value:
          $ref: '#/components/schemas/Market General Imbalance Value'
      title: Imbalances Volume
      type: object
    Implied Volatility:
      description: ''
      example: '0.30'
      title: Implied Volatility
      type: string
    Implied Volatility Term Structure:
      description: ''
      example:
        data:
          - date: 2023-09-08
            dte: 0
            expiry: 2023-09-08
            implied_move: '3.1025'
            implied_move_perc: '0.01765'
            volatility: '0.2319'
          - date: 2023-09-08
            dte: 7
            expiry: 2023-09-15
            implied_move: '4.923'
            implied_move_perc: '0.02747'
            volatility: '0.2352'
      properties:
        date:
          $ref: '#/components/schemas/Market General Trading Day'
        dte:
          $ref: '#/components/schemas/DTE'
        expiry:
          $ref: '#/components/schemas/Stock Expiry'
        implied_move:
          $ref: '#/components/schemas/Stock Implied Move'
        implied_move_perc:
          $ref: '#/components/schemas/Stock Implied Move Perc'
        volatility:
          $ref: '#/components/schemas/Stock Volatility'
      title: Implied Volatility Term Structure
      type: object
    Insider Trades Amount Range:
      description: The reported amount range of the transaction.
      example: $1,000 - $15,000
      title: Insider Trades Amount Range
      type: string
    Insider Trades Filing Date:
      description: The filing date as ISO date.
      example: 2023-12-13
      title: Insider Trades Filing Date
      type: string
    Insider Trades Filing Notes:
      description: Notes of the filing.
      example: 'Subholding Of: Stephens Advantage Account Description: FT UNIT 10479 PFD mutual-fund 32500'
      title: Insider Trades Filing Notes
      type: string
    Insider Trades Issuer:
      description: The person who executed the transaction.
      example: spouse
      title: Insider Trades Issuer
      type: string
    Insider Trades Member Type:
      description: The type of person who executed the transaction.
      enum:
        - senate
        - house
        - other
      example: house
      title: Insider Trades Member Type
      type: string
    Insider Trades Notional Purchases:
      description: The total notional value of purchase transactions.
      example: '14317122.490'
      title: Insider Trades Notional Purchases
      type: string
    Insider Trades Notional Sells:
      description: The total notional value of sell transactions.
      example: '-1291692.4942'
      title: Insider Trades Notional Sells
      type: string
    Insider Trades Purchases:
      description: The amount of purchase transactions.
      example: 12
      title: Insider Trades Purchases
      type: integer
    Insider Trades Reporter:
      description: The person who reported the transaction.
      example: Stephen Cohen
      title: Insider Trades Reporter
      type: string
    Insider Trades Sells:
      description: The amount of sell transactions.
      example: 10
      title: Insider Trades Sells
      type: integer
    Insider Trades Transaction Date:
      description: The transaction date as ISO date.
      example: 2023-12-06
      title: Insider Trades Transaction Date
      type: string
    Insider Trades Transaction Type:
      description: The transaction type.
      enum:
        - Buy
        - Sell (partial)
        - Purchase
        - Sale (Partial)
        - Receive
        - Sale (Full)
        - Sell (PARTIAL)
        - Sell
        - Exchange
      example: Sell
      title: Insider Trades Transaction Type
      type: string
    Insider statistics:
      description: ''
      example:
        data:
          - filing_date: 2023-12-13
            purchases: 12
            purchases_notional: '14317122.490'
            sells: 10
            sells_notional: '-1291692.4942'
          - filing_date: 2023-12-12
            purchases: 78
            purchases_notional: '46598915.1911'
            sells: 211
            sells_notional: '-182466466.7165'
          - filing_date: 2023-12-11
            purchases: 96
            purchases_notional: '431722108.8184'
            sells: 210
            sells_notional: '-1058043617.3548'
      properties:
        filing_date:
          $ref: '#/components/schemas/Insider Trades Filing Date'
        purchases:
          $ref: '#/components/schemas/Insider Trades Purchases'
        purchases_notional:
          $ref: '#/components/schemas/Insider Trades Notional Purchases'
        sells:
          $ref: '#/components/schemas/Insider Trades Sells'
        sells_notional:
          $ref: '#/components/schemas/Insider Trades Notional Sells'
      title: Insider statistics
      type: object
    Issue types:
      description: An array of 1 or more issue types.
      example:
        - Common Stock
        - Index
      items:
        $ref: '#/components/schemas/Single issue type'
      title: Issue types
      type: array
    Market General Avg 3 Day Call Volume:
      description: Avg 3 day call volume.
      example: '606258.533333333333'
      title: Market General Avg 3 Day Call Volume
      type: string
    Market General Avg 3 Day Put Volume:
      description: Avg 3 day put volume.
      example: '436126.833333333333'
      title: Market General Avg 3 Day Put Volume
      type: string
    Market General Avg 30 Day Call Volume:
      description: Avg 30 day call volume.
      example: '679430.000000000000'
      title: Market General Avg 30 Day Call Volume
      type: string
    Market General Avg 30 Day Put Volume:
      description: Avg 30 day put volume.
      example: '401961.285714285714'
      title: Market General Avg 30 Day Put Volume
      type: string
    Market General Avg 30 Day Stock Volume:
      description: Avg 30 day stock volume.
      example: '74402355'
      title: Market General Avg 30 Day Stock Volume
      type: string
    Market General Avg 7 Day Call Volume:
      description: Avg 7 day call volume.
      example: '679145.333333333333'
      title: Market General Avg 7 Day Call Volume
      type: string
    Market General Avg 7 Day Put Volume:
      description: Avg 7 day put volume.
      example: '388676.000000000000'
      title: Market General Avg 7 Day Put Volume
      type: string
    Market General Bearish Premium:
      description: The bearish premium is defined as (call premium bid side) + (put premium ask side).
      example: '143198625'
      title: Market General Bearish Premium
      type: string
    Market General Bullish Premium:
      description: The bullish premium is defined as (call premium ask side) + (put premium bid side).
      example: '196261414'
      title: Market General Bullish Premium
      type: string
    Market General Call OTM Premium:
      description: The sum of the premium of all the out the money (OTM) call transactions that executed.
      example: '9908777.0'
      title: Market General Call OTM Premium
      type: string
    Market General Call OTM Trades:
      description: The amount of out the money (OTM) call transactions that executed.
      example: 6338
      title: Market General Call OTM Trades
      type: integer
    Market General Call OTM Volume:
      description: The sum of the size of all the out the money (OTM) call transactions that executed.
      example: 40385
      title: Market General Call OTM Volume
      type: integer
    Market General Call Open Interest:
      description: The sum of open interest of all the call options.
      example: 3975333
      title: Market General Call Open Interest
      type: integer
    Market General Call Premium:
      description: The sum of the premium of all the call transactions that executed.
      example: '9908777.0'
      title: Market General Call Premium
      type: string
    Market General Call Premium Ask Side:
      description: The sum of the premium of all the call transactions that executed on the ask side.
      example: '5037703.0'
      title: Market General Call Premium Ask Side
      type: string
    Market General Call Premium Bid Side:
      description: The sum of the premium of all the call transactions that executed on the bid side.
      example: '4055973.0'
      title: Market General Call Premium Bid Side
      type: string
    Market General Call Trades:
      description: The amount of call transactions that executed.
      example: 6338
      title: Market General Call Trades
      type: integer
    Market General Call Volume:
      description: The sum of the size of all the call transactions that executed.
      example: 990943
      title: Market General Call Volume
      type: integer
    Market General Call Volume Ask Side:
      description: The sum of the size of all the call transactions that executed on the ask side.
      example: 417251
      title: Market General Call Volume Ask Side
      type: integer
    Market General Call Volume Bid Side:
      description: The sum of the size of all the call transactions that executed on the bid side.
      example: 498271
      title: Market General Call Volume Bid Side
      type: integer
    Market General Imbalance Event:
      description: The event.
      enum:
        - moc
        - moo
      example: moc
      title: Market General Imbalance Event
      type: string
    Market General Imbalance Side:
      description: The side.
      enum:
        - buy
        - sell
      example: buy
      title: Market General Imbalance Side
      type: string
    Market General Imbalance Type:
      description: The type of MOC/MOO.
      enum:
        - first
        - second
        - third
        - final
      example: third
      title: Market General Imbalance Type
      type: string
    Market General Imbalance Value:
      description: The imbalance value.
      example: 483000000
      title: Market General Imbalance Value
      type: integer
    Market General Market Time:
      description: |
        The market time:
        - pr = premarket
        - r  = regular
        - po = postmarket
      enum:
        - r
        - po
        - pr
      example: pr
      title: Market General Market Time
      type: string
    Market General Net Call Premium:
      description: Defined as (call premium ask side) - (call premium bid side).
      example: '-29138464'
      title: Market General Net Call Premium
      type: string
    Market General Net Call Volume:
      description: Defined as (call volume ask side) - (call volume bid side).
      example: 1049
      title: Market General Net Call Volume
      type: integer
    Market General Net Put Premium:
      description: Defined as (put premium ask side) - (put premium bid side).
      example: '23924325'
      title: Market General Net Put Premium
      type: string
    Market General Net Put Volume:
      description: Defined as (put volume ask side) - (put volume bid side).
      example: 1313
      title: Market General Net Put Volume
      type: integer
    Market General Net Volume:
      description: Defined as (call volume ask side) - (call volume bid side) - ((put volume ask side) - (put volume bid side)).
      example: 64312
      title: Market General Net Volume
      type: integer
    Market General Previous Call Open interest:
      description: The call open interest of the previous Trading Day.
      example: 3994750
      title: Market General Previous Call Open interest
      type: integer
    Market General Previous Put Open interest:
      description: The put open interest of the previous Trading Day.
      example: 3679410
      title: Market General Previous Put Open interest
      type: integer
    Market General Previous Trading Day:
      description: The date of the previous Trading Day in ISO format.
      example: 2023-09-07
      title: Market General Previous Trading Day
      type: string
    Market General Put Call Ratio:
      description: The put call ratio which is defined as put volume / call volume.
      example: '0.815713920982337'
      title: Market General Put Call Ratio
      type: string
    Market General Put OTM Premium:
      description: The sum of the premium of all the out the money (OTM) put transactions that executed.
      example: '1204570.0'
      title: Market General Put OTM Premium
      type: string
    Market General Put OTM Trades:
      description: The amount of out the money (OTM) put transactions that executed.
      example: 4270
      title: Market General Put OTM Trades
      type: integer
    Market General Put OTM Volume:
      description: The sum of the size of all the out the money (OTM) put transactions that executed.
      example: 12638
      title: Market General Put OTM Volume
      type: integer
    Market General Put Open Interest:
      description: The sum of the open interest of all the put options.
      example: 3564153
      title: Market General Put Open Interest
      type: integer
    Market General Put Premium:
      description: The sum of the premium of all the put transactions that executed.
      example: '163537151'
      title: Market General Put Premium
      type: string
    Market General Put Premium Ask Side:
      description: The sum of the premium of all the put transactions that executed on the ask side.
      example: '799873.0'
      title: Market General Put Premium Ask Side
      type: string
    Market General Put Premium Bid Side:
      description: The sum of the premium of all the put transactions that executed on the bid side.
      example: '4055973.0'
      title: Market General Put Premium Bid Side
      type: string
    Market General Put Trades:
      description: The amount of put transactions that executed.
      example: 841
      title: Market General Put Trades
      type: integer
    Market General Put Volume:
      description: The sum of the size of all the put transactions that executed.
      example: 808326
      title: Market General Put Volume
      type: integer
    Market General Put Volume Ask Side:
      description: The sum of the size of all the put transactions that executed on the ask side.
      example: 431791
      title: Market General Put Volume Ask Side
      type: integer
    Market General Put Volume Bid Side:
      description: The sum of the size of all the put transactions that executed on the bid side.
      example: 314160
      title: Market General Put Volume Bid Side
      type: integer
    Market General Sector:
      description: The financial sector of the ticker. Empty if unknown or not applicable such as ETF/Index.
      enum:
        - Basic Materials
        - Communication Services
        - Consumer Cyclical
        - Consumer Defensive
        - Energy
        - Financial Services
        - Healthcare
        - Industrials
        - Real Estate
        - Technology
        - Utilities
      example: Technology
      title: Market General Sector
      type: string
    Market General Trading Day:
      description: A trading date in ISO format YYYY-MM-DD
      example: 2023-09-08
      title: Market General Trading Day
      type: string
    Market Holiday Dates:
      description: An array of dates in ISO format.
      example:
        - 2025-01-01
        - 2025-01-02
      items:
        description: A date the Market Holiday is happening.
        example: 2023-01-02
        type: string
      title: Market Holiday Dates
      type: array
    Market Holiday Early Close:
      description: Boolean flag indicating if the market is open and closes early on the given dates.
      example: true
      title: Market Holiday Early Close
      type: boolean
    Market Holiday Event:
      description: The event/reason why the market is not open on the given dates.
      example: New Years Day
      title: Market Holiday Event
      type: string
    Market Holidays:
      description: The days at which the market either closes early or is fully closed.
      example:
        data:
          - data:
              - 2025-01-01
              - 2024-01-01
              - 2023-01-02
            event: New Years Day
          - data:
              - 2025-01-20
              - 2024-01-15
              - 2023-01-16
            event: Martin Luther King, Jr. Day
          - data:
              - 2025-02-17
              - 2024-02-19
              - 2023-02-20
            event: Washington's Birthday
          - data:
              - 2025-04-18
              - 2024-03-29
              - 2023-04-07
            event: Good Friday
          - data:
              - 2025-05-26
              - 2024-05-27
              - 2023-05-29
            event: Memorial Day
          - data:
              - 2025-06-19
              - 2024-06-19
              - 2023-06-19
            event: Juneteenth National Independence Day
          - data:
              - 2025-07-03
              - 2024-07-03
              - 2023-07-03
            early_close: true
            event: Independence Day (early close)
          - data:
              - 2025-07-04
              - 2024-07-04
              - 2023-07-04
            event: Independence Day
          - data:
              - 2025-09-01
              - 2024-09-02
              - 2023-09-04
            event: Labor Day
          - data:
              - 2025-11-27
              - 2024-11-28
              - 2023-11-23
            event: Thanksgiving Day
          - data:
              - 2025-11-28
              - 2024-11-29
              - 2023-11-24
            early_close: true
            event: Thanksgiving Day (early close)
          - data:
              - 2025-12-24
              - 2024-12-24
            early_close: true
            event: Christmas Day (early close)
          - data:
              - 2025-12-25
              - 2024-12-25
              - 2023-12-25
            event: Christmas Day
      properties:
        data:
          $ref: '#/components/schemas/Market Holiday Dates'
        early_close:
          $ref: '#/components/schemas/Market Holiday Early Close'
        event:
          $ref: '#/components/schemas/Market Holiday Event'
      title: Market Holidays
      type: object
    Market Options Volume:
      description: ''
      example:
        data:
          - call_premium: '7306144788.68'
            call_volume: 22074116
            date: 2023-09-08
            put_premium: '8413594929.65'
            put_volume: 19941285
      properties:
        call_premium:
          $ref: '#/components/schemas/Market General Call Premium'
        call_volume:
          $ref: '#/components/schemas/Market General Call Volume'
        date:
          $ref: '#/components/schemas/Market General Trading Day'
        put_premium:
          $ref: '#/components/schemas/Market General Put Premium'
        put_volume:
          $ref: '#/components/schemas/Market General Put Volume'
      title: Market Options Volume
      type: object
    Market Sector Tickers:
      description: List of tickers which are in the sector.
      example:
        data:
          - AMD
          - INTC
          - NVDA
      title: Market Sector Tickers
    Max Pain:
        description: the strike with the highest premiums at stake for puts and calls
        example:
          data:
            - date: 2024-03-04
              values:
                - - 2024-03-04
                  - '473'
                - - 2024-03-05
                  - '472'
            - date: 2024-03-05
              values:
                - - 2024-03-05
                  - '472'
                - - 2024-03-06
                  - '474'
        properties:
          date:
            $ref: '#/components/schemas/Market General Trading Day'
          values:
            type: array
            items:
              type: array
              items:
                type: string                
            description: Max pain strike and expiry date
            example:
              - - 2024-03-04
                - '473'
        title: Max Pain
        type: object
    NBBO Ask:
      description: The National Best Bid and Offer (NBBO) ask price.
      example: '0.03'
      title: NBBO Ask
      type: string
    NBBO Bid:
      description: The National Best Bid and Offer (NBBO) bid price.
      example: '0.03'
      title: NBBO Bid
      type: string
    Net Prem Tick response.:
      description: The net premium for each trading minute.
      example:
        data:
          - date: 2023-09-07
            net_call_premium: '-2075581.0000'
            net_call_volume: -2259
            net_put_premium: '-15559.0000'
            net_put_volume: 95
            tape_time: 2023-09-07T09:30:00-04:00
          - date: 2023-09-07
            net_call_premium: '670064.0000'
            net_call_volume: 754
            net_put_premium: '-1480020.0000'
            net_put_volume: -264
            tape_time: 2023-09-07T09:31:00-04:00
          - date: 2023-09-07
            net_call_premium: '128926.0000'
            net_call_volume: 1347
            net_put_premium: '-644069.0000'
            net_put_volume: 2181
            tape_time: 2023-09-07T09:32:00-04:00
          - date: 2023-09-07
            net_call_premium: '-1095135.0000'
            net_call_volume: 1049
            net_put_premium: '135732.0000'
            net_put_volume: 415
            tape_time: 2023-09-07T09:33:00-04:00
          - date: 2023-09-07
            net_call_premium: '165842.0000'
            net_call_volume: 429
            net_put_premium: '-379365.0000'
            net_put_volume: 224
            tape_time: 2023-09-07T09:34:00-04:00
          - date: 2023-09-07
            net_call_premium: '376569.0000'
            net_call_volume: 1002
            net_put_premium: '408447.0000'
            net_put_volume: 1313
            tape_time: 2023-09-07T09:35:00-04:00
          - date: 2023-09-07
            net_call_premium: '1528190.0000'
            net_call_volume: 4616
            net_put_premium: '-1385094.0000'
            net_put_volume: -3197
            tape_time: 2023-09-07T09:36:00-04:00
          - date: 2023-09-07
            net_call_premium: '646507.0000'
            net_call_volume: 565
            net_put_premium: '-171857.0000'
            net_put_volume: -351
            tape_time: 2023-09-07T09:37:00-04:00
      properties:
        net_call_premium:
          $ref: '#/components/schemas/Market General Net Call Premium'
        net_call_volume:
          $ref: '#/components/schemas/Market General Net Call Volume'
        net_put_premium:
          $ref: '#/components/schemas/Market General Net Put Premium'
        net_put_volume:
          $ref: '#/components/schemas/Market General Net Put Volume'
        tape_time:
          $ref: '#/components/schemas/General Tick time'
      title: Net Prem Tick response.
      type: object
    OI Change:
      description: |
        A list of option contracts with their OI change relative to the previous day.
      example:
        data:
          - avg_price: '30.0543738131838322'
            curr_date: 2024-01-09
            curr_oi: 35207
            last_ask: '34.00'
            last_bid: '32.90'
            last_date: 2024-01-08
            last_fill: '33.50'
            last_oi: 2119
            oi_change: '15.6149126946672959'
            oi_diff_plain: 33088
            option_symbol: MSFT240315C00350000
            percentage_of_total: '0.08879378869021333312'
            prev_ask_volume: 32861
            prev_bid_volume: 235
            prev_mid_volume: 81
            prev_multi_leg_volume: 32762
            prev_neutral_volume: 81
            prev_stock_multi_leg_volume: 0
            prev_total_premium: '99711396.00'
            rnk: 74
            trades: 187
            underlying_symbol: MSFT
            volume: 33177
          - avg_price: '0.16762696308382622884'
            curr_date: 2024-01-09
            curr_oi: 33253
            last_ask: '0.23'
            last_bid: '0.20'
            last_date: 2024-01-08
            last_fill: '0.22'
            last_oi: 27361
            oi_change: '0.21534300646906180330'
            oi_diff_plain: 5892
            option_symbol: MSFT240119C00400000
            percentage_of_total: '0.02624444319547373013'
            prev_ask_volume: 8915
            prev_bid_volume: 860
            prev_mid_volume: 31
            prev_multi_leg_volume: 214
            prev_neutral_volume: 31
            prev_stock_multi_leg_volume: 0
            prev_total_premium: '164375.00'
            rnk: 1638
            trades: 602
            underlying_symbol: MSFT
            volume: 9806
      properties:
        avg_price:
          $ref: '#/components/schemas/General Tick Price'
        curr_date:
          $ref: '#/components/schemas/General ISO Date'
        curr_oi:
          $ref: '#/components/schemas/General Tick Price'
        last_ask:
          $ref: '#/components/schemas/General Tick Price'
        last_bid:
          $ref: '#/components/schemas/General Tick Price'
        last_date:
          $ref: '#/components/schemas/General ISO Date'
        last_fill:
          $ref: '#/components/schemas/General Tick Price'
        last_oi:
          $ref: '#/components/schemas/General Tick Price'
        oi_change:
          $ref: '#/components/schemas/General Tick Price'
        oi_diff_plain:
          $ref: '#/components/schemas/General Tick Price'
        option_symbol:
          $ref: '#/components/schemas/Option Contract Symbol'
        percentage_of_total:
          $ref: '#/components/schemas/General Tick Price'
        prev_ask_volume:
          $ref: '#/components/schemas/General Tick Price'
        prev_bid_volume:
          $ref: '#/components/schemas/General Tick Price'
        prev_mid_volume:
          $ref: '#/components/schemas/General Tick Price'
        prev_multi_leg_volume:
          $ref: '#/components/schemas/General Tick Price'
        prev_neutral_volume:
          $ref: '#/components/schemas/General Tick Price'
        prev_stock_multi_leg_volume:
          $ref: '#/components/schemas/General Tick Price'
        prev_total_premium:
          $ref: '#/components/schemas/General Tick Price'
        rnk:
          $ref: '#/components/schemas/General Tick Price'
        trades:
          $ref: '#/components/schemas/General Tick Price'
        underlying_symbol:
          $ref: '#/components/schemas/General Tick Price'
        volume:
          $ref: '#/components/schemas/General Tick Price'
      title: OI Change
      type: object
    Off Lit Price Level:
      description: ''
      example:
        data:
          - lit_vol: 19941285
            off_vol: 22074116
            price: '120.12'
          - lit_vol: 199415
            off_vol: 220741
            price: '123.12'
      properties:
        lit_vol:
          $ref: '#/components/schemas/Stock Lit Volume'
        off_vol:
          $ref: '#/components/schemas/Stock Off Lit Volume'
        price:
          $ref: '#/components/schemas/Stock Price Level'
      title: Off Lit Price Level
      type: object
    Option Chains response:
      description: All option chains for a given ticker.
      example:
        data:
          - AAPL230908C00175000
          - AAPL231020C00185000
          - AAPL230908C00180000
          - AAPL230908C00182500
          - AAPL230908C00185000
          - AAPL230908C00187500
          - AAPL230908P00172500
          - AAPL230908P00175000
          - AAPL230908P00177500
          - AAPL230908C00177500
          - AAPL230915C00177500
          - AAPL230915C00180000
          - AAPL230915C00185000
          - AAPL230915C00187500
          - AAPL230915C00192500
          - AAPL230915C00195000
          - AAPL230915C00200000
      properties: {}
      title: Option Chains response
      type: object
    Option Contract All Opening Trades:
      description: ''
      example: false
      title: Option Contract All Opening Trades
      type: boolean
    Option Contract Ask Volume:
      description: |
        The amount of volume that happened on the ask side.
        
        Ask side is defined as (ask + bid) / 2 < fill price.
      example: 119403
      title: Option Contract Ask Volume
      type: integer
    Option Contract Avg Price:
      description: The volume weighted average fill price of the contract.
      example: '1.0465802437910297887119234370'
      title: Option Contract Avg Price
      type: string
    Option Contract Bid Volume:
      description: |
        The amount of volume that happened on the bid side.
        
        Bid side is defined as (ask + bid) / 2 > fill price.
      example: 122789
      title: Option Contract Bid Volume
      type: integer
    Option Contract Close:
      description: The last fill on the contract.
      example: '0.03'
      title: Option Contract Close
      type: string
    Option Contract Cross Volume:
      description: |
        The amount of cross volume.
        Cross volume consists of all transaction that have the cross trade code.
      example: 0
      title: Option Contract Cross Volume
      type: integer
    Option Contract Expiry:
      description: The contract expiry date in ISO format.
      example: 2023-12-22
      title: Option Contract Expiry
      type: string
    Option Contract Expiry Count:
      description: The amount of expiries belonging to the trade. This is only greater than 1 if it is a multileg trade.
      example: 2
      title: Option Contract Expiry Count
      type: integer
    Option Contract Floor Volume:
      description: |
        The amount of floor volume.
        Floor volume consists of all transaction that have the floor trade code.
      example: 142
      title: Option Contract Floor Volume
      type: integer
    Option Contract Has Floor:
      description: ''
      example: false
      title: Option Contract Has Floor
      type: boolean
    Option Contract High:
      description: The highest fill on that contract.
      example: '2.95'
      title: Option Contract High
      type: string
    Option Contract IV High:
      description: The highest implied volatility at which a transaction occurred.
      example: '0.675815680048166'
      title: Option Contract IV High
      type: string
    Option Contract IV Low:
      description: The lowest implied volatility at which a transaction occurred.
      example: '0.310502942482285'
      title: Option Contract IV Low
      type: string
    Option Contract Last Transaction IV:
      description: The implied volatility for the last transaction.
      example: '0.675815680048166'
      title: Option Contract Last Transaction IV
      type: string
    Option Contract Last Transaction Time:
      description: The last time there was a transaction for the given contract as UTC timestamp.
      example: 2023-09-08T17:45:32Z
      title: Option Contract Last Transaction Time
      type: string
    Option Contract Low:
      description: The lowest fill on that contract.
      example: '0.02'
      title: Option Contract Low
      type: string
    Option Contract Mid Volume:
      description: |
        The amount of volume that happened in the middle of the ask and bid.
        
        Mid is defined as (ask + bid) / 2 == fill price.
      example: 22707
      title: Option Contract Mid Volume
      type: integer
    Option Contract Multi Leg Volume:
      description: |
        The amount of volume that happened as part of a multileg trade with another contract.
        This can be spreads/rolls/condors/butterflies and more.
      example: 7486
      title: Option Contract Multi Leg Volume
      type: integer
    Option Contract No Side Volume:
      description: |
        The amount of volume that happened on no identifiable side.
        This can be late, out of sequence and/or cross transactions.
      example: 0
      title: Option Contract No Side Volume
      type: integer
    Option Contract Open:
      description: The first fill on that contract.
      example: '0.92'
      title: Option Contract Open
      type: string
    Option Contract Open interest:
      description: The open interest for the contract.
      example: 18680
      title: Option Contract Open interest
      type: integer
    Option Contract Premium:
      description: The total option premium.
      example: '27723806.00'
      title: Option Contract Premium
      type: string
    Option Contract Previous Close Price:
      description: The previous Trading Day's contract price.
      example: '1.29'
      title: Option Contract Previous Close Price
      type: string
    Option Contract Previous Open Interest:
      description: The previous Trading Day's open interest.
      example: 18680
      title: Option Contract Previous Open Interest
      type: integer
    Option Contract Screener response.:
      description: ''
      example:
        data:
          - ask_side_volume: 119403
            avg_price: '1.0465802437910297887119234370'
            bid_side_volume: 122789
            chain_prev_close: '1.29'
            close: '0.03'
            cross_volume: 0
            er_time: unkown
            floor_volume: 142
            high: '2.95'
            last_fill: 2023-09-08T17:45:32Z
            low: '0.02'
            mid_volume: 22707
            multileg_volume: 7486
            next_earnings_date: 2023-10-18
            no_side_volume: 0
            open: '0.92'
            open_interest: 18680
            option_symbol: TSLA230908C00255000
            premium: '27723806.00'
            sector: Consumer Cyclical
            stock_multi_leg_volume: 52
            stock_price: '247.94'
            sweep_volume: 18260
            ticker_vol: 2546773
            total_ask_changes: 44343
            total_bid_changes: 43939
            trades: 39690
            volume: 264899
      properties:
        ask_side_volume:
          $ref: '#/components/schemas/Option Contract Ask Volume'
        avg_price:
          $ref: '#/components/schemas/Option Contract Avg Price'
        bid_side_volume:
          $ref: '#/components/schemas/Option Contract Bid Volume'
        chain_prev_close:
          $ref: '#/components/schemas/Option Contract Previous Close Price'
        close:
          $ref: '#/components/schemas/Option Contract Close'
        cross_volume:
          $ref: '#/components/schemas/Option Contract Cross Volume'
        er_time:
          $ref: '#/components/schemas/Stock Earnings time'
        floor_volume:
          $ref: '#/components/schemas/Option Contract Floor Volume'
        high:
          $ref: '#/components/schemas/Option Contract High'
        last_fill:
          $ref: '#/components/schemas/Option Contract Last Transaction Time'
        low:
          $ref: '#/components/schemas/Option Contract Low'
        mid_volume:
          $ref: '#/components/schemas/Option Contract Mid Volume'
        multileg_volume:
          $ref: '#/components/schemas/Option Contract Multi Leg Volume'
        next_earnings_date:
          $ref: '#/components/schemas/Stock Next Earnings Date'
        no_side_volume:
          $ref: '#/components/schemas/Option Contract No Side Volume'
        open:
          $ref: '#/components/schemas/Option Contract Open'
        open_interest:
          $ref: '#/components/schemas/Option Contract Open interest'
        option_symbol:
          $ref: '#/components/schemas/Option Contract Symbol'
        premium:
          $ref: '#/components/schemas/Option Contract Premium'
        sector:
          $ref: '#/components/schemas/Market General Sector'
        stock_multi_leg_volume:
          $ref: '#/components/schemas/Option Contract Stock Multi Leg Volume'
        stock_price:
          $ref: '#/components/schemas/Stock Close Price'
        sweep_volume:
          $ref: '#/components/schemas/Option Contract Sweep Volume'
        ticker_vol:
          $ref: '#/components/schemas/Stock Total Volume'
        total_ask_changes:
          $ref: '#/components/schemas/Option Contract Total Ask Changes'
        total_bid_changes:
          $ref: '#/components/schemas/Option Contract Total Bid Changes'
        trades:
          $ref: '#/components/schemas/Option Contract Total Trades Count'
        volume:
          $ref: '#/components/schemas/Option Contract Volume'
      title: Option Contract Screener response.
      type: object
    Option Contract Stock Multi Leg Volume:
      description: |
        The amount of volume that happened as part of a stock transaction and possibly other option contracts.
        This can be covered calls and more.
      example: 52
      title: Option Contract Stock Multi Leg Volume
      type: integer
    Option Contract Strike:
      description: The contract strike.
      example: '375'
      title: Option Contract Strike
      type: string
    Option Contract Sweep Volume:
      description: |
        The amount of sweep volume.
        Sweep volume consists of all transaction that have the sweep trade code.
      example: 18260
      title: Option Contract Sweep Volume
      type: integer
    Option Contract Symbol:
      description: |
        The option symbol of the contract.
        
        You can use the following regex to extract underlying ticker, option type, expiry & strike:
        `^(?<symbol>[\w]*)(?<expiry>(\d{2})(\d{2})(\d{2}))(?<type>[PC])(?<strike>\d{8})$`
        
        Keep in mind that the strike needs to be multiplied by 1,000.
      title: Option Contract Symbol
      type: string
    Option Contract Total Ask Changes:
      description: The amount of time the ask changed for the given contract.
      example: 44343
      title: Option Contract Total Ask Changes
      type: integer
    Option Contract Total Bid Changes:
      description: The amount of time the bid changed for the given contract.
      example: 43939
      title: Option Contract Total Bid Changes
      type: integer
    Option Contract Total Trades Count:
      description: The amount of transaction for this contract.
      example: 39690
      title: Option Contract Total Trades Count
      type: integer
    Option Contract Type:
      description: The contract type.
      enum:
        - call
        - put
      example: call or put
      title: Option Contract Type
      type: string
    Option Contract Volume:
      description: The contract volume.
      example: 264899
      title: Option Contract Volume
      type: integer
    Option Price Level:
      description: ''
      example:
        data:
          - call_volume: 22074116
            price: '120.12'
            put_volume: 19941285
          - call_volume: 220741
            price: '123.12'
            put_volume: 199415
      properties:
        call_volume:
          $ref: '#/components/schemas/Market General Call Volume'
        price:
          $ref: '#/components/schemas/Stock Price Level'
        put_volume:
          $ref: '#/components/schemas/Market General Put Volume'
      title: Option Price Level
      type: object
    Option contract :
      description: ''
      example:
        chains:
          - ask_volume: 1766
            avg_price: '0.01360828625235404896'
            bid_volume: 887
            cross_volume: 0
            date: 2023-05-26
            floor_volume: 0
            high_price: '0.03'
            implied_volatility: '0.310502942482285'
            iv_high: '0.675815680048166'
            iv_low: '0.310502942482285'
            last_price: '0.01'
            last_tape_time: 2023-05-26T21:30:29.000000Z
            low_price: '0.01'
            mid_volume: 0
            multi_leg_volume: 393
            neutral_volume: 2
            open_interest: 15907
            stock_multi_leg_volume: 0
            sweep_volume: 752
            total_premium: '3613.00'
            trades: 244
            volume: 2655
      properties:
        ask_volume:
          $ref: '#/components/schemas/Option Contract Ask Volume'
        avg_price:
          $ref: '#/components/schemas/Option Contract Avg Price'
        bid_volume:
          $ref: '#/components/schemas/Option Contract Bid Volume'
        cross_volume:
          $ref: '#/components/schemas/Option Contract Cross Volume'
        date:
          $ref: '#/components/schemas/Market General Trading Day'
        floor_volume:
          $ref: '#/components/schemas/Option Contract Floor Volume'
        high_price:
          $ref: '#/components/schemas/Option Contract High'
        implied_volatility:
          $ref: '#/components/schemas/Option Contract Last Transaction IV'
        iv_high:
          $ref: '#/components/schemas/Option Contract IV High'
        iv_low:
          $ref: '#/components/schemas/Option Contract IV Low'
        last_price:
          $ref: '#/components/schemas/Option Contract Close'
        last_tape_time:
          $ref: '#/components/schemas/Option Contract Last Transaction Time'
        low_price:
          $ref: '#/components/schemas/Option Contract Low'
        mid_volume:
          $ref: '#/components/schemas/Option Contract Mid Volume'
        multi_leg_volume:
          $ref: '#/components/schemas/Option Contract Multi Leg Volume'
        no_side_volume:
          $ref: '#/components/schemas/Option Contract No Side Volume'
        open_interest:
          $ref: '#/components/schemas/Option Contract Open interest'
        stock_multi_leg_volume:
          $ref: '#/components/schemas/Option Contract Stock Multi Leg Volume'
        sweep_volume:
          $ref: '#/components/schemas/Option Contract Sweep Volume'
        total_premium:
          $ref: '#/components/schemas/Option Contract Premium'
        trades:
          $ref: '#/components/schemas/Option Contract Total Trades Count'
        volume:
          $ref: '#/components/schemas/Option Contract Volume'
      title: Option contract 
      type: object
    Option contracts:
      description: All option contracts for a ticker
      example:
        data:
          - ask_volume: 56916
            avg_price: '0.77927817593516586531'
            bid_volume: 68967
            floor_volume: 1815
            high_price: '5.75'
            implied_volatility: '0.542805337797143'
            last_price: '0.01'
            low_price: '0.01'
            mid_volume: 6393
            multi_leg_volume: 9871
            nbbo_ask: '0.01'
            nbbo_bid: '0'
            no_side_volume: 6393
            open_interest: 22868
            option_symbol: AAPL240202P00185000
            prev_oi: 20217
            stock_multi_leg_volume: 13
            sweep_volume: 12893
            total_premium: '10307980.00'
            volume: 132276
          - ask_volume: 54820
            avg_price: '0.19195350495251190385'
            bid_volume: 60784
            floor_volume: 0
            high_price: '0.80'
            implied_volatility: '0.462957019859562'
            last_price: '0.01'
            low_price: '0.01'
            mid_volume: 2215
            multi_leg_volume: 5301
            nbbo_ask: '0.01'
            nbbo_bid: '0'
            no_side_volume: 2215
            open_interest: 19352
            option_symbol: AAPL240202C00187500
            prev_oi: 18135
            stock_multi_leg_volume: 9
            sweep_volume: 11152
            total_premium: '2261577.00'
            volume: 117819
      properties:
        ask_volume:
          $ref: '#/components/schemas/Option Contract Ask Volume'
        avg_price:
          $ref: '#/components/schemas/Option Contract Avg Price'
        bid_volume:
          $ref: '#/components/schemas/Option Contract Bid Volume'
        cross_volume:
          $ref: '#/components/schemas/Option Contract Cross Volume'
        floor_volume:
          $ref: '#/components/schemas/Option Contract Floor Volume'
        high_price:
          $ref: '#/components/schemas/Option Contract High'
        implied_volatility:
          $ref: '#/components/schemas/Option Contract Last Transaction IV'
        last_price:
          $ref: '#/components/schemas/Option Contract Close'
        low_price:
          $ref: '#/components/schemas/Option Contract Low'
        mid_volume:
          $ref: '#/components/schemas/Option Contract Mid Volume'
        multi_leg_volume:
          $ref: '#/components/schemas/Option Contract Multi Leg Volume'
        nbbo_ask:
          $ref: '#/components/schemas/NBBO Ask'
        nbbo_bid:
          $ref: '#/components/schemas/NBBO Bid'
        no_side_volume:
          $ref: '#/components/schemas/Option Contract No Side Volume'
        open_interest:
          $ref: '#/components/schemas/Option Contract Open interest'
        option_symbol:
          $ref: '#/components/schemas/Option Contract Symbol'
        prev_oi:
          $ref: '#/components/schemas/Option Contract Previous Open Interest'
        stock_multi_leg_volume:
          $ref: '#/components/schemas/Option Contract Stock Multi Leg Volume'
        sweep_volume:
          $ref: '#/components/schemas/Option Contract Sweep Volume'
        total_premium:
          $ref: '#/components/schemas/Option Contract Premium'
        volume:
          $ref: '#/components/schemas/Option Contract Volume'
      title: Option contracts
      type: object
    OptionContract:
      description: An option contract in the ISO format.
      example: TSLA230526P00167500
      title: OptionContract
      type: string
    OptionType:
      description: The option type to filter by if specified.
      enum:
        - call
        - put
      title: OptionType
      type: string
    OrderDirection:
      default: desc
      description: Whether to sort descending or ascending. Descending by default.
      enum:
        - desc
        - asc
      example: asc
      title: OrderDirection
      type: string
    Rho:
      description: ''
      example: '-0.002'
      title: Rho
      type: string
    Risk Reversal:
      description: The difference between the iv of a put and a call with similar absolute deltas.
      example: '-0.021'
      title: Risk Reversal
      type: string
    Rule Name:
      description: An array of 1 or more rule name.
      example:
        - RepeatedHits
        - RepeatedHitsAscendingFill
      items:
        $ref: '#/components/schemas/Flow alert rule'
      title: Rule Name
      type: array
    SPIKE value:
      description: |
        The SPIKE value at a time.
      example:
        data:
          - time: 2023-02-14T14:31:00Z
            value: '20.42'
          - time: 2023-02-14T14:32:00Z
            value: '20.55'
          - time: 2023-02-14T14:33:00Z
            value: '20.52'
      properties:
        publish_date:
          $ref: '#/components/schemas/Spike Time'
        title:
          $ref: '#/components/schemas/Spike Value'
      title: SPIKE value
      type: object
    Screener contract order by field:
      description: The field to order by.
      enum:
        - bid_ask_vol
        - bull_bear_vol
        - contract_pricing
        - daily_perc_change
        - diff
        - dte
        - earnings
        - expires
        - expiry
        - floor_volume
        - floor_volume_ratio
        - from_high
        - from_low
        - iv
        - multileg_volume
        - open_interest
        - premium
        - spread
        - stock_price
        - tape_time
        - ticker
        - total_multileg_volume_ratio
        - trades
        - volume
        - volume_oi_ratio
        - volume_ticker_vol_ratio
      example: volume
      title: Screener contract order by field
      type: string
    Screener order by field:
      description: The field to order by.
      enum:
        - total_oi_change
        - call_oi_change
        - put_oi_change
        - total_oi_change_perc
        - call_oi_change_perc
        - put_oi_change_perc
        - implied_move
        - implied_move_perc
        - volatility
        - iv30d
        - iv30d_1d
        - iv30d_1w
        - iv30d_1m
        - iv_rank
        - net_premium
        - net_call_premium
        - net_put_premium
        - perc_change
        - marketcap
        - next_dividend_date
        - next_earnings_date
        - perc_call_vol_ask
        - perc_call_vol_bid
        - perc_put_vol_ask
        - perc_put_vol_bid
        - call_volume
        - volume
        - premium
        - call_premium
        - put_premium
        - put_volume
        - total_open_interest
        - call_open_interest
        - put_open_interest
        - put_call_ratio
      example: premium
      title: Screener order by field
      type: string
    Seasonality Average Change:
      description: The average relative price change per day for the month.
      example: 0.09494354167379757
      title: Seasonality Average Change
      type: number
    Seasonality Change:
      description: The relative price change for the month.
      example: 0.09494354167379757
      title: Seasonality Change
      type: number
    Seasonality Close Price:
      description: The closing stock price of the ticker for the month.
      example: '182.91'
      title: Seasonality Close Price
      type: string
    Seasonality Market:
      description: |
        The price change for the ticker over the given count of years.
      example:
        data:
          - avg_change: '-0.0068'
            max_change: '0.0642'
            median_change: '-0.0041'
            min_change: '-0.0913'
            month: 6
            positive_closes: 7
            positive_months_perc: '0.4375'
            ticker: SPY
            years: 16
          - avg_change: '0.0201'
            max_change: '0.1459'
            median_change: '-0.0034'
            min_change: '-0.0401'
            month: 4
            positive_closes: 3
            positive_months_perc: '0.4285'
            ticker: XLRE
            years: 7
      properties:
        avg_change:
          $ref: '#/components/schemas/Seasonality Average Change'
        max_change:
          $ref: '#/components/schemas/Seasonality Max Change'
        median_change:
          $ref: '#/components/schemas/Seasonality Median Change'
        min_change:
          $ref: '#/components/schemas/Seasonality Min Change'
        month:
          $ref: '#/components/schemas/Seasonality Month Number'
        positive_closes:
          $ref: '#/components/schemas/Seasonality Positive Closes Count'
        positive_months_perc:
          $ref: '#/components/schemas/Seasonality Positive Months Percent'
        ticker:
          $ref: '#/components/schemas/Stock Ticker'
        years:
          $ref: '#/components/schemas/Seasonality Year Count'
      title: Seasonality Market
      type: object
    Seasonality Max Change:
      description: The maximum relative price change per day for the month.
      example: 0.14970489711277724
      title: Seasonality Max Change
      type: number
    Seasonality Median Change:
      description: The median relative price change per day for the month.
      example: 0.09494354167379757
      title: Seasonality Median Change
      type: number
    Seasonality Min Change:
      description: The minimum relative price change per day for the month.
      example: 0.0401821862348179
      title: Seasonality Min Change
      type: number
    Seasonality Month Number:
      description: The number indicating the month the data applies for. e.g. 1 -> January, 2 -> February, ...
      example: 5
      title: Seasonality Month Number
      type: integer
    Seasonality Monthly:
      description: |
        The price change for the ticker in the month over the given count of years.
      example:
        data:
          - avg_change: 0.0034
            max_change: 0.0635
            median_change: 0.0195
            min_change: -0.0727
            month: 1
            positive_closes: 2
            positive_months_perc: 0.6667
            years: 3
          - avg_change: -0.0153
            max_change: 0.0724
            median_change: -0.0153
            min_change: -0.1029
            month: 4
            positive_closes: 1
            positive_months_perc: 0.5
            years: 2
      properties:
        avg_change:
          $ref: '#/components/schemas/Seasonality Average Change'
        max_change:
          $ref: '#/components/schemas/Seasonality Max Change'
        median_change:
          $ref: '#/components/schemas/Seasonality Median Change'
        min_change:
          $ref: '#/components/schemas/Seasonality Min Change'
        month:
          $ref: '#/components/schemas/Seasonality Month Number'
        positive_closes:
          $ref: '#/components/schemas/Seasonality Positive Closes Count'
        positive_months_perc:
          $ref: '#/components/schemas/Seasonality Positive Months Percent'
        years:
          $ref: '#/components/schemas/Seasonality Year Count'
      title: Seasonality Monthly
      type: object
    Seasonality Open Price:
      description: The opening stock price of the ticker for the month.
      example: '182.91'
      title: Seasonality Open Price
      type: string
    Seasonality Performance Order By:
      description: Optional columns to order the result by
      enum:
        - ticker
        - month
        - positive_closes
        - years
        - positive_months_perc
        - median_change
        - avg_change
        - max_change
        - min_change
      example: ticker
      title: Seasonality Performance Order By
      type: string
    Seasonality Performers:
      description: |
        The price change for the ticker over the given count of years.
      example:
        data:
          - avg_change: '0.0592'
            marketcap: '19427901578'
            max_change: '0.1104'
            median_change: '0.0639'
            min_change: '0.0091'
            month: 5
            positive_closes: 11
            positive_months_perc: '1.1'
            sector: Healthcare
            ticker: ICLR
            years: 10
          - avg_change: '0.0577'
            marketcap: '1927713687'
            max_change: '0.2301'
            median_change: '0.0417'
            min_change: '-0.2485'
            month: 5
            positive_closes: 10
            positive_months_perc: '1'
            sector: Technology
            ticker: AMBA
            years: 10
      properties:
        avg_change:
          $ref: '#/components/schemas/Seasonality Average Change'
        marketcap:
          $ref: '#/components/schemas/Stock Marketcap AUM'
        max_change:
          $ref: '#/components/schemas/Seasonality Max Change'
        median_change:
          $ref: '#/components/schemas/Seasonality Median Change'
        min_change:
          $ref: '#/components/schemas/Seasonality Min Change'
        month:
          $ref: '#/components/schemas/Seasonality Month Number'
        positive_closes:
          $ref: '#/components/schemas/Seasonality Positive Closes Count'
        positive_months_perc:
          $ref: '#/components/schemas/Seasonality Positive Months Percent'
        sector:
          $ref: '#/components/schemas/Market General Sector'
        ticker:
          $ref: '#/components/schemas/Stock Ticker'
        years:
          $ref: '#/components/schemas/Seasonality Year Count'
      title: Seasonality Performers
      type: object
    Seasonality Positive Closes Count:
      description: The number of years, the month had a positive close.
      example: 2
      title: Seasonality Positive Closes Count
      type: integer
    Seasonality Positive Months Percent:
      description: The relative amount of times, the month had a positive close. Multiply with 100 to get the amount in percent.
      example: 0.6667
      title: Seasonality Positive Months Percent
      type: number
    Seasonality Year:
      description: The Year.
      example: 5
      title: Seasonality Year
      type: integer
    Seasonality Year Count:
      description: The number of years used to calculate the data.
      example: 3
      title: Seasonality Year Count
      type: number
    Seasonality Year Month:
      description: |
        The price change for the ticker in the month in the year.
      example:
        data:
          - change: '-0.0469'
            close: 315.75
            month: 9
            open: 331.31
            year: 2023
          - change: '0.0690'
            close: 338.11
            month: 10
            open: 316.28
            year: 2023
      properties:
        change:
          $ref: '#/components/schemas/Seasonality Change'
        close:
          $ref: '#/components/schemas/Seasonality Close Price'
        month:
          $ref: '#/components/schemas/Seasonality Month Number'
        open:
          $ref: '#/components/schemas/Seasonality Open Price'
        year:
          $ref: '#/components/schemas/Seasonality Year'
      title: Seasonality Year Month
      type: object
    Sector:
      description: A financial sector.
      enum:
        - Basic Materials
        - Communication Services
        - Consumer Cyclical
        - Consumer Defensive
        - Energy
        - Financial Services
        - Healthcare
        - Industrials
        - Real Estate
        - Technology
        - Utilities
      example: Technology
      title: Sector
      type: string
    Sector ETF:
      description: ''
      example:
        data:
          - avg30_call_volume: '3636459.000000000000'
            avg30_put_volume: '4796289.166666666667'
            avg30_stock_volume: '74402355'
            avg_30_day_call_volume: '3636459.000000000000'
            avg_30_day_put_volume: '4796289.166666666667'
            avg_7_day_call_volume: '3343061.285714285714'
            avg_7_day_put_volume: '4521616.428571428571'
            bearish_premium: '258905527'
            bullish_premium: '238729761'
            call_premium: '293824502'
            call_volume: 1844830
            full_name: S&P 500 Index
            high: '447.11'
            last: '446.15'
            low: '444.8'
            marketcap: '406517275500'
            open: '444.93'
            prev_close: '444.85'
            prev_date: 2023-09-07
            put_premium: '244159205'
            put_volume: 2009005
            ticker: SPY
            volume: 23132119
            week52_high: '459.44'
            week52_low: '342.65'
      properties:
        avg30_stock_volume:
          $ref: '#/components/schemas/Market General Avg 30 Day Stock Volume'
        avg_30_day_call_volume:
          $ref: '#/components/schemas/Market General Avg 30 Day Call Volume'
        avg_30_day_put_volume:
          $ref: '#/components/schemas/Market General Avg 30 Day Put Volume'
        avg_7_day_call_volume:
          $ref: '#/components/schemas/Market General Avg 7 Day Call Volume'
        avg_7_day_put_volume:
          $ref: '#/components/schemas/Market General Avg 7 Day Put Volume'
        bearish_premium:
          $ref: '#/components/schemas/Market General Bearish Premium'
        bullish_premium:
          $ref: '#/components/schemas/Market General Bullish Premium'
        call_premium:
          $ref: '#/components/schemas/Market General Call Premium'
        call_volume:
          $ref: '#/components/schemas/Market General Call Volume'
        close:
          $ref: '#/components/schemas/Candle Close'
        full_name:
          $ref: '#/components/schemas/Etf Sector Full Name'
        high:
          $ref: '#/components/schemas/Candle High'
        low:
          $ref: '#/components/schemas/Candle Low'
        marketcap:
          $ref: '#/components/schemas/Stock Marketcap AUM'
        open:
          $ref: '#/components/schemas/Candle Open'
        prev_close:
          $ref: '#/components/schemas/Stock Prev Close Price'
        prev_date:
          $ref: '#/components/schemas/Market General Previous Trading Day'
        put_premium:
          $ref: '#/components/schemas/Market General Put Premium'
        put_volume:
          $ref: '#/components/schemas/Market General Put Volume'
        ticker:
          $ref: '#/components/schemas/Stock Ticker'
        volume:
          $ref: '#/components/schemas/Stock Day Stock Volume'
        week_52_high:
          $ref: '#/components/schemas/Stock Week 52 High'
        week_52_low:
          $ref: '#/components/schemas/Stock Week 52 low'
      title: Sector ETF
      type: object
    Sectors:
      description: An array of 1 or more sectors.
      example:
        - Consumer Cyclical
        - Technology
        - Utilities
      items:
        $ref: '#/components/schemas/Single sector'
      title: Sectors
      type: array
    Congressional Trade Report:
      description: Congressional Stock Filings
      example:
        data:
          - amounts: $15,001 - $50,000
            filed_at_date: 2023-02-13
            issuer: not-disclosed
            member_type: house
            notes: 'Subholding Of: Stephens Advantage Account Description: FT UNIT 10479 PFD mutual-fund 32500'
            reporter: Stephen Cohen
            ticker: FHWVOX
            transaction_date: 2023-02-06
            txn_type: Buy
      properties:
        amounts:
          $ref: '#/components/schemas/Insider Trades Amount Range'
        filed_at_date:
          $ref: '#/components/schemas/Insider Trades Filing Date'
        issuer:
          $ref: '#/components/schemas/Insider Trades Issuer'
        member_type:
          $ref: '#/components/schemas/Insider Trades Member Type'
        notes:
          $ref: '#/components/schemas/Insider Trades Filing Notes'
        reporter:
          $ref: '#/components/schemas/Insider Trades Reporter'
        ticker:
          $ref: '#/components/schemas/Stock Ticker'
        transaction_date:
          $ref: '#/components/schemas/Insider Trades Transaction Date'
        txn_type:
          $ref: '#/components/schemas/Insider Trades Transaction Type'
      title: Congressional Trade Report
      type: object
    Side:
      default: ALL
      description: The side of a stock trade. Must be one of ASK, BID, MID. If not set, will return all side's trades.
      enum:
        - ALL
        - ASK
        - BID
        - MID
      example: ASK
      title: Side
      type: string
    Single Trade Execution Time:
      description: The time with timezone when a trade was executed.
      example: 2023-02-16T00:59:44Z
      title: Single Trade Execution Time
      type: string
    Single Trade External Hour Sold Code:
      description: The code describing why the trade happened outside of regular market hours. Null if none applies.
      enum:
        - sold_out_of_sequence
        - extended_hours_trade_late_or_out_of_sequence
        - extended_hours_trade
      example: sold_out_of_sequence
      title: Single Trade External Hour Sold Code
      type: string
    Single Trade Has Multileg:
      description: Whether the trade is a multileg trade.
      example: false
      title: Single Trade Has Multileg
      type: boolean
    Single Trade Is Single Leg:
      description: Whether the trade is a singleleg trade.
      example: true
      title: Single Trade Is Single Leg
      type: boolean
    Single Trade Is Sweep:
      description: Whether the trade is a sweep.
      example: true
      title: Single Trade Is Sweep
      type: boolean
    Single Trade Is Trade Cancelled:
      description: Whether the trade has been cancelled.
      example: true
      title: Single Trade Is Trade Cancelled
      type: boolean
    Single Trade Market Center:
      description: The market center code.
      example: L
      title: Single Trade Market Center
      type: string
    Single Trade Price:
      description: The price of the trade.
      example: '18.9904'
      title: Single Trade Price
      type: string
    Single Trade Sale Cond Code:
      description: The sale condition code. Null if none applies.
      enum:
        - contingent_trade
        - odd_lot_execution
        - prio_reference_price
        - average_price_trade
      example: contingent_trade
      title: Single Trade Sale Cond Code
      type: string
    Single Trade Settlement:
      description: The kind of trade settlement.
      enum:
        - cash_settlement
        - next_day_settlement
        - seller_settlement
        - regular_settlement
      example: cash_settlement
      title: Single Trade Settlement
      type: string
    Single Trade Size:
      description: The size of the transaction.
      example: 6400
      title: Single Trade Size
      type: integer
    Single Trade Tracking ID:
      description: The tracking ID of the trade.
      example: 71984388012245
      title: Single Trade Tracking ID
      type: integer
    Single Trade Trade Code:
      description: The trade code. Null if none applies.
      enum:
        - derivative_priced
        - qualified_contingent_trade
        - intermarket_sweep
      example: derivative_priced
      title: Single Trade Trade Code
      type: string
    Single issue type:
      description: A singular issue type.
      enum:
        - Common Stock
        - ETF
        - Index
        - ADR
      example: Common Stock
      title: Single issue type
      type: string
    Single sector:
      description: A singular sector.
      enum:
        - Basic Materials
        - Communication Services
        - Consumer Cyclical
        - Consumer Defensive
        - Energy
        - Financial Services
        - Healthcare
        - Industrials
        - Real Estate
        - Technology
        - Utilities
      example: Real Estate
      title: Single sector
      type: string
    SingleMonthNumber:
      description: A month number indicating the month, e.g. 1 -> January, 2 -> February, ...
      enum:
        - '1'
        - '2'
        - '3'
        - '4'
        - '5'
        - '6'
        - '7'
        - '8'
        - '9'
        - '10'
        - '11'
        - '12'
      example: '3'
      title: SingleMonthNumber
      type: string
    SingleTicker:
      description: A single ticker
      example: AAPL
      title: SingleTicker
      type: string
    SingleTickerForSector:
      description: A single ticker. The result will only contain tickers in the same sector as the given ticker, e.g. 'MSFT' will only yield result tickers in sector 'Technology'.
      example: AAPL
      title: SingleTickerForSector
      type: string
    Spike Time:
      description: The timestamp for the SPIKE value.
      example: 2023-02-14T14:31:00Z
      title: Spike Time
      type: string
    Spike Value:
      description: The SPIKE value.
      example: '24.53'
      title: Spike Value
      type: string
    Spot Call Charm Exposure:
      description: The sum of the spot charm exposure values of all call transactions at a given strike.
      example: '102382359.5786'
      title: Spot Call Charm Exposure
      type: string
    Spot Call Gamma Exposure:
      description: The sum of the spot gamma exposure values of all call transactions at a given strike.
      example: '9356683.4241'
      title: Spot Call Gamma Exposure
      type: string
    Spot Call Vanna Exposure:
      description: The sum of the spot vanna exposure values of all call transactions at a given strike.
      example: '152099632406.9564'
      title: Spot Call Vanna Exposure
      type: string
    Spot GEX exposures per 1min:
      description: ''
      example:
        data:
          - charm_per_one_percent_move_oi: '5124108502049.17'
            charm_per_one_percent_move_vol: '320909908341.10'
            delta_per_one_percent_move_oi: '70827151575067.12'
            delta_per_one_percent_move_vol: '2282895170748.09'
            gamma_per_one_percent_move_oi: '65476967081.41'
            gamma_per_one_percent_move_vol: '12921519098.30'
            price: '4650'
            time: 2023-12-13T05:00:41.481000Z
            vanna_per_one_percent_move_oi: '-54622844772.90'
            vanna_per_one_percent_move_vol: '-5559678859.12'
      properties:
        charm_per_one_percent_move_oi:
          $ref: '#/components/schemas/Gex Charm Per One Percent Move OI'
        charm_per_one_percent_move_vol:
          $ref: '#/components/schemas/Gex Charm Per One Percent Move Volume'
        delta_per_one_percent_move_oi:
          $ref: '#/components/schemas/Gex Delta Per One Percent Move OI'
        delta_per_one_percent_move_vol:
          $ref: '#/components/schemas/Gex Delta Per One Percent Move Volume'
        gamma_per_one_percent_move_oi:
          $ref: '#/components/schemas/Gex Gamma Per One Percent Move OI'
        gamma_per_one_percent_move_vol:
          $ref: '#/components/schemas/Gex Gamma Per One Percent Move Volume'
        price:
          $ref: '#/components/schemas/Gex Underlying Price'
        time:
          $ref: '#/components/schemas/Gex Calculation Time'
        vanna_per_one_percent_move_oi:
          $ref: '#/components/schemas/Gex Vanna Per One Percent Move OI'
        vanna_per_one_percent_move_vol:
          $ref: '#/components/schemas/Gex Vanna Per One Percent Move Volume'
      title: Spot GEX exposures per 1min
      type: object
    Spot Put Charm Exposure:
      description: The sum of the spot charm exposure values of all put transactions at a given strike.
      example: '102382359.5786'
      title: Spot Put Charm Exposure
      type: string
    Spot Put Gamma Exposure:
      description: The sum of the spot gamma exposure values of all put transactions at a given strike.
      example: '9356683.4241'
      title: Spot Put Gamma Exposure
      type: string
    Spot Put Vanna Exposure:
      description: The sum of the spot vanna exposure values of all put transactions at a given strike.
      example: '152099632406.9564'
      title: Spot Put Vanna Exposure
      type: string
    Spot greek exposures by strike:
      description: ''
      example:
        data:
          - call_charm_oi: '70827151575067.12'
            call_charm_vol: '70827151575067.12'
            call_gamma_oi: '5124108502049.17'
            call_gamma_vol: '5124108502049.17'
            call_vanna_oi: '65476967081.41'
            call_vanna_vol: '65476967081.41'
            price: '4650'
            put_charm_oi: '2282895170748.09'
            put_charm_vol: '2282895170748.09'
            put_gamma_oi: '320909908341.10'
            put_gamma_vol: '320909908341.10'
            put_vanna_oi: '12921519098.30'
            put_vanna_vol: '12921519098.30'
            time: 2023-12-13T05:00:41.481000Z
      properties:
        call_charm_oi:
          $ref: '#/components/schemas/Spot Call Charm Exposure'
        call_charm_vol:
          $ref: '#/components/schemas/Spot Call Charm Exposure'
        call_gamma_oi:
          $ref: '#/components/schemas/Spot Call Gamma Exposure'
        call_gamma_vol:
          $ref: '#/components/schemas/Spot Call Gamma Exposure'
        call_vanna_oi:
          $ref: '#/components/schemas/Spot Call Vanna Exposure'
        call_vanna_vol:
          $ref: '#/components/schemas/Spot Call Vanna Exposure'
        price:
          $ref: '#/components/schemas/Gex Underlying Price'
        put_charm_oi:
          $ref: '#/components/schemas/Spot Put Charm Exposure'
        put_charm_vol:
          $ref: '#/components/schemas/Spot Put Charm Exposure'
        put_gamma_oi:
          $ref: '#/components/schemas/Spot Put Gamma Exposure'
        put_gamma_vol:
          $ref: '#/components/schemas/Spot Put Gamma Exposure'
        put_vanna_oi:
          $ref: '#/components/schemas/Spot Put Vanna Exposure'
        put_vanna_vol:
          $ref: '#/components/schemas/Spot Put Vanna Exposure'
        strike:
          $ref: '#/components/schemas/Strike'
        time:
          $ref: '#/components/schemas/Gex Calculation Time'
      title: Spot greek exposures by strike
      type: object
    Stock Average 30 Day Volume:
      description: The avg stock volume for the stock last 30 days.
      example: '55973002'
      title: Stock Average 30 Day Volume
      type: string
    Stock Close Price:
      description: The latest stock price of the ticker.
      example: '182.91'
      title: Stock Close Price
      type: string
    Stock Company Name:
      description: The name of the company.
      example: APPLE INC
      title: Stock Company Name
      type: string
    Stock Day Stock Volume:
      description: The volume of the ticker for the Trading Day.
      example: 23132119
      title: Stock Day Stock Volume
      type: integer
    Stock Earnings time:
      description: The time when the earnings will be released.
      enum:
        - unkown
        - afterhours
        - premarket
      example: premarket
      title: Stock Earnings time
      type: string
    Stock Expiry:
      description: The expiry of an options cycle as an ISO date.
      example: 2023-09-08
      title: Stock Expiry
      type: string
    Stock Full Name:
      description: Full name of the ticker.
      example: APPLE
      title: Stock Full Name
      type: string
    Stock Has Dividend:
      description: Boolean flag whether the company pays dividends.
      example: true
      title: Stock Has Dividend
      type: boolean
    Stock Has Earnings History:
      description: Boolean flag whether historic earnings data is present.
      example: true
      title: Stock Has Earnings History
      type: boolean
    Stock Has Investment Arm:
      description: Boolean flag whether the given stock is holding stocks of other companies.
      example: true
      title: Stock Has Investment Arm
      type: boolean
    Stock Has Options:
      description: Boolean flag whether the company has options.
      example: true
      title: Stock Has Options
      type: boolean
    Stock Implied Move:
      description: The implied move of the underlying stock by a given date based on the money option contracts. It is calculated by multiplying the sum of the call and put price by 0.85. If no expiry date is included, then the implied move is for the nearest end of the week expiration (the nearest monthly expiration if there are no weekly contracts).
      example: '2.2398043036460877'
      title: Stock Implied Move
      type: string
    Stock Implied Move Perc:
      description: The implied move as a percentage of the underlying stock price.
      example: '0.012247398860706955'
      title: Stock Implied Move Perc
      type: string
    Stock Is Index Ticker:
      description: Indicator, whether the ticker is an index.
      example: true
      title: Stock Is Index Ticker
      type: boolean
    Stock Issue Type:
      description: The issue type of the ticker.
      enum:
        - Common Stock
        - ETF
        - Index
        - ADR
      example: Common Stock
      title: Stock Issue Type
      type: string
    Stock Iv 30d:
      description: The 30 day implied volatility.
      example: '0.2038053572177887'
      title: Stock Iv 30d
      type: string
    Stock Iv 30d 1D:
      description: The previous Trading Day's 30 day implied volatility.
      example: '0.18791808187961578'
      title: Stock Iv 30d 1D
      type: string
    Stock Iv 30d 1M:
      description: The implied volatility relative to the implied volatility throughout the previous year. A rank of 0 indicates that the implied volatility is the lowest it has been within the past year. A rank of 100 indicates that the implied volatility is the highest it has been within the past year.
      example: '13.52369891956068210400'
      title: Stock Iv 30d 1M
      type: string
    Stock Iv 30d 1W:
      description: The 30 day implied volatility from 1 week ago.
      example: '0.18398597836494446'
      title: Stock Iv 30d 1W
      type: string
    Stock Lit Volume:
      description: The lit volume (this only represents stock trades executed on exchanges operated by Nasdaq).
      example: 19941285
      title: Stock Lit Volume
      type: integer
    Stock Marketcap AUM:
      description: The marketcap of the underlying ticker. If the issue type of the ticker is ETF then the marketcap represents the AUM.
      example: '2965813810400'
      title: Stock Marketcap AUM
      type: string
    Stock Next Dividend Date:
      description: The next dividend date of the ticker. Null if either unknown as of now or the stock does not pay dividends.
      example: 2023-10-26
      format: date
      title: Stock Next Dividend Date
      type: string
    Stock Next Earnings Date:
      description: The next earnings date of the ticker. Null if either unknown as of now or if the ticker does not have any earnings such as an ETF
      example: 2023-10-26
      format: date
      title: Stock Next Earnings Date
      type: string
    Stock Off Lit Volume:
      description: The off lit stock volume (this only represents the FINRA operated exchanges).
      example: 22074116
      title: Stock Off Lit Volume
      type: integer
    Stock Open Interest:
      description: The sum of open interest for all contracts.
      example: 451630
      title: Stock Open Interest
      type: integer
    Stock Options Volume:
      description: The sum of volume for all contracts.
      example: 962332
      title: Stock Options Volume
      type: integer
    Stock Prev Close Price:
      description: The previous Trading Day's stock price of the ticker.
      example: '189.70'
      title: Stock Prev Close Price
      type: string
    Stock Price Level:
      description: The price level.
      example: '120.12'
      title: Stock Price Level
      type: string
    Stock Screener response:
      description: Response schema for stock screener requests.
      example:
        data:
          - avg_30_day_call_volume: '606258.533333333333'
            avg_30_day_put_volume: '436126.833333333333'
            avg_3_day_call_volume: '679145.333333333333'
            avg_3_day_put_volume: '388676.000000000000'
            avg_7_day_call_volume: '679430.000000000000'
            avg_7_day_put_volume: '401961.285714285714'
            bearish_premium: '196261414'
            bullish_premium: '143198625'
            call_open_interest: 3975333
            call_premium: '222941665'
            call_volume: 990943
            call_volume_ask_side: 417251
            call_volume_bid_side: 498271
            close: '182.91'
            date: 2023-09-06
            er_time: unkown
            implied_move: '2.2398043036460877'
            implied_move_perc: '0.012247398860706955'
            is_index: false
            issue_type: Common Stock
            iv30d: '0.2038053572177887'
            iv30d_1d: '0.18791808187961578'
            iv30d_1m: '0.2136848270893097'
            iv30d_1w: '0.18398597836494446'
            iv_rank: '13.52369891956068210400'
            marketcap: '2965813810400'
            net_call_premium: '-29138464'
            net_put_premium: '23924325'
            next_dividend_date:
            next_earnings_date: 2023-10-26
            prev_call_oi: 3994750
            prev_close: '189.70'
            prev_put_oi: 3679410
            put_call_ratio: '0.815713920982337'
            put_open_interest: 3564153
            put_premium: '163537151'
            put_volume: 808326
            put_volume_ask_side: 431791
            put_volume_bid_side: 314160
            sector: Technology
            ticker: AAPL
            total_open_interest: 7539486
            volatility: '0.18338055163621902'
            week_52_high: '198.23'
            week_52_low: '124.17'
      properties:
        avg_30_day_call_volume:
          $ref: '#/components/schemas/Market General Avg 30 Day Call Volume'
        avg_30_day_put_volume:
          $ref: '#/components/schemas/Market General Avg 30 Day Put Volume'
        avg_3_day_call_volume:
          $ref: '#/components/schemas/Market General Avg 3 Day Call Volume'
        avg_3_day_put_volume:
          $ref: '#/components/schemas/Market General Avg 3 Day Put Volume'
        avg_7_day_call_volume:
          $ref: '#/components/schemas/Market General Avg 7 Day Call Volume'
        avg_7_day_put_volume:
          $ref: '#/components/schemas/Market General Avg 7 Day Put Volume'
        bearish_premium:
          $ref: '#/components/schemas/Market General Bearish Premium'
        bullish_premium:
          $ref: '#/components/schemas/Market General Bullish Premium'
        call_open_interest:
          $ref: '#/components/schemas/Market General Call Open Interest'
        call_premium:
          $ref: '#/components/schemas/Market General Call Premium'
        call_volume:
          $ref: '#/components/schemas/Market General Call Volume'
        call_volume_ask_side:
          $ref: '#/components/schemas/Market General Call Volume Ask Side'
        call_volume_bid_side:
          $ref: '#/components/schemas/Market General Call Volume Bid Side'
        close:
          $ref: '#/components/schemas/Stock Close Price'
        er_time:
          $ref: '#/components/schemas/Stock Earnings time'
        implied_move:
          $ref: '#/components/schemas/Stock Implied Move'
        implied_move_perc:
          $ref: '#/components/schemas/Stock Implied Move Perc'
        is_index:
          $ref: '#/components/schemas/Stock Is Index Ticker'
        issue_type:
          $ref: '#/components/schemas/Stock Issue Type'
        iv30d:
          $ref: '#/components/schemas/Stock Iv 30d'
        iv30d_1d:
          $ref: '#/components/schemas/Stock Iv 30d 1D'
        iv30d_1m:
          $ref: '#/components/schemas/Stock Iv 30d 1M'
        iv30d_1w:
          $ref: '#/components/schemas/Stock Iv 30d 1W'
        iv_rank:
          $ref: '#/components/schemas/Stock Iv 30d 1M'
        marketcap:
          $ref: '#/components/schemas/Stock Marketcap AUM'
        net_call_premium:
          $ref: '#/components/schemas/Market General Net Call Premium'
        net_put_premium:
          $ref: '#/components/schemas/Market General Net Put Premium'
        next_dividend_date:
          $ref: '#/components/schemas/Stock Next Dividend Date'
        next_earnings_date:
          $ref: '#/components/schemas/Stock Next Earnings Date'
        prev_call_oi:
          $ref: '#/components/schemas/Market General Previous Call Open interest'
        prev_close:
          $ref: '#/components/schemas/Stock Prev Close Price'
        prev_put_oi:
          $ref: '#/components/schemas/Market General Previous Put Open interest'
        put_call_ratio:
          $ref: '#/components/schemas/Market General Put Call Ratio'
        put_open_interest:
          $ref: '#/components/schemas/Market General Put Open Interest'
        put_premium:
          $ref: '#/components/schemas/Market General Put Premium'
        put_volume:
          $ref: '#/components/schemas/Market General Put Volume'
        put_volume_ask_side:
          $ref: '#/components/schemas/Market General Put Volume Ask Side'
        put_volume_bid_side:
          $ref: '#/components/schemas/Market General Put Volume Bid Side'
        sector:
          $ref: '#/components/schemas/Market General Sector'
        ticker:
          $ref: '#/components/schemas/Stock Ticker'
        total_open_interest:
          $ref: '#/components/schemas/Stock Total Open Interest'
        volatility:
          $ref: '#/components/schemas/Stock Volatility'
        week_52_high:
          $ref: '#/components/schemas/Stock Week 52 High'
        week_52_low:
          $ref: '#/components/schemas/Stock Week 52 low'
      title: Stock Screener response
      type: object
    Stock Short Description:
      description: Short description about what the stock does.
      example: Apple Inc. is an American multinational technology company headquartered in Cupertino, California. Apple is the worlds largest technology company by ...
      title: Stock Short Description
      type: string
    Stock Ticker:
      description: The stock ticker.
      example: AAPL
      title: Stock Ticker
      type: string
    Stock Total Open Interest:
      description: The sum of open interest of all chains for the given ticker.
      title: Stock Total Open Interest
      type: integer
    Stock Total Volume:
      description: The total amount of options volume for the given ticker.
      title: Stock Total Volume
      type: integer
    Stock Volatility:
      description: The implied volatility average of the at the money put and call option contracts. If no expiry date is included, then the volatility is of the nearest end of the week expiration (the nearest monthly expiration if there are no weekly contracts).
      example: '0.18338055163621902'
      title: Stock Volatility
      type: string
    Stock Week 52 High:
      description: The 52 week high stock price of the ticker.
      example: '198.23'
      title: Stock Week 52 High
      type: string
    Stock Week 52 low:
      description: The 52 week low stock price of the ticker.
      example: '124.17'
      title: Stock Week 52 low
      type: string
    StockTradesMinPremium:
      default: 0
      description: The minimum premium requested trades should have. Must be a positive integer.
      example: 50000
      minimum: 0
      title: StockTradesMinPremium
      type: integer
    Strike:
      description: The strike price of an option contract.
      example: '150.0'
      title: Strike
      type: string
    Theta:
      description: Theta is the change in the option value over time.
      example: '-0.64'
      title: Theta
      type: string
    Ticker:
      description: A comma separated list of tickers. To exclude certain tickers prefix the first ticker with a `-`.
      example: AAPL,INTC
      title: Ticker
      type: string
    Ticker Info:
      description: General information about the given ticker.
      example:
        data:
          announce_time: unkown
          avg30_volume: '55973002'
          full_name: APPLE
          has_dividend: true
          has_earnings_history: true
          has_investment_arm: false
          has_options: true
          issue_type: Common Stock
          marketcap: '2776014233920'
          marketcap_size: big
          next_earnings_date: 2023-10-26
          sector: Technology
          short_description: Apple Inc. is an American multinational technology company headquartered in Cupertino, California. Apple is the worlds largest technology company by ...
          symbol: AAPL
          uw_tags: []
      properties:
        announce_time:
          $ref: '#/components/schemas/Stock Earnings time'
        avg30_volume:
          $ref: '#/components/schemas/Stock Average 30 Day Volume'
        full_name:
          $ref: '#/components/schemas/Stock Full Name'
        has_dividend:
          $ref: '#/components/schemas/Stock Has Dividend'
        has_earnings_history:
          $ref: '#/components/schemas/Stock Has Earnings History'
        has_investment_arm:
          $ref: '#/components/schemas/Stock Has Investment Arm'
        has_options:
          $ref: '#/components/schemas/Stock Has Options'
        issue_type:
          $ref: '#/components/schemas/Stock Issue Type'
        marketcap:
          $ref: '#/components/schemas/Stock Marketcap AUM'
        next_earnings_date:
          $ref: '#/components/schemas/Stock Next Earnings Date'
        sector:
          $ref: '#/components/schemas/Market General Sector'
        short_description:
          $ref: '#/components/schemas/Stock Short Description'
      title: Ticker Info
      type: object
    Ticker Options Volume:
      description: The sum of volume for all contracts. With other calculations related to premium and volume
      example:
        data:
          - avg_30_day_call_volume: '658450.333333333333'
            avg_30_day_put_volume: '481505.300000000000'
            avg_3_day_call_volume: '949763.000000000000'
            avg_3_day_put_volume: '756387.333333333333'
            avg_7_day_call_volume: '878336.000000000000'
            avg_7_day_put_volume: '580650.857142857143'
            bearish_premium: '138449839'
            bullish_premium: '152015294'
            call_open_interest: 4358631
            call_premium: '208699280'
            call_volume: 1071546
            call_volume_ask_side: 486985
            call_volume_bid_side: 514793
            date: 2023-09-08
            net_call_premium: '122015294'
            net_put_premium: '108449839'
            put_open_interest: 3771656
            put_premium: '125472872'
            put_volume: 666386
            put_volume_ask_side: 298282
            put_volume_bid_side: 318834
      properties:
        avg_30_day_call_volume:
          $ref: '#/components/schemas/Market General Avg 30 Day Call Volume'
        avg_30_day_put_volume:
          $ref: '#/components/schemas/Market General Avg 30 Day Put Volume'
        avg_3_day_call_volume:
          $ref: '#/components/schemas/Market General Avg 3 Day Call Volume'
        avg_3_day_put_volume:
          $ref: '#/components/schemas/Market General Avg 3 Day Put Volume'
        avg_7_day_call_volume:
          $ref: '#/components/schemas/Market General Avg 7 Day Call Volume'
        avg_7_day_put_volume:
          $ref: '#/components/schemas/Market General Avg 7 Day Put Volume'
        bearish_premium:
          $ref: '#/components/schemas/Market General Bearish Premium'
        bullish_premium:
          $ref: '#/components/schemas/Market General Bullish Premium'
        call_open_interest:
          $ref: '#/components/schemas/Market General Call Open Interest'
        call_premium:
          $ref: '#/components/schemas/Market General Call Premium'
        call_volume:
          $ref: '#/components/schemas/Market General Call Volume'
        call_volume_ask_side:
          $ref: '#/components/schemas/Market General Call Volume Ask Side'
        call_volume_bid_side:
          $ref: '#/components/schemas/Market General Call Volume Bid Side'
        date:
          $ref: '#/components/schemas/Market General Trading Day'
        net_call_premium:
          $ref: '#/components/schemas/Market General Net Call Premium'
        net_put_premium:
          $ref: '#/components/schemas/Market General Net Put Premium'
        put_open_interest:
          $ref: '#/components/schemas/Market General Put Open Interest'
        put_premium:
          $ref: '#/components/schemas/Market General Put Premium'
        put_volume:
          $ref: '#/components/schemas/Market General Put Volume'
        put_volume_ask_side:
          $ref: '#/components/schemas/Market General Put Volume Ask Side'
        put_volume_bid_side:
          $ref: '#/components/schemas/Market General Put Volume Bid Side'
      title: Ticker Options Volume
      type: object
    Timeframe:
      default: 1Y
      description: |
        The timeframe of the data to return. Default 1Y
        Can be one of the following formats:
        - YTD
        - 1D, 2D, etc.
        - 1W, 2W, etc.
        - 1M, 2M, etc.
        - 1Y, 2Y, etc.
      example: 2M
      title: Timeframe
      type: string
    General Tick Price:
      description: The price of the tick
      title: General Tick Price
      type: number
      example: 19.32
    Trading Day:
      description: |
        A trading date in the format of YYYY-MM-DD.
        This is optional and by default the last trading date.
      example: 2024-01-18
      title: Trading Date
      type: string
    Use5mCandles:
      default: true
      description: Return data in 5 minutes intervals.
      example: false
      title: Use5mCandles
      type: boolean
    UseOtmOnly:
      default: false
      description: Only include out of the money transactions.
      example: true
      title: UseOtmOnly
      type: boolean
    Vanna:
      description: Vanna is the sum of the vanna values of all transactions that executed multiplied by the open interest and the number of shares per contract (typically 100 shares per contract).
      example: '-0.9'
      title: Vanna
      type: string
    Vega:
      description: Vega is the sum of the vega values of all transactions that executed multiplied by the open interest and the number of shares per contract (typically 100 shares per contract).
      example: '0.15'
      title: Vega
      type: string
    Volume & OI per Expiry:
      description: The volume and open interest per expiry.
      example:
        data:
          - expires: 2023-09-08
            oi: 451630
            volume: 962332
          - expires: 2023-09-15
            oi: 1422982
            volume: 631608
      properties:
        expires:
          $ref: '#/components/schemas/Stock Expiry'
        oi:
          $ref: '#/components/schemas/Stock Open Interest'
        volume:
          $ref: '#/components/schemas/Stock Options Volume'
      title: Volume & OI per Expiry
      type: object
    delta:
      description: ''
      example: '0.5'
      title: delta
      type: string
  securitySchemes:
    authorization:
      scheme: bearer
      type: http
info:
  contact:
    email: support@unusualwhales.com
    name: API Support
  description: |
    This is an unsupported, open source, python client to interact with the unusual whales applies.
    The entire api is supported as of the time of publishing. 2024-05-04
    Documentation for the official [unusualwhales](https://unusualwhales.com) api
    ## Request Access
    To request access to the API, please contact us at [support@unusualwhales.com], an api key is required.
  title: Unusual Whales API
  version: '0.0.2'
openapi: 3.1.0
paths:
  /api/congress/congress-trader:
    get:
      callbacks: {}
      description: |
        Returns the recent reports by the given congress member.
      operationId: getTradesByMember
      parameters:
        - description: ''
          in: query
          name: limit
          required: false
          schema:
            $ref: '#/components/schemas/DynLimitAmueidzsnsc'
        - description: the date to queryas a iso formatted string 'YYYY-MM-DD'
          in: query
          name: date
          required: false
          example: 2020-01-01
          schema:
            $ref: '#/components/schemas/Trading Day'
        - description: ''
          in: query
          name: name
          required: false
          schema:
            $ref: '#/components/schemas/Congress Member'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Congressional Trade Report'
          description: Succeeded
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error Message'
          description: Unprocessable Entity
        '500':
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Error Message on an internal server error.'
          description: Internal Server Error
      summary: Recent Reports By Trader
      tags:
        - congress
  /api/congress/late-reports:
    get:
      callbacks: {}
      description: |
        Returns the recent late reports by congress members.
        If a date is given, will only return recent late reports, which's report date is <= the given input date.
      operationId: getLateReports
      parameters:
        - description: limit the number of results returned
          in: query
          name: limit
          required: false
          schema:
            $ref: '#/components/schemas/DynLimitAmueidzsnsc'
        - description: iso date string in the format of YYYY-MM-DD to filter the results
          in: query
          name: date
          required: false
          example: 2020-01-01
          schema:
            $ref: '#/components/schemas/Trading Day'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Congressional Trade Report'
          description: Succeeded
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error Message'
          description: Unprocessable Entity
        '500':
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Error Message on an internal server error.'
          description: Internal Server Error
      summary: Recent Late Reports
      tags:
        - congress
  /api/congress/recent-reports:
    get:
      callbacks: {}
      description: |
        Returns the latest reported trades by congress members.
        If a date is given, will only return reports, which's transaction date is <= the given input date.
      operationId: getReports
      parameters:
        - description: limit the number of results returned
          in: query
          name: limit
          required: false
          schema:
            $ref: '#/components/schemas/DynLimitAmueidzsnsc'
        - description: iso date string in the format of YYYY-MM-DD to filter the results
          in: query
          name: date
          required: false
          example: 2020-01-01
          schema:
            $ref: '#/components/schemas/Trading Day'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Congressional Trade Report'
          description: Succeeded
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error Message'
          description: Unprocessable Entity
        '500':
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Error Message on an internal server error.'
          description: Internal Server Error
      summary: Recent Reported Congress Trades
      tags:
        - congress
  /api/congress/recent-trades:
    get:
      callbacks: {}
      description: |
        Returns the latest transacted trades by congress members.
        If a date is given, will only return reports, which's transaction date is <= the given input date.
      operationId: getTrades
      parameters:
        - description: limit the number of results returned
          in: query
          name: limit
          required: false
          schema:
            $ref: '#/components/schemas/DynLimitAmueidzsnsc'
        - description: the date to queryas a iso formatted string 'YYYY-MM-DD'
          in: query
          name: date
          required: false
          example: 2020-01-01
          schema:
            $ref: '#/components/schemas/Trading Day'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Congressional Trade Report'
          description: Succeeded
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error Message'
          description: Unprocessable Entity
        '500':
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Error Message on an internal server error.'
          description: Internal Server Error
      summary: Recent Congressional Trades
      tags:
        - congress
  /api/darkpool/recent:
    get:
      callbacks: {}
      description: |
        Returns the latest darkpool trades.
      operationId: getTradesByDate
      name: darkpool_trades
      parameters:
        - description: limit the number of results returned
          in: query
          name: limit
          required: false
          schema:
            $ref: '#/components/schemas/DynLimitAmueidzsnsc'
        - description: the date to queryas a iso formatted string 'YYYY-MM-DD' defaults to the most recent trading day
          in: query
          name: date
          required: false
          example: 2020-01-01
          schema:
            $ref: '#/components/schemas/Trading Day'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Darkpool Trade'
          description: Succeeded
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error Message'
          description: Unprocessable Entity
        '500':
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Error Message on an internal server error.'
          description: Internal Server Error
      summary: Darkpool trades for a given date. All Symbols.
      tags:
        - darkpool
  /api/darkpool/{ticker}:
    get:
      callbacks: {}
      description: |
        Returns the darkpool trades for the given ticker on a given day.
        Date must be the current or a past date. If no date is given, returns data for the current/last market day.
      operationId: getTradesByTicker
      parameters:
        - description: ticker symbol
          in: path
          name: ticker
          required: true
          schema:
            $ref: '#/components/schemas/SingleTicker'
        - description: iso date string in the format of YYYY-MM-DD to filter the results
          in: query
          name: date
          required: false
          example: 2020-01-01
          schema:
            $ref: '#/components/schemas/Trading Day'
        - description: limit the number of results returned
          in: query
          name: limit
          required: false
          schema:
            $ref: '#/components/schemas/DynLimitAqamqyhhbyd'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Darkpool Trade'
          description: Succeeded
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error Message'
          description: Unprocessable Entity
        '500':
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Error Message on an internal server error.'
          description: Internal Server Error
      summary: Darkpool trades for a given ticker and date
      tags:
        - darkpool
  /api/earnings/afterhours:
    get:
      callbacks: {}
      description: |
        Returns the next upcoming afterhours earnings for the given date.
        Date must be the current or a past date. If no date is given, returns data for the current/last market day.
      operationId: getAfterhours
      parameters:
        - description: iso date string in the format of YYYY-MM-DD to filter the results
          in: query
          name: date
          required: false
          example: 2020-01-01
          schema:
            $ref: '#/components/schemas/Trading Day'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Earning'
          description: Succeeded
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error Message'
          description: Unprocessable Entity
        '500':
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Error Message on an internal server error.'
          description: Internal Server Error
      summary: Afterhours
      tags:
        - earnings
  /api/earnings/premarket:
    get:
      callbacks: {}
      description: |
        Returns the next upcoming premarket earnings for the given date.
        Date must be the current or a past date. If no date is given, returns data for the current/last market day.
      operationId: getPremarket
      parameters:
        - description: iso date string in the format of YYYY-MM-DD to filter the results
          in: query
          name: date
          required: false
          example: 2020-01-01
          schema:
            $ref: '#/components/schemas/Trading Day'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Earning'
          description: Succeeded
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error Message'
          description: Unprocessable Entity
        '500':
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Error Message on an internal server error.'
          description: Internal Server Error
      summary: Next Premarket Earnings by Date
      tags:
        - earnings
  /api/earnings/{ticker}:
    get:
      callbacks: {}
      description: |
        Returns the past earnings for the given ticker.
      operationId: getTickerEarnings
      parameters:
        - description: ticker symbol
          in: path
          name: ticker
          required: true
          schema:
            $ref: '#/components/schemas/SingleTicker'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Earning'
          description: Succeeded
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error Message'
          description: Unprocessable Entity
        '500':
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Error Message on an internal server error.'
          description: Internal Server Error
      summary: Past Ticker Earnings
      tags:
        - earnings
  /api/etfs/{ticker}/exposure:
    get:
      callbacks: {}
      description: |
        Returns all ETFs in which the given ticker is a holding
      operationId: getTickerExposure
      parameters:
        - description: ticker symbol
          in: path
          name: ticker
          required: true
          schema:
            $ref: '#/components/schemas/SingleTicker'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Holdings'
          description: etfs holding ticker
      summary: Ticker Exposure by ETF
      tags:
        - etfs
  /api/etfs/{ticker}/holdings:
    get:
      callbacks: {}
      description: |
        Returns the holdings of the ETF
      operationId: getHoldings
      parameters:
        - description: ticker symbol
          in: path
          name: ticker
          required: true
          schema:
            $ref: '#/components/schemas/SingleTicker'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Holdings'
          description: holdings of the etf
      summary: ETF Holdings
      tags:
        - etfs
  /api/etfs/{ticker}/info:
    get:
      callbacks: {}
      description: |
        Returns the information about the given ETF ticker.
      operationId: getInfo
      parameters:
        - description: ticker symbol
          in: path
          name: ticker
          required: true
          schema:
            $ref: '#/components/schemas/SingleTicker'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Etf Info'
          description: Succeeded
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error Message'
          description: Unprocessable Entity
        '500':
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Error Message on an internal server error.'
          description: Internal Server Error
      summary: Information
      tags:
        - etfs
  /api/etfs/{ticker}/weights:
    get:
      callbacks: {}
      description: |
        Returns the sector & country weights for the given ETF ticker.
      operationId: getSectorCountryWeights
      parameters:
        - description: ticker symbol
          in: path
          name: ticker
          required: true
          schema:
            $ref: '#/components/schemas/SingleTicker'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Country & Sector exposure'
          description: Succeeded
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error Message'
          description: Unprocessable Entity
        '500':
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Error Message on an internal server error.'
          description: Internal Server Error
      summary: Sector & Country weights
      tags:
        - etfs
  /api/market/economic-calendar:
    get:
      callbacks: {}
      description: |
        Returns the economic calendar.
      operationId: getEconomicCalendar
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Economic calendar'
          description: Economic Calendar response
        '500':
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Error Message on an internal server error.'
          description: Internal Server Error
      summary: Economic calendar
      tags:
        - market
  /api/market/fda-calendar:
    get:
      callbacks: {}
      description: |
        Returns the fda calendar for the current week.
      operationId: getFDACalendar
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Fda calendar'
          description: Fda Calendar response
        '500':
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Error Message on an internal server error.'
          description: Internal Server Error
      summary: Fda calendar
      tags:
        - market
  /api/market/holidays:
    get:
      callbacks: {}
      description: |
        Returns the market holidays.
      operationId: getHolidays
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Market Holidays'
          description: Market Holiday response
        '500':
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Error Message on an internal server error.'
          description: Internal Server Error
      summary: Market Holidays
      tags:
        - market
  /api/market/imbalances:
    get:
      callbacks: {}
      description: |
        Returns the MOC/MOO imbalances.
      operationId: getImbalances
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Imbalances Volume'
          description: Imbalances response
        '500':
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Error Message on an internal server error.'
          description: Internal Server Error
      summary: MOC/MOO Imbalances Data
      tags:
        - market
  /api/market/insider-buy-sells:
    get:
      callbacks: {}
      description: |
        Returns the total amount of purchases & sells as well as notional values for insider transactions
        across the market
      operationId: getInsiderTrades
      parameters:
        - description: limit the number of results returned
          in: query
          name: limit
          required: false
          schema:
            $ref: '#/components/schemas/DynLimitAqamqyhhbyd'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Market Options Volume'
          description: Succeeded
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error Message'
          description: Unprocessable Entity
        '500':
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Error Message on an internal server error.'
          description: Internal Server Error
      summary: Total Insider Buy & Sells
      tags:
        - market
  /api/market/market-tide:
    get:
      callbacks: {}
      description: |
        Market Tide is a proprietary tool that can be viewed from the Market Overview page. The Market Tide chart provides real time data based on a proprietary formula that examines market wide options activity and filters out 'noise'.
        
        Date must be the current or a past date. If no date is given, returns data for the current/last market day.
        
        Per default data are returned in 1 minute intervals. Use `interval_5m=true` to have this return data in 5 minute intervals instead.
        
        
        for example
        - $15,000 in calls transacted at the ask has the effect of increasing the daily net call premium by $15,000.
        - $10,000 in calls transacted at the bid has the effect of decreasing the daily net call premium by $10,000.
        
        The resulting net premium from both of these trades would be $5000 (+ $15,000 - $10,000).
        
        Transactions taking place at the mid are not accounted for.
        
        In theory:
        
        The sentiment in the options market becomes increasingly bullish if:
        1. The aggregated CALL PREMIUM is increasing at a faster rate.
        2. The aggregated PUT PREMIUM is decreasing at a faster rate.
        
        The sentiment in the options market becomes increasingly bearish if:
        1. The aggregated CALL PREMIUM is decreasing at a faster rate.
        2. The aggregated PUT PREMIUM is increasing at a faster rate.
        
        ----
        This can be used to build a market overview such as:
        
        ![market tide](https://i.imgur.com/tuwTCDc.png)
      operationId: getMarketTide
      parameters:
        - description: iso date string in the format of YYYY-MM-DD to filter the results
          in: query
          name: date
          required: false
          example: 2020-01-01
          schema:
            $ref: '#/components/schemas/Trading Day'
        - description: Only include out of the money transactions
          in: query
          name: otm_only
          required: false
          schema:
            $ref: '#/components/schemas/UseOtmOnly'
        - description: Return data in 5 minutes intervals
          in: query
          name: interval_5m
          required: false
          schema:
            $ref: '#/components/schemas/Use5mCandles'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Daily Market Tide'
          description: Succeeded
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error Message'
          description: Unprocessable Entity
        '500':
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Error Message on an internal server error.'
          description: Internal Server Error
      summary: Returns The Unusual Whales Market Tide Data
      tags:
        - market
  /api/market/oi-change:
    get:
      callbacks: {}
      description: |
        Returns the non-Index/non-ETF contracts and OI change data with the highest OI change (default: descending).
        Date must be the current or a past date. If no date is given, returns data for the current/last market day.
      operationId: getOpenInterestChange
      parameters:
        - description: iso date string in the format of YYYY-MM-DD to filter the results
          in: query
          name: date
          required: false
          example: 2020-01-01
          schema:
            $ref: '#/components/schemas/Trading Day'
        - description: limit the number of results returned 
          in: query
          name: limit
          required: false
          schema:
            $ref: '#/components/schemas/DynLimitAmueidzsnsc'
        - description: order the results in ascending or descending order
          in: query
          name: order
          required: false
          schema:
            $ref: '#/components/schemas/OrderDirection'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OI Change'
          description: oi change results
      summary: Returns the Option Contracts With The Highest Open Interest Change by Date
      tags:
        - market
  /api/market/sector-etfs:
    get:
      callbacks: {}
      description: |
        Returns the current Trading Days statistics for the SPDR sector etfs
        
        ----
        This can be used to build a market overview such as:
        
        ![sectors etf](https://i.imgur.com/yQ5o6rR.png)
      operationId: getSectorStats
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sector ETF'
          description: sector etfs
        '500':
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Error Message on an internal server error.'
          description: Internal Server Error
      summary: Returns the stats for sector etfs for the most recent trading day
      tags:
        - market
  /api/market/spike:
    get:
      callbacks: {}
      description: |
        Returns the SPIKE values for the given date.
        Date must be the current or a past date. If no date is given, returns data for the current/last market day.
      operationId: getSpike
      parameters:
        - description: iso date string in the format of YYYY-MM-DD to filter the results
          in: query
          name: date
          required: false
          example: 2020-01-01
          schema:
            $ref: '#/components/schemas/Trading Day'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SPIKE value'
          description: Succeeded
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error Message'
          description: Unprocessable Entity
        '500':
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Error Message on an internal server error.'
          description: Internal Server Error
      summary: SPIKE
      tags:
        - market
  /api/market/total-options-volume:
    get:
      callbacks: {}
      description: |
        Returns the total options volume and premium for all trade executions
        that happened on a given trading date.
        
        ----
        This can be used to build a market options overview such as:
        
        ![Market State](https://i.imgur.com/IioJyq9.png)
      operationId: getMarketOptionsVolume
      parameters:
        - description: iso date string in the format of YYYY-MM-DD to filter the results
          in: query
          name: limit
          required: false
          schema:
            $ref: '#/components/schemas/DynLimitAbmmvsjqabs'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Market Options Volume'
          description: Succeeded
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error Message'
          description: Unprocessable Entity
        '500':
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Error Message on an internal server error.'
          description: Internal Server Error
      summary: Get Options Activity for the Entire Market (Market Tide)
      tags:
        - market
  /api/market/{ticker}/etf-tide:
    get:
      callbacks: {}
      description: |
        The ETF tide is similar to the Market Tide. While the market tide is based on options activity of the whole market
        the ETF tide is only based on the options activity of the holdings of the specified ETF.
      operationId: getMarketTideByETF
      parameters:
        - description: ticker symbol for the etf
          in: path
          name: ticker
          required: true
          schema:
            $ref: '#/components/schemas/Ticker'
        - description: iso date string in the format of YYYY-MM-DD to filter the results
          in: query
          name: date
          required: false
          example: 2020-01-01
          schema:
            $ref: '#/components/schemas/Trading Day'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Daily Market Tide'
          description: Succeeded
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error Message'
          description: Unprocessable Entity
        '500':
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Error Message on an internal server error.'
          description: Internal Server Error
      summary: Get Options Activity for the Specified ETF
      tags:
        - market
  /api/option-contract/{id}/flow:
    get:
      callbacks: {}
      description: |
        Option Contract Order Flow
      operationId: getContractFlow
      parameters:
        - description: option contract id
          in: path
          name: id
          required: true
          schema:
            $ref: '#/components/schemas/OptionContract'
        - description: bid or ask side
          in: query
          name: side
          required: false
          schema:
            $ref: '#/components/schemas/Side'
        - description: minimum premium
          in: query
          name: min_premium
          required: false
          schema:
            $ref: '#/components/schemas/StockTradesMinPremium'
        - description: limit the number of results returned
          in: query
          name: limit
          required: false
          schema:
            $ref: '#/components/schemas/DynLimitAqamqyhhbyd'
        - description: iso date string in the format of YYYY-MM-DD to filter the results
          in: query
          name: date
          required: false
          example: 2020-01-01
          schema:
            $ref: '#/components/schemas/Trading Day'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Flow per expiry'
          description: Succeeded
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error Message'
          description: Unprocessable Entity
        '500':
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Error Message on an internal server error.'
          description: Internal Server Error
      summary: Get Option Order Flow for a Given Contract
      tags:
        - flow
  /api/option-contract/{id}/historic:
    get:
      callbacks: {}
      description: |
        Historic EOD Stats for the given option contract
      operationId: getPriceHistory
      parameters:
        - description: option trading symbol
          in: path
          name: id
          required: true
          example: SPY042021C11500
          schema:
            $ref: '#/components/schemas/OptionContract'
        - description: limit the number of results returned
          in: query
          name: limit
          required: false
          schema:
            $ref: '#/components/schemas/DynLimitAqamqyhhbyd'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Option contract'
          description: Succeeded
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error Message'
          description: Unprocessable Entity
        '500':
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Error Message on an internal server error.'
          description: Internal Server Error
      summary: Price history for the given option contract 
      tags:
        - contract
  /api/option-trades/flow-alerts:
    get:
      callbacks: {}
      description: |
        Search option trades based on a variety of parameters
      operationId: getTickerOrderFlow
      parameters:
        - description: ticker symbol
          in: query
          name: ticker_symbol
          required: false
          schema:
            $ref: '#/components/schemas/Ticker'
        - description: minimum premium limit
          in: query
          name: min_premium
          required: false
          schema:
            $ref: '#/components/schemas/DynLimitAzypbfzepbq'
        - description: maximum premium limit
          in: query
          name: max_premium
          required: false
          schema:
            $ref: '#/components/schemas/DynLimitArdokgzdjqm'
        - description: minimum size limit
          in: query
          name: min_size
          required: false
          schema:
            $ref: '#/components/schemas/DynLimitAfzgwiehqcl'
        - description: maximum size limit
          in: query
          name: max_size
          required: false
          schema:
            $ref: '#/components/schemas/DynLimitAypyzbazxtg'
        - description: minimum volume limit
          in: query
          name: min_volume
          required: false
          schema:
            $ref: '#/components/schemas/DynLimitAshrfjgorlv'
        - description: maximum volume limit
          in: query
          name: max_volume
          required: false
          schema:
            $ref: '#/components/schemas/DynLimitAqikvrcdczf'
        - description: minimum open interest limit
          in: query
          name: min_open_interest
          required: false
          schema:
            $ref: '#/components/schemas/DynLimitAmfrkecwnfj'
        - description: maximum open interest limit
          in: query
          name: max_open_interest
          required: false
          schema:
            $ref: '#/components/schemas/DynLimitAazxinorviz'
        - description: all opening transactions
          in: query
          name: all_opening
          required: false
          schema:
            $ref: '#/components/schemas/DynLimitAmqgqebweqt'
        - description: include floor transactions
          in: query
          name: is_floor
          required: false
          schema:
            $ref: '#/components/schemas/DynLimitAzjapiodvay'
        - description: include sweep transactions
          in: query
          name: is_sweep
          required: false
          schema:
            $ref: '#/components/schemas/DynLimitAnfcxtqjiqm'
        - description: include calls
          in: query
          name: is_call
          required: false
          schema:
            $ref: '#/components/schemas/DynLimitAramwklcthf'
        - description: include puts
          in: query
          name: is_put
          required: false
          schema:
            $ref: '#/components/schemas/DynLimitAwlkzpcgxay'
        - description: array of rule names
          in: query
          name: rule_name[]
          required: false
          schema:
            $ref: '#/components/schemas/Rule Name'
        - description: min difference
          in: query
          name: min_diff
          required: false
          schema:
            $ref: '#/components/schemas/DynLimitAqatvtzxufg'
        - description: max difference
          in: query
          name: max_diff
          required: false
          schema:
            $ref: '#/components/schemas/DynLimitArjmtuxjkjs'
        - description: min volume oi ratio
          in: query
          name: min_volume_oi_ratio
          required: false
          schema:
            $ref: '#/components/schemas/DynLimitAbvymhstjax'
        - description: max volume oi ratio
          in: query
          name: max_volume_oi_ratio
          required: false
          schema:
            $ref: '#/components/schemas/DynLimitAgnttnwyjni'
        - description: include out of the money
          in: query
          name: is_otm
          required: false
          schema:
            $ref: '#/components/schemas/DynLimitAynumvdiypf'
        - description: array of issue types
          in: query
          name: issue_types[]
          required: false
          schema:
            $ref: '#/components/schemas/Issue types'
        - description: min trading date
          in: query
          name: min_dte
          required: false
          schema:
            $ref: '#/components/schemas/DynLimitAqsvqnpmpxq'
        - description: max days to expire
          in: query
          name: max_dte
          required: false
          schema:
            $ref: '#/components/schemas/DynLimitAssvxrytwgo'
        - description: limit the number of results returned
          in: query
          name: limit
          required: false
          schema:
            $ref: '#/components/schemas/DynLimitAmueidzsnsc'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Flow Alert'
          description: Succeeded
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error Message'
          description: Unprocessable Entity
        '500':
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Error Message on an internal server error.'
          description: Internal Server Error
      summary: Search Option Trades With Filters
      tags:
        - flow
  /api/option-trades/full-tape/{date}:
    get:
      callbacks: {}
      description: |
        Download the full tape of data for a given trading date.
        
        NOTICE:
        This endpoint is not included by default in your access.
        For information on how to access this data email support@unusualwhales.com
      operationId: getFullTape
      parameters:
        - description: iso date
          in: path
          name: date
          required: true
          schema:
            $ref: '#/components/schemas/Trading Day'
      responses:
        '200':
          content:
            application/octet-stream: {}
          description: ''
      summary: Full Tape all trades and statuses for all option orders by date
      tags:
        - flow
  /api/screener/analysts:
    get:
      callbacks: {}
      description: |
        Returns the latest analyst rating for the given ticker.
      operationId: getAnalystRatings
      parameters:
        - description: ticker
          in: query
          name: ticker
          required: false
          schema:
            $ref: '#/components/schemas/SingleTicker'
        - description: limiter
          in: query
          name: limit
          required: false
          schema:
            $ref: '#/components/schemas/DynLimitAiqxukgpniv'
        - description: analyst action
          in: query
          name: action
          required: false
          schema:
            $ref: '#/components/schemas/Analyst Action'
        - description: recommendation
          in: query
          name: recommendation
          required: false
          schema:
            $ref: '#/components/schemas/Analyst Recommendation'
        - description: sector
          in: query
          name: sector
          required: false
          schema:
            $ref: '#/components/schemas/Analyst Sector'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Analyst Rating'
          description: Succeeded
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error Message'
          description: Unprocessable Entity
        '500':
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Error Message on an internal server error.'
          description: Internal Server Error
      summary: Analyst Ratings for a Ticker
      tags:
        - screener
  /api/screener/option-contracts:
    get:
      callbacks: {}
      description: |
        A contract screener endpoint to screen the market for contracts by a variety of filter options.
        
        For an example of what can be build with this endpoint check out the [Hottest Contracts](https://unusualwhales.com/hottest-contracts?limit=100&hide_index_etf=true)
        on unusualwhales.
      operationId: getOptionContracts
      parameters:
        - description: ''
          in: query
          name: ticker_symbol
          required: false
          schema:
            $ref: '#/components/schemas/Ticker'
        - description: ''
          in: query
          name: sectors[]
          required: false
          schema:
            $ref: '#/components/schemas/Sectors'
        - description: ''
          in: query
          name: min_underlying_price
          required: false
          schema:
            $ref: '#/components/schemas/DynLimitAamjbjwgmep'
        - description: ''
          in: query
          name: max_underlying_price
          required: false
          schema:
            $ref: '#/components/schemas/DynLimitAisbhpztyvo'
        - description: ''
          in: query
          name: is_otm
          required: false
          schema:
            $ref: '#/components/schemas/DynLimitAynumvdiypf'
        - description: ''
          in: query
          name: min_dte
          required: false
          schema:
            $ref: '#/components/schemas/DynLimitAqsvqnpmpxq'
        - description: ''
          in: query
          name: max_dte
          required: false
          schema:
            $ref: '#/components/schemas/DynLimitAssvxrytwgo'
        - description: ''
          in: query
          name: min_diff
          required: false
          schema:
            $ref: '#/components/schemas/DynLimitAqatvtzxufg'
        - description: ''
          in: query
          name: max_diff
          required: false
          schema:
            $ref: '#/components/schemas/DynLimitArjmtuxjkjs'
        - description: ''
          in: query
          name: min_strike
          required: false
          schema:
            $ref: '#/components/schemas/DynLimitAkznvpznjzo'
        - description: ''
          in: query
          name: max_strike
          required: false
          schema:
            $ref: '#/components/schemas/DynLimitAkznvpznjzo'
        - description: ''
          in: query
          name: type
          required: false
          schema:
            $ref: '#/components/schemas/OptionType'
        - description: ''
          in: query
          name: expiry_dates[]
          required: false
          schema:
            $ref: '#/components/schemas/Expiry dates'
        - description: ''
          in: query
          name: min_marketcap
          required: false
          schema:
            $ref: '#/components/schemas/DynLimitAoomfzhzrit'
        - description: ''
          in: query
          name: max_marketcap
          required: false
          schema:
            $ref: '#/components/schemas/DynLimitAqqnasuzpct'
        - description: ''
          in: query
          name: min_volume
          required: false
          schema:
            $ref: '#/components/schemas/DynLimitAkuvydpeqsb'
        - description: ''
          in: query
          name: max_volume
          required: false
          schema:
            $ref: '#/components/schemas/DynLimitAcuuylcrann'
        - description: ''
          in: query
          name: min_multileg_volume_ratio
          required: false
          schema:
            $ref: '#/components/schemas/DynLimitAdpjidncqnm'
        - description: ''
          in: query
          name: max_multileg_volume_ratio
          required: false
          schema:
            $ref: '#/components/schemas/DynLimitAqiohpsziso'
        - description: ''
          in: query
          name: min_floor_volume_ratio
          required: false
          schema:
            $ref: '#/components/schemas/DynLimitAmwliqvynaj'
        - description: ''
          in: query
          name: max_floor_volume_ratio
          required: false
          schema:
            $ref: '#/components/schemas/DynLimitAdmzqxnciez'
        - description: ''
          in: query
          name: min_perc_change
          required: false
          schema:
            $ref: '#/components/schemas/DynLimitAvwsoxnytae'
        - description: ''
          in: query
          name: max_perc_change
          required: false
          schema:
            $ref: '#/components/schemas/DynLimitAvoguwyhkhx'
        - description: ''
          in: query
          name: min_daily_perc_change
          required: false
          schema:
            $ref: '#/components/schemas/DynLimitAcxjjxntkyk'
        - description: ''
          in: query
          name: max_daily_perc_change
          required: false
          schema:
            $ref: '#/components/schemas/DynLimitAsrtcrkghex'
        - description: ''
          in: query
          name: min_premium
          required: false
          schema:
            $ref: '#/components/schemas/DynLimitArayimtbrpc'
        - description: ''
          in: query
          name: max_premium
          required: false
          schema:
            $ref: '#/components/schemas/DynLimitAofttqrknrw'
        - description: ''
          in: query
          name: min_volume_oi_ratio
          required: false
          schema:
            $ref: '#/components/schemas/DynLimitAbvymhstjax'
        - description: ''
          in: query
          name: max_volume_oi_ratio
          required: false
          schema:
            $ref: '#/components/schemas/DynLimitAgnttnwyjni'
        - description: ''
          in: query
          name: min_open_interest
          required: false
          schema:
            $ref: '#/components/schemas/DynLimitAbdtyoyeezo'
        - description: ''
          in: query
          name: max_open_interest
          required: false
          schema:
            $ref: '#/components/schemas/DynLimitAzfbqcnowjg'
        - description: ''
          in: query
          name: min_floor_volume
          required: false
          schema:
            $ref: '#/components/schemas/DynLimitAmltaxtjajj'
        - description: ''
          in: query
          name: max_floor_volume
          required: false
          schema:
            $ref: '#/components/schemas/DynLimitArbitojiixg'
        - description: ''
          in: query
          name: vol_greater_oi
          required: false
          schema:
            $ref: '#/components/schemas/DynLimitAktpmqoeofy'
        - description: ''
          in: query
          name: issue_types[]
          required: false
          schema:
            $ref: '#/components/schemas/Issue types'
        - description: ''
          in: query
          name: order
          required: false
          schema:
            $ref: '#/components/schemas/Screener contract order by field'
        - description: ''
          in: query
          name: order_direction
          required: false
          schema:
            $ref: '#/components/schemas/OrderDirection'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Option Contract Screener response.'
          description: Succeeded
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error Message'
          description: Unprocessable Entity
        '500':
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Error Message on an internal server error.'
          description: Internal Server Error
      summary: Screener for Option Contracts
      tags:
        - screener
  /api/screener/stocks:
    get:
      callbacks: {}
      description: |
        A stock screener endpoint to screen the market for stocks by a variety of filter options.
        
        For an example of what can be build with this endpoint check out the [Stock Screener](https://unusualwhales.com/flow/ticker_flows)
        on unusualwhales.com
      operationId: getStocks
      parameters:
        - description: ''
          in: query
          name: ticker
          required: false
          schema:
            $ref: '#/components/schemas/Ticker'
        - description: ''
          in: query
          name: issue_types[]
          required: false
          schema:
            $ref: '#/components/schemas/Issue types'
        - description: ''
          in: query
          name: min_change
          required: false
          schema:
            $ref: '#/components/schemas/DynLimitAlaetkhyrfg'
        - description: ''
          in: query
          name: max_change
          required: false
          schema:
            $ref: '#/components/schemas/DynLimitArpedvptwpq'
        - description: ''
          in: query
          name: min_underlying_price
          required: false
          schema:
            $ref: '#/components/schemas/DynLimitAamjbjwgmep'
        - description: ''
          in: query
          name: max_underlying_price
          required: false
          schema:
            $ref: '#/components/schemas/DynLimitAisbhpztyvo'
        - description: ''
          in: query
          name: is_s_p_500
          required: false
          schema:
            $ref: '#/components/schemas/DynLimitAjiokysubro'
        - description: ''
          in: query
          name: has_dividends
          required: false
          schema:
            $ref: '#/components/schemas/DynLimitAgklwwddbbm'
        - description: ''
          in: query
          name: sectors[]
          required: false
          schema:
            $ref: '#/components/schemas/Sectors'
        - description: ''
          in: query
          name: min_marketcap
          required: false
          schema:
            $ref: '#/components/schemas/DynLimitAoomfzhzrit'
        - description: ''
          in: query
          name: max_marketcap
          required: false
          schema:
            $ref: '#/components/schemas/DynLimitAqqnasuzpct'
        - description: ''
          in: query
          name: min_perc_3_day_total
          required: false
          schema:
            $ref: '#/components/schemas/DynLimitAubyuvmshpt'
        - description: ''
          in: query
          name: max_perc_3_day_total
          required: false
          schema:
            $ref: '#/components/schemas/DynLimitApgorxielxd'
        - description: ''
          in: query
          name: min_perc_3_day_call
          required: false
          schema:
            $ref: '#/components/schemas/DynLimitApyqibgdoqz'
        - description: ''
          in: query
          name: max_perc_3_day_call
          required: false
          schema:
            $ref: '#/components/schemas/DynLimitAeqgngvyxpr'
        - description: ''
          in: query
          name: min_perc_3_day_put
          required: false
          schema:
            $ref: '#/components/schemas/DynLimitAmgtudozlnq'
        - description: ''
          in: query
          name: max_perc_3_day_put
          required: false
          schema:
            $ref: '#/components/schemas/DynLimitAsuqidonqwc'
        - description: ''
          in: query
          name: min_perc_30_day_total
          required: false
          schema:
            $ref: '#/components/schemas/DynLimitAxkkaryvarc'
        - description: ''
          in: query
          name: max_perc_30_day_total
          required: false
          schema:
            $ref: '#/components/schemas/DynLimitAoeodtqcvbv'
        - description: ''
          in: query
          name: min_perc_30_day_call
          required: false
          schema:
            $ref: '#/components/schemas/DynLimitAaxyicjnqfm'
        - description: ''
          in: query
          name: max_perc_30_day_call
          required: false
          schema:
            $ref: '#/components/schemas/DynLimitAsskdzuckaa'
        - description: ''
          in: query
          name: min_perc_30_day_put
          required: false
          schema:
            $ref: '#/components/schemas/DynLimitAqcmnijyoys'
        - description: ''
          in: query
          name: max_perc_30_day_put
          required: false
          schema:
            $ref: '#/components/schemas/DynLimitAobhrkzcssd'
        - description: ''
          in: query
          name: min_total_oi_change_perc
          required: false
          schema:
            $ref: '#/components/schemas/DynLimitAwkjcbdgbuv'
        - description: ''
          in: query
          name: max_total_oi_change_perc
          required: false
          schema:
            $ref: '#/components/schemas/DynLimitAfqydyatanm'
        - description: ''
          in: query
          name: min_call_oi_change_perc
          required: false
          schema:
            $ref: '#/components/schemas/DynLimitAvwrboubisv'
        - description: ''
          in: query
          name: max_call_oi_change_perc
          required: false
          schema:
            $ref: '#/components/schemas/DynLimitAiqwniqqiua'
        - description: ''
          in: query
          name: min_put_oi_change_perc
          required: false
          schema:
            $ref: '#/components/schemas/DynLimitAxkaqvfjvzn'
        - description: ''
          in: query
          name: max_put_oi_change_perc
          required: false
          schema:
            $ref: '#/components/schemas/DynLimitAebxkkfifmq'
        - description: ''
          in: query
          name: min_implied_move
          required: false
          schema:
            $ref: '#/components/schemas/DynLimitAmopjlvawgr'
        - description: ''
          in: query
          name: max_implied_move
          required: false
          schema:
            $ref: '#/components/schemas/DynLimitAqmsbtkvcgk'
        - description: ''
          in: query
          name: min_implied_move_perc
          required: false
          schema:
            $ref: '#/components/schemas/DynLimitAukscmlppho'
        - description: ''
          in: query
          name: max_implied_move_perc
          required: false
          schema:
            $ref: '#/components/schemas/DynLimitAdqplbgftzp'
        - description: ''
          in: query
          name: min_volatility
          required: false
          schema:
            $ref: '#/components/schemas/DynLimitAdnesjuexzx'
        - description: ''
          in: query
          name: max_volatility
          required: false
          schema:
            $ref: '#/components/schemas/DynLimitAretlafeayz'
        - description: ''
          in: query
          name: min_iv_rank
          required: false
          schema:
            $ref: '#/components/schemas/DynLimitAjrrcvnhtrz'
        - description: ''
          in: query
          name: max_iv_rank
          required: false
          schema:
            $ref: '#/components/schemas/DynLimitAdzgpnnkhju'
        - description: ''
          in: query
          name: min_volume
          required: false
          schema:
            $ref: '#/components/schemas/DynLimitAdphwldmrqq'
        - description: ''
          in: query
          name: max_volume
          required: false
          schema:
            $ref: '#/components/schemas/DynLimitAuldaenclsu'
        - description: ''
          in: query
          name: min_call_volume
          required: false
          schema:
            $ref: '#/components/schemas/DynLimitAfrpjgwiygb'
        - description: ''
          in: query
          name: max_call_volume
          required: false
          schema:
            $ref: '#/components/schemas/DynLimitApfwbbzutqr'
        - description: ''
          in: query
          name: min_put_volume
          required: false
          schema:
            $ref: '#/components/schemas/DynLimitAuhqgtmbgfy'
        - description: ''
          in: query
          name: max_put_volume
          required: false
          schema:
            $ref: '#/components/schemas/DynLimitAielxewrxwu'
        - description: ''
          in: query
          name: min_premium
          required: false
          schema:
            $ref: '#/components/schemas/DynLimitAemggnklpjd'
        - description: ''
          in: query
          name: max_premium
          required: false
          schema:
            $ref: '#/components/schemas/DynLimitAzompjhfmeu'
        - description: ''
          in: query
          name: min_call_premium
          required: false
          schema:
            $ref: '#/components/schemas/DynLimitAvkwzhqdgcc'
        - description: ''
          in: query
          name: max_call_premium
          required: false
          schema:
            $ref: '#/components/schemas/DynLimitAoqbrtjqtpy'
        - description: ''
          in: query
          name: min_put_premium
          required: false
          schema:
            $ref: '#/components/schemas/DynLimitAmgzkptjjvn'
        - description: ''
          in: query
          name: max_put_premium
          required: false
          schema:
            $ref: '#/components/schemas/DynLimitAhlqafvlumf'
        - description: ''
          in: query
          name: min_net_premium
          required: false
          schema:
            $ref: '#/components/schemas/DynLimitAxghjcokilr'
        - description: ''
          in: query
          name: max_net_premium
          required: false
          schema:
            $ref: '#/components/schemas/DynLimitAoqhjlkkhpl'
        - description: ''
          in: query
          name: min_oi
          required: false
          schema:
            $ref: '#/components/schemas/DynLimitAzbxguusvdu'
        - description: ''
          in: query
          name: max_oi
          required: false
          schema:
            $ref: '#/components/schemas/DynLimitAlwzunqubqu'
        - description: ''
          in: query
          name: min_oi_vs_vol
          required: false
          schema:
            $ref: '#/components/schemas/DynLimitAcgpkrivurz'
        - description: ''
          in: query
          name: max_oi_vs_vol
          required: false
          schema:
            $ref: '#/components/schemas/DynLimitAszkdhbpmbg'
        - description: ''
          in: query
          name: min_put_call_ratio
          required: false
          schema:
            $ref: '#/components/schemas/DynLimitAwjdaquxrrf'
        - description: ''
          in: query
          name: max_put_call_ratio
          required: false
          schema:
            $ref: '#/components/schemas/DynLimitAhijpmfgwtt'
        - description: ''
          in: query
          name: order
          required: false
          schema:
            $ref: '#/components/schemas/Screener order by field'
        - description: ''
          in: query
          name: order_direction
          required: false
          schema:
            $ref: '#/components/schemas/OrderDirection'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Stock Screener response'
          description: Succeeded
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error Message'
          description: Unprocessable Entity
        '500':
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Error Message on an internal server error.'
          description: Internal Server Error
      summary: Stock Screener
      tags:
        - screener
  /api/seasonality/market:
    get:
      callbacks: {}
      description: |
        Returns the average return by month for the tickers SPY, QQQ, IWM, XLE, XLC, XLK, XLV, XLP, XLY, XLRE, XLF, XLI, XLB .
      operationId: getMarketAverageReturnsByMonth
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Seasonality Market'
          description: seasonality market response
        '500':
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Error Message on an internal server error.'
          description: Internal Server Error
      summary: Market Seasonality for ETFs
      tags:
        - seasonality
  /api/seasonality/{month}/performers:
    get:
      callbacks: {}
      description: |
        Returns the tickers with the highest performance in terms of price change in the month over the years.
        Per default the result is ordered by 'positive_months_perc' descending, then 'median_change' descending, then 'marketcap' descending.
      operationId: getMonthlyTopPerformers
      parameters:
        - description: month of year as integer
          in: path
          name: month
          required: true
          schema:
            $ref: '#/components/schemas/SingleMonthNumber'
        - description: min years
          in: query
          name: min_years
          required: false
          schema:
            $ref: '#/components/schemas/DynLimitAzcygndqclk'
        - description: ticker symbol for sector
          in: query
          name: ticker_for_sector
          required: false
          schema:
            $ref: '#/components/schemas/SingleTickerForSector'
        - description: s&p 500 and nasdaq only
          in: query
          name: s_p_500_nasdaq_only
          required: false
          schema:
            $ref: '#/components/schemas/DynLimitAnqyzpkbbzf'
        - description: min open interest
          in: query
          name: min_oi
          required: false
          schema:
            $ref: '#/components/schemas/DynLimitAzbxguusvdu'
        - description: limit the number of results returned
          in: query
          name: limit
          required: false
          schema:
            $ref: '#/components/schemas/DynLimitArxhwzqhnwn'
        - description: order by property
          in: query
          name: order
          required: false
          schema:
            $ref: '#/components/schemas/Seasonality Performance Order By'
        - description: ascending or descening order direction
          in: query
          name: order_direction
          required: false
          schema:
            $ref: '#/components/schemas/OrderDirection'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Seasonality Performers'
          description: Succeeded
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error Message'
          description: Unprocessable Entity
        '500':
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Error Message on an internal server error.'
          description: Internal Server Error
      summary: Get Top Performers for a Month
      tags:
        - seasonality
  /api/seasonality/{ticker}/monthly:
    get:
      callbacks: {}
      description: |
        Returns the average return by month for the given ticker.
      operationId: getMonthlyAverageReturns
      parameters:
        - description: ticker symbol
          in: path
          name: ticker
          required: true
          schema:
            $ref: '#/components/schemas/SingleTicker'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Seasonality Monthly'
          description: Succeeded
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error Message'
          description: Unprocessable Entity
        '500':
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Error Message on an internal server error.'
          description: Internal Server Error
      summary: Average return per month
      tags:
        - seasonality
  /api/seasonality/{ticker}/year-month:
    get:
      callbacks: {}
      description: |
        Returns the relative price change for all past months over multiple years.
      operationId: getPriceChangesByMonthAndYear
      parameters:
        - description: ticker symbol
          in: path
          name: ticker
          required: true
          schema:
            $ref: '#/components/schemas/SingleTicker'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Seasonality Year Month'
          description: Succeeded
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error Message'
          description: Unprocessable Entity
        '500':
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Error Message on an internal server error.'
          description: Internal Server Error
      summary: Price change per month per year
      tags:
        - seasonality
  /api/socket:
    get:
      callbacks: {}
      description: |
        Returns the available WebSocket channels for connections.
        
        ## Websocket Guide
        Important: Websockets are not part of the basic API subscription. To be able to connect to WebSockets, please
        contact us at support@unusualwhales.com.
        
        The following channels are available:
        | Channel              | Description                                                                                                           |
        |----------------------|-----------------------------------------------------------------------------------------------------------------------|
        | option_trades        | Receive all option trades live through out the trading session                                                        |
        | option_trades:TICKER | Similar to `option_trades` but receive all trades only for the specified ticker                                       |
        | flow-alerts          | Receive all flow alerts. The data can be used to build a similar view as https://unusualwhales.com/option-flow-alerts |
        | price:TICKER         | Receive live price updates for the given ticker.                                                                      |
        
        The `option_trades` channel will stream all 6,000,000 option trades in real-time, `option_trades:<TICKER>` will stream
        all option trades for the given ticker in real-time.
        
        `flow-alerts` will stream from the alerts [page](https://unusualwhales.com/option-flow-alerts?limit=50)
        
        ## Connect
        We will use [websocat](https://github.com/vi/websocat) to demonstrate how to connect to the WebSocket server.
        
        ```bash
        websocat "wss://api.unusualwhales.com/socket?token=<YOUR_API_TOKEN>"
        {"channel":"option_trades","msg_type":"join"}
        ```
        The server will then reply with
        ```bash
        ["option_trades",{"response":{},"status":"ok"}]
        ```
        indicating that the connection was successful.
        
        You will then receive data in the following format:
        ```bash
        [<CHANNEL_NAME>, <PAYLOAD>]
        ```
        during market hours.
        
        To receive the trades only for a specific ticker, use the following command:
        ```bash
        {"channel":"option_trades","msg_type":"join"}
        ```
        
        You can join multiple channels with the same websocket connection:
        ```bash
        websocat "wss://api.unusualwhales.com/socket?token=<YOUR_API_TOKEN>"
        {"channel":"option_trades","msg_type":"join"}
        ["option_trades",{"response":{},"status":"ok"}]
        {"channel":"option_trades:JPM","msg_type":"join"}
        ["option_trades:JPM",{"response":{},"status":"ok"}]
        ```
        
        ## Using a client
        If you are using Python, you can use the [websocket-client](https://github.com/websocket-client/websocket-client) library to connect to the server.
        
        ```python
        import websocket
        import time
        import rel
        import json
        
        def on_message(ws, msg):
            msg = json.loads(msg)
            channel, payload = msg
            print(f"Got a message on channel {channel}: Payload: {payload}")
        
        def on_error(ws, error):
            print(error)
        
        def on_close(ws, close_status_code, close_msg):
            print("### closed ###")
        
        def on_open(ws):
            print("Opened connection")
            msg = {"channel":"option_trades","msg_type":"join"}
            ws.send(json.dumps(msg))
        
        if __name__ == "__main__":
            websocket.enableTrace(False)
            ws = websocket.WebSocketApp("wss://api.unusualwhales.com/socket?token=<YOUR_TOKEN>",
                                      on_open=on_open,
                                      on_message=on_message,
                                      on_error=on_error,
                                      on_close=on_close)
        
            ws.run_forever(dispatcher=rel, reconnect=5)  # Set dispatcher to automatic reconnection, 5 second reconnect delay if connection closed unexpectedly
            rel.signal(2, rel.abort)  # Keyboard Interrupt
            rel.dispatch()
        
        
        ## Historic data
        To download/access historic data, use the endpoint [/api/option-trades/full-tape](https://api.unusualwhales.com/docs#/operations/PublicApi.OptionTradeController.full_tape)
      operationId: channels
      parameters: []
      responses: {}
      summary: Unusual Whales websocket channels
      tags:
        - websocket
  /api/stock/{sector}/tickers:
    get:
      callbacks: {}
      description: |
        Returns a list of tickers which are in the given sector.
      operationId: getSectorTickers
      parameters:
        - description: sector to include
          in: path
          name: sector
          required: true
          schema:
            $ref: '#/components/schemas/Sector'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Market Sector Tickers'
          description: Succeeded
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error Message'
          description: Unprocessable Entity
        '500':
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Error Message on an internal server error.'
          description: Internal Server Error
      summary: Return Tickers for a Given Sector
      tags:
        - stock
  /api/stock/{ticker}/atm-chains:
    get:
      callbacks: {}
      description: |
        Returns the ATM option contracts for the given expirations
      operationId: getATMOptionContractsForExpiries
      parameters:
        - description: ticker symbol
          in: path
          name: ticker
          required: true
          schema:
            $ref: '#/components/schemas/SingleTicker'
        - description: ''
          in: query
          name: expirations[]
          required: true
          schema:
            $ref: '#/components/schemas/Expiry dates'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Option Contract Screener response.'
          description: Succeeded
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error Message'
          description: Unprocessable Entity
        '500':
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Error Message on an internal server error.'
          description: Internal Server Error
      summary: ATM option contracts for the given expiries
      tags:
        - stock
  /api/stock/{ticker}/expiry-breakdown:
    get:
      callbacks: {}
      description: |
        Returns all expirations for the given Trading Day for a ticker.
      operationId: getDailyExpiryBreakdown
      parameters:
        - description: ticker symbol
          in: path
          name: ticker
          required: true
          schema:
            $ref: '#/components/schemas/SingleTicker'
        - description: iso date string in the format YYYY-MM-DD
          in: query
          name: date
          required: false
          example: 2020-01-01
          schema:
            $ref: '#/components/schemas/Trading Day'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Expiry breakdown'
          description: Succeeded
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error Message'
          description: Unprocessable Entity
        '500':
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Error Message on an internal server error.'
          description: Internal Server Error
      summary: Option Order Flow Grouped By Expiry on a Given Date for a Given Ticker
      tags:
        - stock
  /api/stock/{ticker}/flow-alerts:
    get:
      callbacks: {}
      description: |
        Returns the latest unusual whales flow alerts for the given ticker.
      operationId: getUnusualFlowAlerts
      parameters:
        - description: ticker symbol
          in: path
          name: ticker
          required: true
          schema:
            $ref: '#/components/schemas/SingleTicker'
        - description: ''
          in: query
          name: limit
          required: false
          schema:
            $ref: '#/components/schemas/DynLimitAmueidzsnsc'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Flow Alert'
          description: Succeeded
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error Message'
          description: Unprocessable Entity
        '500':
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Error Message on an internal server error.'
          description: Internal Server Error
      summary: Unusual Whales Alerts for a Ticker
      tags:
        - flow
  /api/stock/{ticker}/flow-per-expiry:
    get:
      callbacks: {}
      description: |
        Returns all option orders grouped by expiry for a given ticker for the last Trading Day
      operationId: getFlowByExpiry
      parameters:
        - description: ticker symbol
          in: path
          name: ticker
          required: true
          schema:
            $ref: '#/components/schemas/SingleTicker'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Flow per expiry'
          description: ''
      summary: Option Order Flow for a Ticker Grouped by Expiry
      tags:
        - flow
  /api/stock/{ticker}/flow-per-strike:
    get:
      callbacks: {}
      description: |
        Returns the option flow per strike for the last Trading Day
      operationId: getFlowByStrike
      parameters:
        - description: ticker symbol
          in: path
          name: ticker
          required: true
          schema:
            $ref: '#/components/schemas/SingleTicker'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Flow per strike'
          description: Succeeded
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error Message'
          description: Unprocessable Entity
        '500':
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Error Message on an internal server error.'
          description: Internal Server Error
      summary: Option Order Flow for a Ticker Grouped By Strike
      tags:
        - flow
  /api/stock/{ticker}/flow-recent:
    get:
      callbacks: {}
      description: |
        Returns the latest flows for the given ticker. Optionally a min premium and a side can be supplied in the query for further filtering.
      operationId: getOrderFlow
      parameters:
        - description: ticker symbol
          in: path
          name: ticker
          required: true
          schema:
            $ref: '#/components/schemas/SingleTicker'
        - description: ''
          in: query
          name: side
          required: false
          schema:
            $ref: '#/components/schemas/Side'
        - description: ''
          in: query
          name: min_premium
          required: false
          schema:
            $ref: '#/components/schemas/StockTradesMinPremium'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Flow per expiry'
          description: Succeeded
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error Message'
          description: Unprocessable Entity
        '500':
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Error Message on an internal server error.'
          description: Internal Server Error
      summary: Option Order Flow By Date 
      tags:
        - flow
  /api/stock/{ticker}/greek-exposure:
    get:
      callbacks: {}
      description: |
        Greek Exposure is the assumed greek exposure that market makers are exposed to. The most popular greek exposure is gamma exposure (GEX).

        Investors and large funds lower risk and protect their money by selling calls and buying puts. Market makers provide the liquidity to facilitate these trades. GEX assumes that market makers are part of every transaction and that the bulk of their transactions are buying calls and selling puts to investors hedging their portfolios. If a market maker has one contract open with a gamma value of 0.05, then that market maker is exposed to 0.05 * [100 shares] of gamma. The total market maker exposure is calculated by summing up the exposure values of all open contracts determined by the daily open interest. Market makers profit from the bid-ask spreads and as such, they constantly gamma hedge (they buy and sell shares to keep their positions delta neutral).
        
        Long call positions are positive gamma - as the stock price increases and delta rises (approaches 1), market makers hedge by selling shares, and they buy shares if the stock price decreases and delta falls.
        
        Short put positions are negative gamma - as the stock price increases and delta falls (approaches -1), market makers hedge by buying shares, and they sell shares if the stock price decreases and delta rises.
        
        As such, in the event of large positive gamma, volatility is suppressed as market makers will hedge by buying as the stock price decreases and selling as the stock price increases. And in the event of large negative gamma, volatility is amplified as market makers will hedge by buying as the stock price increases and selling as the stock price decreases.
      operationId: getGreekExposure
      parameters:
        - description: ticker symbol
          in: path
          name: ticker
          required: true
          schema:
            $ref: '#/components/schemas/SingleTicker'
        - description: the date to queryas a iso formatted string 'YYYY-MM-DD'
          in: query
          name: date
          required: false
          example: 2020-01-01
          schema:
            $ref: '#/components/schemas/Trading Day'
        - description: timeframe represented by multiplier followed by period, for example '1D' or '1min' or '4hr'
          in: query
          name: timeframe
          required: false
          schema:
            $ref: '#/components/schemas/Timeframe'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Greek Exposure'
          description: Succeeded
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error Message'
          description: Unprocessable Entity
        '500':
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Error Message on an internal server error.'
          description: Internal Server Error
      summary: Greek Exposure
      tags:
        - stock
  /api/stock/{ticker}/greek-exposure/expiry:
    get:
      callbacks: {}
      description: |
        The greek exposure of a ticker grouped by expiry dates across all contracts on a given market date.
      operationId: getGreekExposureByExpiry
      parameters:
        - description: ticker symbol
          in: path
          name: ticker
          required: true
          schema:
            $ref: '#/components/schemas/SingleTicker'
        - description: the date to queryas a iso formatted string 'YYYY-MM-DD'
          in: query
          name: date
          required: false
          example: 2020-01-01
          schema:
            $ref: '#/components/schemas/Trading Day'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Greek Exposure By Strike'
          description: Succeeded
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error Message'
          description: Unprocessable Entity
        '500':
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Error Message on an internal server error.'
          description: Internal Server Error
      summary: Greek Exposure Grouped By Expiry All Strikes
      tags:
        - stock
  /api/stock/{ticker}/greek-exposure/strike:
    get:
      callbacks: {}
      description: |
        The greek exposure of a ticker grouped by strike price across all contracts on a given market date.
      operationId: getGreekExposureByStrike
      parameters:
        - description: ticker symbol
          in: path
          name: ticker
          required: true
          schema:
            $ref: '#/components/schemas/SingleTicker'
        - description: the date to queryas a iso formatted string 'YYYY-MM-DD'
          in: query
          name: date
          required: false
          example: 2020-01-01
          schema:
            $ref: '#/components/schemas/Trading Day'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Greek Exposure By Strike'
          description: Succeeded
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error Message'
          description: Unprocessable Entity
        '500':
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Error Message on an internal server error.'
          description: Internal Server Error
      summary: Greek Exposure Grouped By Strike All Expiries On A Given Date
      tags:
        - stock
  /api/stock/{ticker}/greek-exposure/strike-expiry:
    get:
      callbacks: {}
      description: |
        The greek exposure of a ticker grouped by strike price for a specific expiry date.
      operationId: getGreekExposureByStrikeExpiry
      parameters:
        - description: ticker symbol
          in: path
          name: ticker
          required: true
          schema:
            $ref: '#/components/schemas/SingleTicker'
        - description: the date to queryas a iso formatted string 'YYYY-MM-DD'
          in: query
          name: date
          required: false
          example: 2020-01-01
          schema:
            $ref: '#/components/schemas/Trading Day'
        - description: ''
          in: query
          name: expiry
          required: true
          schema:
            $ref: '#/components/schemas/Expiry dates'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Greek Exposure By Strike And Expiry'
          description: Succeeded
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error Message'
          description: Unprocessable Entity
        '500':
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Error Message on an internal server error.'
          description: Internal Server Error
      summary: Greek Exposure By Strike And Expiry
      tags:
        - stock
  /api/stock/{ticker}/greeks:
    get:
      callbacks: {}
      description: |
        Returns the greeks for each strike for a single expiry date.
      operationId: getGreeksByStrikeExpiry
      parameters:
        - description: ticker symbol
          in: path
          name: ticker
          required: true
          schema:
            $ref: '#/components/schemas/SingleTicker'
        - description: the date to queryas a iso formatted string 'YYYY-MM-DD'
          in: query
          name: date
          required: false
          example: 2020-01-01
          schema:
            $ref: '#/components/schemas/Trading Day'
        - description: ''
          in: query
          name: expiry
          required: true
          schema:
            $ref: '#/components/schemas/Expiry dates'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Greeks'
          description: Succeeded
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error Message'
          description: Unprocessable Entity
        '500':
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Error Message on an internal server error.'
          description: Internal Server Error
      summary: Option Greeks by Expiry All Strikes
      tags:
        - stock
  /api/stock/{ticker}/historical-risk-reversal-skew:
    get:
      callbacks: {}
      description: |
        Returns the historical risk reversal skew (the difference between put and call volatility) at a delta of 0.25 or 0.1 for a given expiry date.
      operationId: getRiskReversalSkew
      parameters:
        - description: ticker symbol
          in: path
          name: ticker
          required: true
          schema:
            $ref: '#/components/schemas/SingleTicker'
        - description: the date to queryas a iso formatted string 'YYYY-MM-DD'
          in: query
          name: date
          required: false
          example: 2020-01-01
          schema:
            $ref: '#/components/schemas/Trading Day'
        - description: ''
          in: query
          name: expiry
          required: true
          schema:
            $ref: '#/components/schemas/Expiry dates'
        - description: timeframe represented by multiplier followed by period, for example '1D' or '1min' or '4hr'
          in: query
          name: timeframe
          required: false
          schema:
            $ref: '#/components/schemas/Timeframe'
        - description: ''
          in: query
          name: delta
          required: true
          schema:
            $ref: '#/components/schemas/Delta'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Historical Risk Reversal Skew'
          description: Succeeded
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error Message'
          description: Unprocessable Entity
        '500':
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Error Message on an internal server error.'
          description: Internal Server Error
      summary: Historical Risk Reversal Skew by Expiry and Ticker
      tags:
        - stock
  /api/stock/{ticker}/info:
    get:
      callbacks: {}
      description: |
        Returns a information about the given ticker.
      operationId: getInfo
      parameters:
        - description: ticker symbol
          in: path
          name: ticker
          required: true
          schema:
            $ref: '#/components/schemas/SingleTicker'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ticker Info'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error Message stating that the requested element was not found causing an empty result to be generated.'
          description: Succeeded
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error Message'
          description: Unprocessable Entity
        '500':
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Error Message on an internal server error.'
          description: Internal Server Error
      summary: Ticker Information
      tags:
        - stock
  /api/stock/{ticker}/insider-buy-sells:
    get:
      callbacks: {}
      description: |
        Returns the total amount of purchases & sells as well as notional values for insider transactions
        for the given ticker
      operationId: getInsiderTrades
      parameters:
        - description: ticker symbol
          in: path
          name: ticker
          required: true
          schema:
            $ref: '#/components/schemas/SingleTicker'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Insider statistics'
          description: Succeeded
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error Message'
          description: Unprocessable Entity
        '500':
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Error Message on an internal server error.'
          description: Internal Server Error
      summary: Insider buy & sells
      tags:
        - stock
  /api/stock/{ticker}/max-pain:
    get:
      callbacks: {}
      description: |
        Returns the max pain for all expirations for the given ticker for the last 120 days
      operationId: getMaxPain
      parameters:
        - description: ticker symbol
          in: path
          name: ticker
          required: true
          schema:
            $ref: '#/components/schemas/SingleTicker'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Max Pain'
          description: Succeeded
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error Message'
          description: Unprocessable Entity
        '500':
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Error Message on an internal server error.'
          description: Internal Server Error
      summary: Max Pain
      tags:
        - stock
  /api/stock/{ticker}/net-prem-ticks:
    get:
      callbacks: {}
      description: |
        Returns the net premium ticks for a given ticker which can be used to build the following chart:
        ![Net Prem chart](https://i.imgur.com/Rom1kcB.png)
        
        ----
        Each tick is resembling the data for a single minute tick. To build a daily chart
        you would have to add the previous data to the current tick:
        ```javascript
        const url =
          'https://api.unusualwhales.com/api/stock/AAPL/net-prem-ticks';
        const options = {
          method: 'GET',
          headers: {
            Accept: 'application/json',
            Authorization: 'Bearer YOUR_TOKEN'
          }
        };
        
        fetch(url, options)
        .then(r => r.json())
        .then(r => {
          const {data} = r.data;
          const fieldsToSum = [
            "net_call_premium",
            "net_call_volume",
            "net_put_premium",
            "net_put_volume"
          ];
        
          let result = [];
          data.forEach((e, idx) => {
            e.net_call_premium = parseFloat(e.net_call_premium);
            e.net_put_premium = parseFloat(e.net_put_premium);
            if (idx !== 0) {
              fieldsToSum.forEach((field) => {
                e[field] = e[field] + result[idx-1][field];
              })
            }
            result.push(e);
          })
        
          return result;
        });
        
        ```
      operationId: getNetPremiumTicks
      parameters:
        - description: ticker symbol
          in: path
          name: ticker
          required: true
          schema:
            $ref: '#/components/schemas/SingleTicker'
        - description: the date to queryas a iso formatted string 'YYYY-MM-DD'
          in: query
          name: date
          required: false
          example: 2020-01-01
          schema:
            $ref: '#/components/schemas/Trading Day'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Net Prem Tick response.'
          description: Succeeded
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error Message'
          description: Unprocessable Entity
        '500':
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Error Message on an internal server error.'
          description: Internal Server Error
      summary: Net Prem Ticks
      tags:
        - stock
  /api/stock/{ticker}/ohlc/{candle_size}:
    get:
      callbacks: {}
      description: |
        Returns the Open High Low Close (OHLC) candle data for a given ticker.
        
        Results are limitted to 2,500 elements even if there are more available.
      operationId: getCandles
      parameters:
        - description: ticker symbol
          in: path
          name: ticker
          required: true
          schema:
            $ref: '#/components/schemas/SingleTicker'
        - description: ''
          in: path
          name: candle_size
          required: true
          schema:
            $ref: '#/components/schemas/Candle Size'
        - description: timeframe represented by multiplier followed by period, for example '1D' or '1min' or '4hr'
          in: query
          name: timeframe
          required: false
          schema:
            $ref: '#/components/schemas/Timeframe'
        - description: date represented as an iso formatted string 'YYYY-MM-DD'
          in: query
          name: trading_day
          required: false
          schema:
            $ref: '#/components/schemas/Trading Day'
        - description: ''
          in: query
          name: limit
          required: false
          schema:
            $ref: '#/components/schemas/DynLimitAsawcqthixh'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Candle data'
          description: Succeeded
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error Message'
          description: Unprocessable Entity
        '500':
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Error Message on an internal server error.'
          description: Internal Server Error
      summary: OHLC
      tags:
        - stock
  /api/stock/{ticker}/oi-change:
    get:
      callbacks: {}
      description: |
        Returns the tickers contracts' OI change data ordered by absolute OI change (default: descending).
        Date must be the current or a past date. If no date is given, returns data for the current/last market day.
      operationId: getOpenInterestChange
      parameters:
        - description: ticker symbol
          in: path
          name: ticker
          required: true
          schema:
            $ref: '#/components/schemas/SingleTicker'
        - description: the date to queryas a iso formatted string 'YYYY-MM-DD'
          in: query
          name: date
          required: false
          example: 2020-01-01
          schema:
            $ref: '#/components/schemas/Trading Day'
        - description: ''
          in: query
          name: limit
          required: false
          schema:
            $ref: '#/components/schemas/DynLimitAqamqyhhbyd'
        - description: ''
          in: query
          name: order
          required: false
          schema:
            $ref: '#/components/schemas/OrderDirection'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OI Change'
          description: ''
      summary: OI Change
      tags:
        - stock
  /api/stock/{ticker}/option-chains:
    get:
      callbacks: {}
      description: |
        Returns all option symbols for the given ticker that were present at the given day.
        
        If no date is given, returns data for the current/last market day.
        
        You can use the following regex to extract underlying ticker, option type, expiry & strike:
        `^(?<symbol>[\w]*)(?<expiry>(\d{2})(\d{2})(\d{2}))(?<type>[PC])(?<strike>\d{8})$`
        
        Keep in mind that the strike needs to be divided by 1,000.
      operationId: getTradeableOptionContractTickers
      parameters:
        - description: ticker symbol
          in: path
          name: ticker
          required: true
          schema:
            $ref: '#/components/schemas/SingleTicker'
        - description: the date to queryas a iso formatted string 'YYYY-MM-DD'
          in: query
          name: date
          required: false
          example: 2020-01-01
          schema:
            $ref: '#/components/schemas/Trading Day'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Option Chains response'
          description: Succeeded
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error Message'
          description: Unprocessable Entity
        '500':
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Error Message on an internal server error.'
          description: Internal Server Error
      summary: Tradeable Option Contracts By Ticker
      tags:
        - stock
  /api/stock/{ticker}/option-contracts:
    get:
      callbacks: {}
      description: |
        Returns all option contracts for the given ticker
      operationId: getOptionContracts
      parameters:
        - description: ticker symbol
          in: path
          name: ticker
          required: true
          schema:
            $ref: '#/components/schemas/SingleTicker'
        - description: iso date string of the contract expiry
          in: query
          name: expiry
          required: false
          schema:
            $ref: '#/components/schemas/Expiry dates'
        - description: enter "put" or "call" to filter by option type
          in: query
          name: option_type
          required: false
          schema:
            $ref: '#/components/schemas/Expiry dates'
        - description: Wether to only return chains where volume > open interest
          example:
            - true
            - false
          in: query
          name: vol_greater_oi
          required: false
          schema:
            type: boolean
            allowEmptyValue: true
        - description: Wether to only return chains where volume > 0
          example:
            - true
            - false
          in: query
          name: exclude_zero_vol_chains
          required: false
          schema:
            type: boolean
            allowEmptyValue: true
        - description: Wether to only return chains which do not expire on the same day
          example:
            - true
            - false
          in: query
          name: exclude_zero_dte
          required: false
          schema:
            type: boolean
            allowEmptyValue: true
        - description: Wether to only return chains where open interest > 0
          example:
            - true
            - false
          in: query
          name: exclude_zero_oi_chains
          required: false
          schema:
            type: boolean
            allowEmptyValue: true
        - description: Wether to only return chains which are out of the money
          in: query
          name: maybe_otm_only
          required: false
          schema:
            type: boolean
            allowEmptyValue: true
        - description: Limit the number of results returned
          in: query
          name: limit
          example:
            - 10
            - 100
          required: false
          schema:
            $ref: '#/components/schemas/DynLimitAqamqyhhbyd'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Option contracts'
          description: Succeeded
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error Message'
          description: Unprocessable Entity
        '500':
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Error Message on an internal server error.'
          description: Internal Server Error
      summary: Option contracts
      tags:
        - stock
  /api/stock/{ticker}/option/stock-price-levels:
    get:
      callbacks: {}
      description: |
        Returns the call and put volume per price level for the given ticker.
      operationId: getOptionVolumeByPriceLevel
      parameters:
        - description: ticker of the financial instrument
          in: path
          name: ticker
          required: true
          schema:
            $ref: '#/components/schemas/SingleTicker'
        - description: iso date string of the Trading Day to return, defaults to the last Trading Day
          in: query
          name: date
          required: false
          example: 2020-01-01
          schema:
            $ref: '#/components/schemas/Trading Day'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Option Price Level'
          description: Succeeded
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error Message'
          description: Unprocessable Entity
        '500':
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Error Message on an internal server error.'
          description: Internal Server Error
      summary: Option Price Levels
      tags:
        - stock
  /api/stock/{ticker}/option/volume-oi-expiry:
    get:
      callbacks: {}
      description: |
        Returns the total volume and open interest per expiry for the given ticker.
      operationId: getVolumeOpenInterestByExpiry
      parameters:
        - description: the ticker of the financial instrument
          in: path
          name: ticker
          required: true
          schema:
            $ref: '#/components/schemas/SingleTicker'
        - description: iso date string of the Trading Day to return, defaults to the last Trading Day
          in: query
          name: date
          required: false
          example: 2020-01-01
          schema:
            $ref: '#/components/schemas/Trading Day'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Volume & OI per Expiry'
          description: Succeeded
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error Message'
          description: Unprocessable Entity
        '500':
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Error Message on an internal server error.'
          description: Internal Server Error
      summary: Volume & OI per Expiry
      tags:
        - stock
  /api/stock/{ticker}/options-volume:
    get:
      title: options_volume
      callbacks: {}
      description: |
        Returns the options volume & premium for all trade executions
        that happened on a given trading date for the given ticker.
      operationId: getOptionsVolume
      parameters:
        - description: the ticker of the financial instrument
          in: path
          name: ticker
          required: true
          schema:
            $ref: '#/components/schemas/SingleTicker'
        - description: limit the results returned
          in: query
          name: limit
          required: false
          schema:
            $ref: '#/components/schemas/DynLimitAbmmvsjqabs'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ticker Options Volume'
          description: Succeeded
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error Message'
          description: Unprocessable Entity
        '500':
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Error Message on an internal server error.'
          description: Internal Server Error
      summary: Options Volume
      tags:
        - stock
  /api/stock/{ticker}/spot-exposures:
    get:
      callbacks: {}
      description: |
        Returns the spot GEX exposures for the given ticker per minute.
        
        Spot GEX is the assumed $ value of the given greek (ie. gamma) exposure that market makers need to hedge per 1% change of the underlying stock's price movement. A positive value is long and a negative value is short.
        
        Investors and large funds lower risk and protect their money by selling calls and buying puts. Market makers provide the liquidity to facilitate these trades.
        
        GEX assumes that market makers are part of every transaction and that the bulk of their transactions are buying calls and selling puts to investors hedging their portfolios.
        
        If a market maker has one contract open with a gamma value of 0.05, then if the underlying stock price moves by 1%, that market maker is exposed to $[0.05 * 100 shares * 0.01 * stock price * underlying parameter of the greek variable (for gamma this variable is the stock price)]. The total market maker spot exposure is calculated by summing up the spot exposure of all open contracts determined by the daily open interest or by volume.
        
        Market makers profit from the bid-ask spreads and as such, they constantly gamma hedge (they buy and sell shares to keep their positions delta neutral).
        
        Long call positions are positive gamma - as the stock price increases and delta rises (approaches 1), market makers hedge by selling shares, and they buy shares if the stock price decreases and delta falls.
        
        Short put positions are negative gamma - as the stock price increases and delta falls (approaches -1), market makers hedge by buying shares, and they sell shares if the stock price decreases and delta rises.
        
        As such, in the event of large positive gamma, volatility is suppressed as market makers will hedge by buying as the stock price decreases and selling as the stock price increases. And in the event of large negative gamma, volatility is amplified as market makers will hedge by buying as the stock price increases and selling as the stock price decreases.
      operationId: getSpotExposures
      parameters:
        - description: the ticker of the financial instrument
          in: path
          name: ticker
          required: true
          schema:
            $ref: '#/components/schemas/SingleTicker'
        - description: iso date string of the Trading Day to return, defaults to the last Trading Day
          in: query
          name: date
          required: false
          example: 2020-01-01
          schema:
            $ref: '#/components/schemas/Trading Day'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Spot GEX exposures per 1min'
          description: Succeeded
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error Message'
          description: Unprocessable Entity
        '500':
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Error Message on an internal server error.'
          description: Internal Server Error
      summary: Spot GEX exposures per 1min
      tags:
        - stock
  /api/stock/{ticker}/spot-exposures/strike:
    get:
      callbacks: {}
      description: |
        Returns the most recent spot GEX exposures across all strikes for the given ticker on a given date. Calculated either with open interest or with volume.
        
        Spot GEX is the assumed $ value of the given greek (ie. gamma) exposure that market makers need to hedge per 1% change of the underlying stock's price movement. A positive value is long and a negative value is short.
        
        Investors and large funds lower risk and protect their money by selling calls and buying puts. Market makers provide the liquidity to facilitate these trades.
        
        GEX assumes that market makers are part of every transaction and that the bulk of their transactions are buying calls and selling puts to investors hedging their portfolios.
        
        If a market maker has one contract open with a gamma value of 0.05, then if the underlying stock price moves by 1%, that market maker is exposed to $[0.05 * 100 shares * 0.01 * stock price * underlying parameter of the greek variable (for gamma this variable is the stock price)]. The total market maker spot exposure is calculated by summing up the spot exposure of all open contracts determined by the daily open interest or by volume.
        
        Market makers profit from the bid-ask spreads and as such, they constantly gamma hedge (they buy and sell shares to keep their positions delta neutral).
        
        Long call positions are positive gamma - as the stock price increases and delta rises (approaches 1), market makers hedge by selling shares, and they buy shares if the stock price decreases and delta falls.
        
        Short put positions are negative gamma - as the stock price increases and delta falls (approaches -1), market makers hedge by buying shares, and they sell shares if the stock price decreases and delta rises.
        
        As such, in the event of large positive gamma, volatility is suppressed as market makers will hedge by buying as the stock price decreases and selling as the stock price increases. And in the event of large negative gamma, volatility is amplified as market makers will hedge by buying as the stock price increases and selling as the stock price decreases.
      operationId: getSpotExposuresByStrike
      parameters:
        - description: the ticker of the financial instrument
          in: path
          name: ticker
          required: true
          schema:
            $ref: '#/components/schemas/SingleTicker'
        - description: iso date string of the Trading Day to return, defaults to the last Trading Day
          in: query
          name: date
          required: false
          example: 2020-01-01
          schema:
            $ref: '#/components/schemas/Trading Day'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Spot greek exposures by strike'
          description: Succeeded
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error Message'
          description: Unprocessable Entity
        '500':
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Error Message on an internal server error.'
          description: Internal Server Error
      summary: Spot GEX exposures by strike
      tags:
        - stock
  /api/stock/{ticker}/stock-volume-price-levels:
    get:
      callbacks: {}
      description: |
        Returns the lit & off lit stock volume per price level for the given ticker.
        
        The price level is calculated by dividing the stock volume by the total
        ----
        Important: The volume does **NOT** represent the full market dialy volume. It
        only represents the volume of executed trades on exchanges operated by Nasdaq
        and FINRA off lit exchanges.
      operationId: getVolumeByPriceLevel
      parameters:
        - description: ticker symbol
          in: path
          name: ticker
          required: true
          schema:
            $ref: '#/components/schemas/SingleTicker'
        - description: iso date string of the Trading Day to return, defaults to the last Trading Day
          in: query
          name: date
          required: false
          example: 2020-01-01
          schema:
            $ref: '#/components/schemas/Trading Day'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Off Lit Price Level'
          description: Succeeded
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error Message'
          description: Unprocessable Entity
        '500':
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Error Message on an internal server error.'
          description: Internal Server Error
      summary: Off/Lit Price Levels
      tags:
        - stock
  /api/stock/{ticker}/volatility/term-structure:
    get:
      callbacks: {}
      description: |
        The average of the latest volatilities for the at the money call and put contracts for every expiry date.
      operationId: getVolatilityTermStructure
      parameters:
        - description: the ticker of the financial instrument
          in: path
          name: ticker
          required: true
          schema:
            $ref: '#/components/schemas/SingleTicker'
        - description: iso date string of the Trading Day to return, defaults to the last Trading Day
          in: query
          name: date
          required: false
          example: 2020-01-01
          schema:
            $ref: '#/components/schemas/Trading Day'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Implied Volatility Term Structure'
          description: Succeeded
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error Message'
          description: Unprocessable Entity
        '500':
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Error Message on an internal server error.'
          description: Internal Server Error
      summary: Implied Volatility Term Structure
      tags:
        - stock
security:
  - authorization: []
servers:
  - url: https://api.unusualwhales.com
    variables: {}
tags:
  - name: stock
    description: methods to retrieve information about a given stock
    externalDocs:
      url: https://api.unusualwhales.com/docs
  - name: darkpool
    description: methods to retrieve darkpool trades
    externalDocs:
      url: https://api.unusualwhales.com/docs
  - name: congress
    description: Methods to retrieve data about congressional Trades
    externalDocs:
      url: https://api.unusualwhales.com/docs
  - name: etfs
    description: Methods to retrieve data about ETFs
    externalDocs:
      url: https://api.unusualwhales.com/docs
  - name: market
    description: Summary level statistics for sector and market performance
    externalDocs:
      url: https://api.unusualwhales.com/docs
  - name: flow
    description: Option order flow endpoints
    externalDocs:
      url: https://api.unusualwhales.com/docs
  - name: option-contract
    description: Option Contract data
    externalDocs:
      url: https://api.unusualwhales.com/docs
      
